{"version":3,"sources":["store/theme.js","store/types.js","store/atoms.js","store/selectors.js","ThemedIcon/ThemedIcon.js","ThemedIcon/index.js","CreateLinkButton/CreateLinkButton.js","CreateLinkButton/index.js","Settings/Settings.js","Settings/index.js","Header/Header.js","ValueTextField/ValueTextField.js","ValueTextField/index.js","ValuePctTextField/ValuePctTextField.js","ValuePctTextField/index.js","AnnualRevenueIncrease/AnnualRevenueIncrease.js","AnnualRevenueIncrease/index.js","AnnualOperatingExpenseIncrease/AnnualOperatingExpenseIncrease.js","AnnualOperatingExpenseIncrease/index.js","AnnualReinvestmentReturn/AnnualReinvestmentReturn.js","AnnualReinvestmentReturn/index.js","AnnualAppreication/AnnualAppreciation.js","AnnualAppreication/index.js","ForecastInput/ForecastInput.js","ForecastInput/index.js","ReactPlotly/ReactPlotly.js","ReactPlotly/index.js","ReturnFcstGraph/ReturnFcstGraph.js","ReturnFcstGraph/index.js","BalanceSheetGraph/BalanceSheetGraph.js","BalanceSheetGraph/index.js","DetailsListCustom/DetailsListCustom.js","DetailsListCustom/index.js","CustomFcstResultLabel/CustomFcstResultLabel.js","CustomFcstResultLabel/index.js","ForecastOutput/ForecastOutput.js","ForecastOutput/index.js","ForecastPanel/ForecastPanel.js","ForecastPanel/index.js","Address/Address.js","Address/index.js","Url/Url.js","Url/index.js","NumUnits/NumUnits.js","NumUnits/index.js","NumInvestors/NumInvestors.js","NumInvestors/index.js","BrrrrToggle/BrrrrToggle.js","BrrrrToggle/index.js","PropertyDetails/index.js","PropertyDetails/PropertyDetails.js","PurchasePrice/index.js","PurchasePrice/PurchasePrice.js","DownPayment/index.js","DownPayment/DownPayment.js","InterestRate/index.js","InterestRate/InterestRate.js","MortgageYears/index.js","MortgageYears/MortgageYears.js","MortgagePaymentsPerYear/index.js","MortgagePaymentsPerYear/MortgagePaymentsPerYear.js","ClosingCosts/index.js","ClosingCosts/ClosingCosts.js","Repairs/index.js","Repairs/Repairs.js","AfterRepairValue/index.js","AfterRepairValue/AfterRepairValue.js","LoanToValue/index.js","LoanToValue/LoanToValue.js","PurchaseDetails/index.js","PurchaseDetails/PurchaseDetails.js","PropertyTax/index.js","PropertyTax/PropertyTax.js","PropertyTaxFreq/index.js","PropertyTaxFreq/PropertyTaxFreq.js","Insurance/index.js","Insurance/Insurance.js","InsuranceFreq/index.js","InsuranceFreq/InsuranceFreq.js","ExpenseUtilities/index.js","ExpenseUtilities/ExpenseUtilities.js","LeasingCosts/index.js","LeasingCosts/LeasingCosts.js","AvgOccupancy/index.js","AvgOccupancy/AvgOccupancy.js","Management/index.js","Management/Management.js","Maintenance/index.js","Maintenance/Maintenance.js","ExpenseDetails/index.js","ExpenseDetails/ExpenseDetails.js","IncomePerUnit/index.js","IncomePerUnit/IncomePerUnit.js","VacancyRate/index.js","VacancyRate/VacancyRate.js","IncomeDetails/index.js","IncomeDetails/IncomeDetails.js","ForecastButton/index.js","ForecastButton/ForecastButton.js","CalculatorBreak/index.js","CalculatorBreak/CalculatorBreak.js","CustomResultLabel/CustomResultLabel.js","CustomResultLabel/index.js","ResultTextField/ResultTextField.js","ResultTextField/index.js","CollapsibleDiv/CollapsibleDiv.js","CollapsibleDiv/index.js","CalculatorOutput/index.js","CalculatorOutput/CalculatorOutput.js","BasicTabPanel/index.js","BasicTabPanel/BasicTabPanel.js","ValueStrTextField/ValueStrTextField.js","ValueStrTextField/index.js","PurchasePriceSim/index.js","PurchasePriceSim/PurchasePriceSim.js","InterestRateSim/index.js","InterestRateSim/InterestRateSim.js","ClosingCostsSim/index.js","ClosingCostsSim/ClosingCostsSim.js","RepairsSim/index.js","RepairsSim/RepairsSim.js","AfterRepairValueSim/index.js","AfterRepairValueSim/AfterRepairValueSim.js","PurchaseDetailsSim/index.js","PurchaseDetailsSim/PurchaseDetailsSim.js","PropertyTaxSim/index.js","PropertyTaxSim/PropertyTaxSim.js","InsuranceSim/index.js","InsuranceSim/InsuranceSim.js","ExpenseUtilitiesSim/index.js","ExpenseUtilitiesSim/ExpenseUtilitiesSim.js","ManagementSim/index.js","ManagementSim/ManagementSim.js","LeasingCostsSim/index.js","LeasingCostsSim/LeasingCostsSim.js","AvgOccupancySim/index.js","AvgOccupancySim/AvgOccupancySim.js","MaintenanceSim/index.js","MaintenanceSim/MaintenanceSim.js","ExpenseDetailsSim/index.js","ExpenseDetailsSim/ExpenseDetailsSim.js","IncomePerUnitSim/index.js","IncomePerUnitSim/IncomePerUnitSim.js","VacancyRateSim/index.js","VacancyRateSim/VacancyRateSim.js","IncomeDetailsSim/index.js","IncomeDetailsSim/IncomeDetailsSim.js","utils/simulations.worker.js","SimulationButton/SimulationButton.js","SimulationButton/index.js","SimulationInput/index.js","SimulationInput/SimulationInput.js","CashOnCashHistGraph/CashOnCashHistGraph.js","CashOnCashHistGraph/index.js","CashFlowPerUnitHistGraph/CashFlowPerUnitHistGraph.js","CashFlowPerUnitHistGraph/index.js","SimulationStatistics/SimulationStatistics.js","SimulationStatistics/index.js","SimulationOutput/index.js","SimulationOutput/SimulationOutput.js","AdvancedSimTabPanel/index.js","AdvancedSimTabPanel/AdvancedSimTabPanel.js","CalculatorTabs/index.js","CalculatorTabs/CalculatorTabs.js","LinkCreator/index.js","LinkCreator/LinkCreator.js","AppContainer/index.js","AppContainer/AppContainer.js","App/App.js","reportWebVitals.js","index.js"],"names":["themes","default","createTheme","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","dark","PaymentsYearOptions","key","text","FrequencyOptions","DistributionOptions","themeState","atom","settingsVisibleState","addressState","urlState","purchasePriceState","downPaymentState","interestRateState","mortgageYearsState","mortgagePaymentsPerYearState","closingCostsState","repairsState","propertyTaxState","propertyTaxFreqState","insuranceState","insuranceFreqState","expenseUtilitiesState","managementState","leasingCostsState","avgOccupancyState","maintenanceState","incomePerUnitState","numUnitsState","vacancyRateState","incomeUtilitiesState","numInvestorsState","devState","JSON","parse","process","brrrrState","afterRepairValueState","loanToValueState","simsState","Array","fill","simsRunState","forecastState","annRevIncState","annOpExpIncState","annReinvRetState","annApprState","purchasePriceDistState","interestRateDistState","closingCostsDistState","repairsDistState","propertyTaxDistState","insuranceDistState","expenseUtilitiesDistState","managementDistState","leasingCostsDistState","avgOccupancyDistState","maintenanceDistState","incomePerUnitDistState","vacancyRateDistState","incomeUtilitiesDistState","afterRepairValueDistState","purchasePriceMinState","interestRateMinState","closingCostsMinState","repairsMinState","propertyTaxMinState","insuranceMinState","expenseUtilitiesMinState","managementMinState","leasingCostsMinState","avgOccupancyMinState","maintenanceMinState","incomePerUnitMinState","vacancyRateMinState","incomeUtilitiesMinState","afterRepairValueMinState","purchasePriceMaxState","interestRateMaxState","closingCostsMaxState","repairsMaxState","propertyTaxMaxState","insuranceMaxState","expenseUtilitiesMaxState","managementMaxState","leasingCostsMaxState","avgOccupancyMaxState","maintenanceMaxState","incomePerUnitMaxState","vacancyRateMaxState","incomeUtilitiesMaxState","afterRepairValueMaxState","purchasePriceChoiceState","interestRateChoiceState","closingCostsChoiceState","repairsChoiceState","propertyTaxChoiceState","insuranceChoiceState","expenseUtilitiesChoiceState","managementChoiceState","leasingCostsChoiceState","avgOccupancyChoiceState","maintenanceChoiceState","incomePerUnitChoiceState","vacancyRateChoiceState","incomeUtilitiesChoiceState","afterRepairValueChoiceState","modalOpenState","simsPctCompleteState","getDownPayment","downPymt","purchasePrice","parseFloat","getCashOutRefinance","loanToValue","afterRepairValue","getCapitalRequired","repairs","brrrr","getAmountFinanced","getClosingCosts","closeCosts","getMortgagePaymentsPerYear","mortgagePaymentsPerYear","getValuePerYear","val","freq","getGrossRentalIncomePerMonth","incPerUnit","numUnts","getVacancyPerMonth","vacancy","getNetRentalIncomePerMonth","getPropertyManagementFee","mgmt","leasingCosts","avgOccupancy","getMaintenancePerMonth","maint","getExpensesPerMonth","utilities","propTax","propTaxFreq","insurance","insuranceFreq","getOperatingIncomePerMonth","getOperatingIncomePerYear","getMortgagePaymentPerMonth","interestRate","paymentsPerYear","years","amountFinanced","numPeriods","pvif","Math","pow","pmt","getBalanceRemaining","elapsedYears","nPmts","getMortgagePaymentPerYear","getCashFlowPerMonth","getCashFlowPerYear","getTotalInvesment","downPaymentCost","selector","get","toFixed","capitalRequired","closingCost","propTaxPerYear","propTaxPerMonth","insurancePerYear","insurancePerMonth","grossRentalIncomePerMonth","vacancyPerMonth","netRentalIncomePerMonth","propertyManagementPerMonth","maintenancePerMonth","expensesPerMonth","expenseIncomeRatioPerMonth","income","NaN","getExpenseIncomeRatioPerMonth","netOperatingIncomePerMonth","netOperatingIncomePerYear","mortgagePaymentPerMonth","mortgagePaymentPerYear","cashFlowPerMonth","cashFlowPerMonthPerInvestor","numInvestors","cashFlowPerYear","cashFlowPerYearPerInvestor","debtCoverageRatio","cashFlowPerUnitPerMonth","totalInvestment","totalInvestmentPerInvestor","cashOnCash","totalInvesment","goodCoC","max","getCashOnCash","capRate","grossMonthlyRentPriceRatio","cashOutRefinance","forecastValue","rate","fcst_val","i","addElementwise","arrOfArrs","newArr","length","j","forecastRevenue","forecastVacancy","forecastPropertyManagement","forecastMaintenance","forecastPropertyTax","forecastInsurance","forecastUtilities","forecastTotalExpenses","forecastNetOperatingIncome","map","x","forecastMortgage","mtgPmtPerYr","mortgageYears","forecastMtgValue","forecastCashFlow","forecastCashOnCash","forecastAccumPrincipal","forecastAccumPrinc","forecastEquityAccrued","arr","forecastAppreciation","purch_price","arv","appr_rate","forecastReinvCashFlows","return_rate","cm_arr","cf_arr","forecastTotalReturn","forecastTotalROI","forecastCmAnnualizedReturn","cm_ret","amt_fin","tot_ret_arr","tot_inv","ThemedIcon","className","otherProps","theme","useRecoilValue","iconClass","useMemo","mergeStyles","color","FontIcon","dialogStyles","main","maxWidth","CreateLinkButton","address","url","downPayment","closingCosts","propertyTax","propertyTaxFreq","expenseUtilities","management","maintenance","incomePerUnit","numUnits","vacancyRate","incomeUtilities","forecast","annRevInc","annOpExpInc","annReinvRet","annAppr","purchasePriceDist","interestRateDist","closingCostsDist","repairsDist","propertyTaxDist","insuranceDist","expenseUtilitiesDist","managementDist","leasingCostsDist","avgOccupancyDist","maintenanceDist","incomePerUnitDist","vacancyRateDist","incomeUtilitiesDist","afterRepairValueDist","purchasePriceMin","interestRateMin","closingCostsMin","repairsMin","propertyTaxMin","insuranceMin","expenseUtilitiesMin","managementMin","leasingCostsMin","avgOccupancyMin","maintenanceMin","incomePerUnitMin","vacancyRateMin","incomeUtilitiesMin","afterRepairValueMin","purchasePriceMax","interestRateMax","closingCostsMax","repairsMax","propertyTaxMax","insuranceMax","expenseUtilitiesMax","managementMax","leasingCostsMax","avgOccupancyMax","maintenanceMax","incomePerUnitMax","vacancyRateMax","incomeUtilitiesMax","afterRepairValueMax","purchasePriceChoice","interestRateChoice","closingCostsChoice","repairsChoice","propertyTaxChoice","insuranceChoice","expenseUtilitiesChoice","managementChoice","leasingCostsChoice","avgOccupancyChoice","maintenanceChoice","incomePerUnitChoice","vacancyRateChoice","incomeUtilitiesChoice","afterRepairValueChoice","useState","link","setLink","dialogVisible","setDialogVisible","onClickCreateLink","useCallback","u","URL","window","location","href","params","URLSearchParams","search","set","LZUTF8","encodeBase64","compress","stringify","history","replaceState","pathname","onHideDialog","modalProps","isBlocking","styles","dragOptions","undefined","fontSize","height","width","paddingTop","margin","cursor","backgroundColor","copyCreateLink","e","navigator","clipboard","writeText","dialogContentProps","type","DialogType","normal","title","closeButtonAriaLabel","subText","iconName","onClick","Dialog","hidden","onDismiss","DialogFooter","PrimaryButton","DefaultButton","Settings","target","useRecoilState","settingsVisible","setSettingsVisible","hideSettings","setTheme","setDarkMode","ev","checked","Callout","style","padding","Toggle","label","defaultChecked","onText","offText","onChange","Header","toggleSettings","settingsRef","useRef","display","flex","Label","ref","defaultValidate","s","ValueTextField","props","defaultValue","validate","restProps","setVal","useEffect","onChangeCallback","txt","newVal","onFocus","select","TextField","inputClassName","value","rangeCheck","ValuePctTextField","suffix","AnnualRevenueIncrease","setAnnRevInc","AnnualOperatingExpenseIncrease","setAnnOpExpInc","AnnualReinvestmentReturn","setAnnReinvRet","AnnualAppreciation","setAnnApprState","ForecastInput","ReactPlotly","plotComponentFactory","Plotly","plotConfig","modeBarButtonsToRemove","displaylogo","scrollZoom","ReturnFcstGraph","forecastCashOnCashVal","forecastTotalROIVal","forecastCmAnnualizedReturnVal","updateLayout","data","from","keys","slice","y","mode","marker","name","recalc","dimensions","setDimensions","useLayoutEffect","current","getBoundingClientRect","toJSON","handleResize","addEventListener","removeEventListener","useDimensions","graphDivRef","layout","xaxis","gridcolor","range","yaxis","side","anchor","showline","autorange","tickformat","paper_bgcolor","plot_bgcolor","font","showlegend","assignRef","id","divId","useResizeHandler","config","BalanceSheetGraph","forecastRevenueVal","forecastTotalExpensesVal","forecastMortgageVal","forecastCashFlowVal","hoverformat","getTheme","DetailsListCustom","to_highlight","DetailsList","onRenderRow","item","customStyles","includes","root","fontWeight","DetailsRow","stackTokens","childrenGap","labelCalloutStackStyles","iconButtonStyles","marginBottom","button","icon","lineHeight","tooltip","marginLeft","marginRight","rootHovered","labelStyles","verticalAlign","calloutProps","gapSpace","hostStyles","iconProps","CustomFcstResultLabel","useBoolean","isCalloutVisible","toggleIsCalloutVisible","toggle","descriptionId","useId","iconButtonId","Stack","horizontal","horizontalAlign","tokens","TooltipHost","description","IconButton","setInitialFocus","ariaDescribedBy","role","ForecastOutput","forecastVacancyVal","forecastPropertyManagementVal","forecastMaintenanceVal","forecastUtilitiesVal","forecastPropertyTaxVal","forecastInsuranceVal","forecastNetOperatingIncomeVal","forecastAppreciationVal","forecastReinvCashFlowsVal","forecastEquityAccruedVal","forecastTotalReturnVal","createItem","info","desc","replace","fieldName","minWidth","isResizable","cols","items","columns","selectionMode","ForecastPanel","setForecast","document","getElementById","scrollIntoView","Panel","isOpen","headerText","isHiddenOnDismiss","onOuterClick","PanelType","large","Address","setAddress","onChangeAddress","onClickMap","open","Url","setURL","onChangeURL","onClickURL","NumUnits","setNumUnits","NumInvestors","setNumInvestors","BrrrrToggle","setBrrrr","Checkbox","PropertyDetails","PurchasePrice","setPurchasePrice","DownPayment","setDownPayment","InterestRate","setInterestRate","MortgageYears","setMortgageYears","MortgagePaymentsPerYear","setMortgagePaymentsPerYear","onChangeMortgagePaymentsPerYear","Dropdown","defaultSelectedKey","options","ClosingCosts","setClosingCosts","Repairs","setRepairs","AfterRepairValue","setAfterRepairValue","LoanToValue","setLoanToValue","PurchaseDetails","PropertyTax","setPropertyTax","PropertyTaxFreq","setPropertyTaxFreq","onChangePropertyTaxFreq","placeholder","Insurance","setInsurance","InsuranceFreq","setInsuranceFreq","onChangeInsuranceFreq","ExpenseUtilities","setExpenseUtilities","LeasingCosts","setLeasingCosts","AvgOccupancy","setAvgOccupancy","Management","setManagement","Maintenance","setMaintenance","ExpenseDetails","IncomePerUnit","setIncomePerUnit","VacancyRate","setVacancyRate","IncomeDetails","ForecastButton","CalculatorBreak","dev","webMonetizedStatus","useStatus","showGoogleAds","async","src","class","data-ad-client","data-ad-slot","data-ad-format","data-full-width-responsive","CustomResultLabel","ariaLabel","getDepthClassName","depth","ResultTextField","valueKey","labelId","readOnly","transform","iconClassFlip","CollapsibleDiv","children","defaultOpen","setOpen","onClickHeader","paddingLeft","CalculatorOutput","multipleInvestors","parseInt","BasicTabPanel","ValueStrTextField","PurchasePriceSim","setPurchasePriceDist","setPurchasePriceMin","setPurchasePriceMax","setPurchasePriceChoice","onChangePurchasePriceDist","InterestRateSim","setInterestRateDist","setInterestRateMin","setInterestRateMax","setInterestRateChoice","onChangeInterestRateDist","ClosingCostsSim","setClosingCostsDist","setClosingCostsMin","setClosingCostsMax","setClosingCostsChoice","onChangeClosingCostsDist","RepairsSim","setRepairsDist","setRepairsMin","setRepairsMax","setRepairsChoice","onChangeRepairsDist","AfterRepairValueSim","setAfterRepairValueDist","setAfterRepairValueMin","setAfterRepairValueMax","setAfterRepairValueChoice","onChangeAfterRepairValueDist","PurchaseDetailsSim","PropertyTaxSim","setPropertyTaxDist","setPropertyTaxMin","setPropertyTaxMax","setPropertyTaxChoice","onChangePropertyTaxDist","InsuranceSim","setInsuranceDist","setInsuranceMin","setInsuranceMax","setInsuranceChoice","onChangeInsuranceDist","ExpenseUtilitiesSim","setExpenseUtilitiesDist","setExpenseUtilitiesMin","setExpenseUtilitiesMax","setExpenseUtilitiesChoice","onChangeExpenseUtilitiesDist","ManagementSim","setManagementDist","setManagementMin","setManagementMax","setManagementChoice","onChangeManagementDist","LeasingCostsSim","setLeasingCostsDist","setLeasingCostsMin","setLeasingCostsMax","setLeasingCostsChoice","onChangeLeasingCostsDist","AvgOccupancySim","setAvgOccupancyDist","setAvgOccupancyMin","setAvgOccupancyMax","setAvgOccupancyChoice","onChangeAvgOccupancyDist","MaintenanceSim","setMaintenanceDist","setMaintenanceMin","setMaintenanceMax","setMaintenanceChoice","onChangeMaintenanceDist","ExpenseDetailsSim","IncomePerUnitSim","setIncomePerUnitDist","setIncomePerUnitMin","setIncomePerUnitMax","setIncomePerUnitChoice","onChangeIncomePerUnitDist","VacancyRateSim","setVacancyRateDist","setVacancyRateMin","setVacancyRateMax","setVacancyRateChoice","onChangeVacancyRateDist","IncomeDetailsSim","Worker_fn","Worker","__webpack_public_path__","cancelIcon","contentStyles","mergeStyleSets","container","flexFlow","alignItems","header","fonts","Large","borderTop","FontWeights","semibold","body","overflowY","selectors","p","marginTop","SimulationButton","modalOpen","setModalOpen","simsPctComplete","setSimsPctComplete","sims","setSims","setSimsRun","useSetRecoilState","hideModal","titleId","worker","onmessage","progress","results","Object","postMessage","purchasePrice_dist","purchasePrice_min","purchasePrice_max","purchasePrice_choice","interestRate_dist","interestRate_min","interestRate_max","interestRate_choice","closingCosts_dist","closingCosts_min","closingCosts_max","closingCosts_choice","repairs_dist","repairs_min","repairs_max","repairs_choice","propertyTax_dist","propertyTax_min","propertyTax_max","propertyTax_choice","insurance_dist","insurance_min","insurance_max","insurance_choice","expenseUtilities_dist","expenseUtilities_min","expenseUtilities_max","expenseUtilities_choice","management_dist","management_min","management_max","management_choice","leasingCosts_dist","leasingCosts_min","leasingCosts_max","leasingCosts_choice","avgOccupancy_dist","avgOccupancy_min","avgOccupancy_max","avgOccupancy_choice","maintenance_dist","maintenance_min","maintenance_max","maintenance_choice","incomePerUnit_dist","incomePerUnit_min","incomePerUnit_max","incomePerUnit_choice","vacancyRate_dist","vacancyRate_min","vacancyRate_max","vacancyRate_choice","incomeUtilities_dist","incomeUtilities_min","incomeUtilities_max","incomeUtilities_choice","afterRepairValue_dist","afterRepairValue_min","afterRepairValue_max","afterRepairValue_choice","Modal","titleAriaId","containerClassName","ProgressIndicator","percentComplete","SimulationInput","CashOnCashHistGraph","histnorm","xbins","size","percentile","CashFlowPerUnitHistGraph","getStats","mean","sampleStdev","min","binarySearch","start","end","mid","floor","getTargets","data_sorted","sort","a","b","SimulationStatistics","simsRun","calcStats","statistics","cocStats","cfpupmStats","tiStats","statisticsItems","calcTargets","statsiticsColumns","targetItems","targetColumns","align","SimulationOutput","AdvancedSimTabPanel","Text","variant","CalculatorTabs","selectedTab","setSelectedTab","onSelectTab","idx","lastIdx","basicTabStyle","borderBottom","advancedTabStyle","onSelect","LinkCreator","AppContainer","loadTheme","setUrl","setIncomeUtilities","setAnnAppr","setIncomeUtilitiesDist","setIncomeUtilitiesMin","setIncomeUtilitiesMax","setIncomeUtilitiesChoice","decompress","decodeBase64","error","initializeIcons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.26fdfeb7.chunk.js","sourcesContent":["import { createTheme } from '@fluentui/react';\n\nconst themes = {\n    default: createTheme({\n        palette: {\n            themePrimary: '#0078d4',\n            themeLighterAlt: '#eff6fc',\n            themeLighter: '#deecf9',\n            themeLight: '#c7e0f4',\n            themeTertiary: '#71afe5',\n            themeSecondary: '#2b88d8',\n            themeDarkAlt: '#106ebe',\n            themeDark: '#005a9e',\n            themeDarker: '#004578',\n            neutralLighterAlt: '#faf9f8',\n            neutralLighter: '#f3f2f1',\n            neutralLight: '#edebe9',\n            neutralQuaternaryAlt: '#e1dfdd',\n            neutralQuaternary: '#d0d0d0',\n            neutralTertiaryAlt: '#c8c6c4',\n            neutralTertiary: '#a19f9d',\n            neutralSecondary: '#605e5c',\n            neutralPrimaryAlt: '#3b3a39',\n            neutralPrimary: '#323130',\n            neutralDark: '#201f1e',\n            black: '#000000',\n            white: '#ffffff',\n        }\n    }),\n    dark: createTheme({\n        palette: {\n            themePrimary: '#0078d4',\n            themeLighterAlt: '#eff6fc',\n            themeLighter: '#deecf9',\n            themeLight: '#c7e0f4',\n            themeTertiary: '#71afe5',\n            themeSecondary: '#2b88d8',\n            themeDarkAlt: '#106ebe',\n            themeDark: '#005a9e',\n            themeDarker: '#004578',\n            neutralLighterAlt: '#1c1c1c',\n            neutralLighter: '#252525',\n            neutralLight: '#343434',\n            neutralQuaternaryAlt: '#3d3d3d',\n            neutralQuaternary: '#454545',\n            neutralTertiaryAlt: '#656464',\n            neutralTertiary: '#f5f5f5',\n            neutralSecondary: '#f6f6f6',\n            neutralPrimaryAlt: '#f8f8f8',\n            neutralPrimary: '#efefef',\n            neutralDark: '#fbfbfb',\n            black: '#fdfdfd',\n            white: '#121212',\n        }\n    })\n};\n\nexport { themes };","export const PaymentsYearOptions = [\n    { key: '1', text: '1' },\n    { key: '2', text: '2' },\n    { key: '3', text: '3' },\n    { key: '4', text: '4' },\n    { key: '5', text: '5' },\n    { key: '6', text: '6' },\n    { key: '7', text: '7' },\n    { key: '8', text: '8' },\n    { key: '9', text: '9' },\n    { key: '10', text: '10' },\n    { key: '11', text: '11' },\n    { key: '12', text: '12' },\n];\n\nexport const FrequencyOptions = [\n    { key: '0', text: 'Annual' },\n    { key: '1', text: 'Bi-Annual' },\n    { key: '2', text: 'Monthly' },\n];\n\nexport const DistributionOptions = [\n    { key: '0', text: 'None' },\n    { key: '1', text: 'Normal' },\n    { key: '2', text: 'Uniform' },\n    { key: '3', text: 'Choice' },\n];","import {\n  atom,\n} from 'recoil';\nimport { themes } from './theme';\n\nimport {\n    PaymentsYearOptions,\n    FrequencyOptions,\n    DistributionOptions,\n} from './types';\n\nexport const themeState = atom({\n    key: \"themeState\",\n    default: themes.default,\n});\n\nexport const settingsVisibleState = atom({\n    key: \"settingsVisibleState\",\n    default: false,\n});\n\nexport const addressState = atom({\n    key: \"address\",\n    default: \"\",\n});\n\nexport const urlState = atom({\n  key: \"url\",\n  default: \"\",\n});\n\nexport const purchasePriceState = atom({\n    key: \"purchasePrice\",\n    default: \"0\",\n});\n\nexport const downPaymentState = atom({\n    key: \"downPayment\",\n    default: \"0\",\n});\n\nexport const interestRateState = atom({\n    key: \"interestRate\",\n    default: \"4\",\n});\n\nexport const mortgageYearsState = atom({\n    key: \"mortgateYears\",\n    default: \"30\",\n});\n\nexport const mortgagePaymentsPerYearState = atom({\n    key: \"mortgagePaymentsPerYear\",\n    default: PaymentsYearOptions[11],\n});\n\nexport const closingCostsState = atom({\n    key: \"closingCosts\",\n    default: \"3\",\n});\n\nexport const repairsState = atom({\n    key: \"repairs\",\n    default: \"0\",\n});\n\nexport const propertyTaxState = atom({\n    key: \"propertyTax\",\n    default: \"0\",\n});\n\nexport const propertyTaxFreqState = atom({\n    key: \"propertyTaxFreq\",\n    default: FrequencyOptions[0].text,\n});\n\nexport const insuranceState = atom({\n    key: \"insurance\",\n    default: \"0\",\n});\n\nexport const insuranceFreqState = atom({\n    key: \"insuranceFreq\",\n    default: FrequencyOptions[0].text,\n});\n\nexport const expenseUtilitiesState = atom({\n    key: \"expenseUtilities\",\n    default: \"0\",\n});\n\nexport const managementState = atom({\n    key: \"management\",\n    default: \"10\",\n});\n\nexport const leasingCostsState = atom({\n    key: \"leasingCosts\",\n    default: \"0\",\n});\n\nexport const avgOccupancyState = atom({\n    key: \"avgOccupancy\",\n    default: \"4\",\n});\n\nexport const maintenanceState = atom({\n    key: \"maintenance\",\n    default: \"10\",\n});\n\nexport const incomePerUnitState = atom({\n    key: \"incomePerUnit\",\n    default: \"0\",\n});\n\nexport const numUnitsState = atom({\n    key: \"numUnits\",\n    default: \"1\",\n});\n\nexport const vacancyRateState = atom({\n    key: \"vacancyRate\",\n    default: \"5\",\n});\n\nexport const incomeUtilitiesState = atom({\n    key: \"incomeUtilities\",\n    default: \"0\",\n});\n\nexport const numInvestorsState = atom({\n    key: \"numInvestors\",\n    default: \"1\",\n});\n\nexport const devState = atom({\n    key: \"dev\",\n    default: JSON.parse(process.env.REACT_APP_DEV),\n});\n\nexport const advancedState = atom({\n    key: \"advanced\",\n    default: false,\n});\n\nexport const brrrrState = atom({\n    key: \"brrrr\",\n    default: false,\n});\n\nexport const afterRepairValueState = atom({\n    key: \"afterRepairValue\",\n    default: \"0\",\n});\n\nexport const loanToValueState = atom({\n    key: \"loanToValue\",\n    default: \"0\",\n});\n\nexport const simsState = atom({\n    key: \"sims\",\n    default: {\"CashOnCash\": Array(10000).fill(null),\n              \"GoodCashOnCash\": Array(10000).fill(true),\n              \"CashFlowPerUnitPerMonth\": Array(10000).fill(null),\n              \"TotalInvestment\": Array(10000).fill(null),}\n});\n\nexport const simsRunState = atom({\n    key: \"simsRun\",\n    default: false,\n});\n\nexport const forecastState = atom({\n    key: \"forecast\",\n    default: false,\n});\n\nexport const annRevIncState = atom({\n    key: \"annRevInc\",\n    default: \"3\",\n});\n\nexport const annOpExpIncState = atom({\n    key: \"annOpExp\",\n    default: \"3\"\n});\n\nexport const annReinvRetState = atom({\n    key: \"annReinvRet\",\n    default: \"8\",\n});\n\nexport const annApprState = atom({\n    key: \"annAppr\",\n    default: \"0.5\"\n});\n\nexport const purchasePriceDistState = atom({\n    key: \"purchasePriceDist\",\n    default: DistributionOptions[0].text,\n});\n\nexport const interestRateDistState = atom({\n    key: \"interestRateDist\",\n    default: DistributionOptions[0].text,\n});\n\nexport const closingCostsDistState = atom({\n    key: \"closingCostsDist\",\n    default: DistributionOptions[0].text,\n});\n\nexport const repairsDistState = atom({\n    key: \"repairsDist\",\n    default: DistributionOptions[0].text,\n});\n\nexport const propertyTaxDistState = atom({\n    key: \"propertyTaxDist\",\n    default: DistributionOptions[0].text,\n});\n\nexport const insuranceDistState = atom({\n    key: \"insuranceDist\",\n    default: DistributionOptions[0].text,\n});\n\nexport const expenseUtilitiesDistState = atom({\n    key: \"expenseUtilitiesDist\",\n    default: DistributionOptions[0].text,\n});\n\nexport const managementDistState = atom({\n    key: \"managementDist\",\n    default: DistributionOptions[0].text,\n});\n\nexport const leasingCostsDistState = atom({\n    key: \"leasingCostsDist\",\n    default: DistributionOptions[0].text,\n});\n\nexport const avgOccupancyDistState = atom({\n    key: \"avgOccupancyDist\",\n    default: DistributionOptions[0].text,\n});\n\nexport const maintenanceDistState = atom({\n    key: \"maintenanceDist\",\n    default: DistributionOptions[0].text,\n});\n\nexport const incomePerUnitDistState = atom({\n    key: \"incomePerUnitDist\",\n    default: DistributionOptions[0].text,\n});\n\nexport const vacancyRateDistState = atom({\n    key: \"vacancyRateDist\",\n    default: DistributionOptions[0].text,\n});\n\nexport const incomeUtilitiesDistState = atom({\n    key: \"incomeUtilitiesDist\",\n    default: DistributionOptions[0].text,\n});\n\nexport const afterRepairValueDistState = atom({\n    key: \"afterRepairValueDist\",\n    default: DistributionOptions[0].text,\n});\n\nexport const purchasePriceMinState = atom({\n    key: \"purchasePriceMin\",\n    default: \"0\",\n});\n\nexport const interestRateMinState = atom({\n    key: \"interestRateMin\",\n    default: \"0\",\n});\n\nexport const closingCostsMinState = atom({\n    key: \"closingCostsMin\",\n    default: \"0\",\n});\n\nexport const repairsMinState = atom({\n    key: \"repairsMin\",\n    default: \"0\",\n});\n\nexport const propertyTaxMinState = atom({\n    key: \"propertyTaxMin\",\n    default: \"0\",\n});\n\nexport const insuranceMinState = atom({\n    key: \"insuranceMin\",\n    default: \"0\",\n});\n\nexport const expenseUtilitiesMinState = atom({\n    key: \"expenseUtilitiesMin\",\n    default: \"0\",\n});\n\nexport const managementMinState = atom({\n    key: \"managementMin\",\n    default: \"0\",\n});\n\nexport const leasingCostsMinState = atom({\n    key: \"leasingCostsMin\",\n    default: \"0\",\n});\n\nexport const avgOccupancyMinState = atom({\n    key: \"avgOccupancyMin\",\n    default: \"0\",\n});\n\nexport const maintenanceMinState = atom({\n    key: \"maintenanceMin\",\n    default: \"0\",\n});\n\nexport const incomePerUnitMinState = atom({\n    key: \"incomePerUnitMin\",\n    default: \"0\",\n});\n\nexport const vacancyRateMinState = atom({\n    key: \"vacancyRateMin\",\n    default: \"0\",\n});\n\nexport const incomeUtilitiesMinState = atom({\n    key: \"incomeUtilitiesMin\",\n    default: \"0\",\n});\n\nexport const afterRepairValueMinState = atom({\n    key: \"afterRepairValueMin\",\n    default: \"0\",\n});\n\nexport const purchasePriceMaxState = atom({\n    key: \"purchasePriceMax\",\n    default: \"0\",\n});\n\nexport const interestRateMaxState = atom({\n    key: \"interestRateMax\",\n    default: \"0\",\n});\n\nexport const closingCostsMaxState = atom({\n    key: \"closingCostsMax\",\n    default: \"0\",\n});\n\nexport const repairsMaxState = atom({\n    key: \"repairsMax\",\n    default: \"0\",\n});\n\nexport const propertyTaxMaxState = atom({\n    key: \"propertyTaxMax\",\n    default: \"0\",\n});\n\nexport const insuranceMaxState = atom({\n    key: \"insuranceMax\",\n    default: \"0\",\n});\n\nexport const expenseUtilitiesMaxState = atom({\n    key: \"expenseUtilitiesMax\",\n    default: \"0\",\n});\n\nexport const managementMaxState = atom({\n    key: \"managementMax\",\n    default: \"0\",\n});\n\nexport const leasingCostsMaxState = atom({\n    key: \"leasingCostsMax\",\n    default: \"0\",\n});\n\nexport const avgOccupancyMaxState = atom({\n    key: \"avgOccupancyMax\",\n    default: \"0\",\n});\n\nexport const maintenanceMaxState = atom({\n    key: \"maintenanceMax\",\n    default: \"0\",\n});\n\nexport const incomePerUnitMaxState = atom({\n    key: \"incomePerUnitMax\",\n    default: \"0\",\n});\n\nexport const vacancyRateMaxState = atom({\n    key: \"vacancyRateMax\",\n    default: \"0\",\n});\n\nexport const incomeUtilitiesMaxState = atom({\n    key: \"incomeUtilitiesMax\",\n    default: \"0\",\n});\n\nexport const afterRepairValueMaxState = atom({\n    key: \"afterRepairValueMax\",\n    default: \"0\",\n});\n\nexport const purchasePriceChoiceState = atom({\n    key: \"purchasePriceChoice\",\n    default: \"0\",\n});\n\nexport const interestRateChoiceState = atom({\n    key: \"interestRateChoice\",\n    default: \"0\",\n});\n\nexport const closingCostsChoiceState = atom({\n    key: \"closingCostsChoice\",\n    default: \"0\",\n});\n\nexport const repairsChoiceState = atom({\n    key: \"repairsChoice\",\n    default: \"0\",\n});\n\nexport const propertyTaxChoiceState = atom({\n    key: \"propertyTaxChoice\",\n    default: \"0\",\n});\n\nexport const insuranceChoiceState = atom({\n    key: \"insuranceChoice\",\n    default: \"0\",\n});\n\nexport const expenseUtilitiesChoiceState = atom({\n    key: \"expenseUtilitiesChoice\",\n    default: \"0\",\n});\n\nexport const managementChoiceState = atom({\n    key: \"managementChoice\",\n    default: \"0\",\n});\n\nexport const leasingCostsChoiceState = atom({\n    key: \"leasingCostsChoice\",\n    default: \"0\",\n});\n\nexport const avgOccupancyChoiceState = atom({\n    key: \"avgOccupancyChoice\",\n    default: \"0\",\n});\n\nexport const maintenanceChoiceState = atom({\n    key: \"maintenanceChoice\",\n    default: \"0\",\n});\n\nexport const incomePerUnitChoiceState = atom({\n    key: \"incomePerUnitChoice\",\n    default: \"0\",\n});\n\nexport const vacancyRateChoiceState = atom({\n    key: \"vacancyRateChoice\",\n    default: \"0\",\n});\n\nexport const incomeUtilitiesChoiceState = atom({\n    key: \"incomeUtilitiesChoice\",\n    default: \"0\",\n});\n\nexport const afterRepairValueChoiceState = atom({\n    key: \"afterRepairValueChoice\",\n    default: \"0\",\n});\n\nexport const modalOpenState = atom({\n    key: \"modalOpenState\",\n    default: false,\n});\n\nexport const simsPctCompleteState = atom({\n    key: \"simsPctCompleteState\",\n    default: \"0\",\n})","import {\n    selector,\n} from 'recoil';\n\nimport {\n    closingCostsState,\n    downPaymentState,\n    purchasePriceState,\n    repairsState,\n    propertyTaxState,\n    propertyTaxFreqState,\n    vacancyRateState,\n    incomePerUnitState,\n    insuranceFreqState,\n    insuranceState,\n    numUnitsState,\n    managementState,\n    leasingCostsState,\n    avgOccupancyState,\n    maintenanceState,\n    expenseUtilitiesState,\n    interestRateState,\n    mortgagePaymentsPerYearState,\n    mortgageYearsState,\n    numInvestorsState,\n    loanToValueState,\n    afterRepairValueState,\n    brrrrState,\n    annRevIncState,\n    annOpExpIncState,\n    annApprState,\n    annReinvRetState,\n} from './atoms';\nimport { FrequencyOptions } from './types';\n\nexport const getDownPayment = (downPymt, purchasePrice) => {\n    return ((parseFloat(downPymt) / 100) * parseFloat(purchasePrice));\n};\n\nexport const getCashOutRefinance = (loanToValue, afterRepairValue, downPymt, purchasePrice) => {\n    return (parseFloat(afterRepairValue) * parseFloat(loanToValue) / 100) - (purchasePrice - getDownPayment(downPymt, purchasePrice));\n};\n\nexport const getCapitalRequired = (downPymt, purchasePrice, repairs, loanToValue, afterRepairValue, brrrr) => {\n    if (!brrrr) return getDownPayment(downPymt, purchasePrice) + parseFloat(repairs); \n    return getDownPayment(downPymt, purchasePrice) + parseFloat(repairs) - getCashOutRefinance(loanToValue, afterRepairValue, downPymt, purchasePrice);\n};\n\nexport const getAmountFinanced = (downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr) => {\n    if (!brrrr) return (parseFloat(purchasePrice) - getDownPayment(downPymt, purchasePrice));\n    return (parseFloat(afterRepairValue) * parseFloat(loanToValue) / 100);\n};\n\nexport const getClosingCosts = (downPymt, purchasePrice, closeCosts, loanToValue, afterRepairValue, brrrr) => {\n    return (getAmountFinanced(downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr) * (parseFloat(closeCosts) / 100));\n};\n\nexport const getMortgagePaymentsPerYear = (mortgagePaymentsPerYear) => {\n    return parseFloat(mortgagePaymentsPerYear.text);\n};\n\nexport const getValuePerYear = (val, freq) => {\n    val = parseFloat(val);\n    switch (freq)\n    {\n        case FrequencyOptions[0].text: {\n            return val;\n        }\n        case FrequencyOptions[1].text: {\n            return val * 2;\n        }\n        case FrequencyOptions[2].text: {\n            return val * 12;\n        }\n        default: return 0;\n    }\n};\n\nexport const getGrossRentalIncomePerMonth = (incPerUnit, numUnts) => {\n    return (parseFloat(incPerUnit) * parseFloat(numUnts));\n};\n\nexport const getVacancyPerMonth = (incPerUnit, numUnts, vacancy) => {\n    return (getGrossRentalIncomePerMonth(incPerUnit, numUnts) * (parseFloat(vacancy) / 100));\n};\n\nexport const getNetRentalIncomePerMonth = (incPerUnit, numUnts, vacancy) => {\n    return getGrossRentalIncomePerMonth(incPerUnit, numUnts) - getVacancyPerMonth(incPerUnit, numUnts, vacancy);\n};\n\nexport const getPropertyManagementFee = (incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy) => {\n    return getNetRentalIncomePerMonth(incPerUnit, numUnts, vacancy) * (parseFloat(mgmt) / 100) + parseFloat(leasingCosts) * parseFloat(numUnts) / 12 / parseFloat(avgOccupancy);\n};\n\nexport const getMaintenancePerMonth = (incPerUnit, numUnts, maint) => {\n    return (getGrossRentalIncomePerMonth(incPerUnit, numUnts) * (parseFloat(maint) / 100));\n};\n\nexport const getExpensesPerMonth = (incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq) => {\n    return getPropertyManagementFee(incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy) +\n        getMaintenancePerMonth(incPerUnit, numUnts, maint) +\n        (getValuePerYear(propTax, propTaxFreq) / 12) + \n        (getValuePerYear(insurance, insuranceFreq) / 12) + \n        parseFloat(utilities);\n};\n\nexport const getExpenseIncomeRatioPerMonth = (incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq) => {\n    const income = getNetRentalIncomePerMonth(incPerUnit, numUnts, vacancy);\n    if (income === 0) return NaN;\n    return (getExpensesPerMonth(incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq) / income) * 100;\n};\n\nexport const getOperatingIncomePerMonth = (incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq) => {\n    return getNetRentalIncomePerMonth(incPerUnit, numUnts, vacancy) - getExpensesPerMonth(incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq);\n};\n\nexport const getOperatingIncomePerYear = (incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq) => {\n    return (getOperatingIncomePerMonth(incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq) * 12);\n};\n\nexport const getMortgagePaymentPerMonth = (interestRate, paymentsPerYear, years, downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr) => {\n    const amountFinanced = getAmountFinanced(downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr);\n    paymentsPerYear = getMortgagePaymentsPerYear(paymentsPerYear);\n\n    const numPeriods = paymentsPerYear * parseFloat(years);\n    interestRate = parseFloat(interestRate) / 100 / paymentsPerYear;\n\n    if (interestRate === 0) return amountFinanced / numPeriods;\n\n    var pvif = Math.pow(1 + interestRate, numPeriods);\n    var pmt = interestRate / (pvif - 1) * (amountFinanced * pvif);\n\n    pmt /= (1 + interestRate);\n    return pmt;\n};\n\nexport const getBalanceRemaining = (interestRate, paymentsPerYear, years, downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr, elapsedYears) => {\n    const amountFinanced = getAmountFinanced(downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr);\n    const pmt = getMortgagePaymentPerMonth(interestRate, paymentsPerYear, years, downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr);\n\n    paymentsPerYear = getMortgagePaymentsPerYear(paymentsPerYear);\n    const nPmts = elapsedYears * paymentsPerYear;\n    interestRate = parseFloat(interestRate) / 100 / paymentsPerYear;\n\n    if (nPmts > (paymentsPerYear * years)) return 0;\n    if (interestRate === 0) return amountFinanced - pmt * nPmts;\n    return amountFinanced * (1 + interestRate) ** nPmts - pmt * (((1 + interestRate) ** nPmts - 1) / (interestRate)) * (1 + interestRate);\n};\n\nexport const getMortgagePaymentPerYear = (interestRate, paymentsPerYear, years, downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr) => {\n    return (getMortgagePaymentPerMonth(interestRate, paymentsPerYear, years, downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr) * 12);\n};\n\nexport const getCashFlowPerMonth = (incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq, interestRate, paymentsPerYear, years, downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr) => {\n    return getOperatingIncomePerMonth(incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq) - getMortgagePaymentPerMonth(interestRate, paymentsPerYear, years, downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr);\n};\n\nexport const getCashFlowPerMonthPerInvestor = (incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq, interestRate, paymentsPerYear, years, downPymt, purchasePrice, numInvestors, loanToValue, afterRepairValue, brrrr) => {\n    return (getCashFlowPerMonth(incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq, interestRate, paymentsPerYear, years, downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr) / parseFloat(numInvestors));\n};\n\nexport const getCashFlowPerYear = (incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq, interestRate, paymentsPerYear, years, downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr) => {\n    return (getCashFlowPerMonth(incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq, interestRate, paymentsPerYear, years, downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr) * 12);\n};\n\nexport const getCashFlowPerYearPerInvestor = (incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq, interestRate, paymentsPerYear, years, downPymt, purchasePrice, numInvestors, loanToValue, afterRepairValue, brrrr) => {\n    return (getCashFlowPerYear(incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq, interestRate, paymentsPerYear, years, downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr) / parseFloat(numInvestors));\n};\n\nexport const getDebtCoverageRatio = (incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq, interestRate, paymentsPerYear, years, downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr) => {\n    return getOperatingIncomePerYear(incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq) / getMortgagePaymentPerYear(interestRate, paymentsPerYear, years, downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr) * 100;\n};\n\nexport const getCashFlowPerUnitPerMonth = (incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq, interestRate, paymentsPerYear, years, downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr) => {\n    return (getCashFlowPerMonth(incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq, interestRate, paymentsPerYear, years, downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr) / parseFloat(numUnts));\n};\n\nexport const getTotalInvesment = (downPymt, purchasePrice, closeCosts, repairs, loanToValue, afterRepairValue, brrrr) => {\n    //return (getDownPayment(downPymt, purchasePrice) + getClosingCosts(downPymt, purchasePrice, closeCosts) + parseFloat(repairs));\n    return (getCapitalRequired(downPymt, purchasePrice, repairs, loanToValue, afterRepairValue, brrrr) + getClosingCosts(downPymt, purchasePrice, closeCosts, loanToValue, afterRepairValue, brrrr));\n};\n\nexport const getTotalInvestmentPerInvestor = (downPymt, purchasePrice, closeCosts, repairs, numInvestors, loanToValue, afterRepairValue, brrrr) => {\n    //return (getTotalInvesment(downPymt, purchasePrice, closeCosts, repairs) / parseFloat(numInvestors));\n    return ((getCapitalRequired(downPymt, purchasePrice, repairs, loanToValue, afterRepairValue, brrrr) + getClosingCosts(downPymt, purchasePrice, closeCosts, loanToValue, afterRepairValue, brrrr)) / parseFloat(numInvestors));\n};\n\nexport const getCashOnCash = (incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq, interestRate, paymentsPerYear, years, downPymt, purchasePrice, closeCosts, repairs, loanToValue, afterRepairValue, brrrr) => {\n    const cashFlowPerYear = getCashFlowPerYear(incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq, interestRate, paymentsPerYear, years, downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr);\n    const totalInvesment = getTotalInvesment(downPymt, purchasePrice, closeCosts, repairs, loanToValue, afterRepairValue, brrrr);\n    const goodCoC = ((cashFlowPerYear > 0 && totalInvesment > 0) || (cashFlowPerYear > 0 && totalInvesment < 0));\n    return [(cashFlowPerYear / Math.max(0,totalInvesment) * 100),goodCoC];\n};\n\nexport const getCapRate = (incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq, downPymt, purchasePrice, closeCosts, repairs, loanToValue, afterRepairValue, brrrr) => {\n    return getOperatingIncomePerYear(incPerUnit, numUnts, vacancy, mgmt, leasingCosts, avgOccupancy, maint, utilities, propTax, propTaxFreq, insurance, insuranceFreq)\n            / (parseFloat(purchasePrice) + parseFloat(repairs) + getClosingCosts(downPymt, purchasePrice, closeCosts, loanToValue, afterRepairValue, brrrr)) * 100;\n};\n\nexport const getGrossMonthlyRentPriceRatio = (incPerUnit, numUnts, purchasePrice) => {\n    return (getGrossRentalIncomePerMonth(incPerUnit, numUnts) / parseFloat(purchasePrice) * 100);\n};\n\nexport const downPaymentCost = selector({\n    key: \"downPaymentCost\",\n    get: ({ get }) => {\n        return getDownPayment(get(downPaymentState), get(purchasePriceState)).toFixed(2);\n    },\n});\n\nexport const capitalRequired = selector({\n    key: \"capitalRequired\",\n    get: ({ get }) => {\n        return getCapitalRequired(get(downPaymentState), get(purchasePriceState), get(repairsState), get(loanToValueState), get(afterRepairValueState), get(brrrrState)).toFixed(2);\n    },\n});\n\nexport const amountFinanced = selector({\n    key: \"amountFinanced\",\n    get: ({ get }) => {\n        return getAmountFinanced(get(downPaymentState), get(purchasePriceState), get(loanToValueState), get(afterRepairValueState), get(brrrrState)).toFixed(2);\n    },\n});\n\nexport const closingCost = selector({\n    key: \"closingCost\",\n    get: ({ get }) => {\n        return getClosingCosts(get(downPaymentState), get(purchasePriceState), get(closingCostsState), get(loanToValueState), get(afterRepairValueState), get(brrrrState)).toFixed(2);\n    },\n});\n\nexport const propTaxPerYear = selector({\n    key: \"propTaxPerYear\",\n    get: ({ get }) => {\n        return getValuePerYear(get(propertyTaxState), get(propertyTaxFreqState)).toFixed(2);\n    },\n});\n\nexport const propTaxPerMonth = selector({\n    key: \"propTaxPerMonth\",\n    get: ({ get }) => {\n        return (getValuePerYear(get(propertyTaxState), get(propertyTaxFreqState)) / 12).toFixed(2);\n    },\n});\n\nexport const insurancePerYear = selector({\n    key: \"insurancePerYear\",\n    get: ({ get }) => {\n        return getValuePerYear(get(insuranceState), get(insuranceFreqState)).toFixed(2);\n    },\n});\n\nexport const insurancePerMonth = selector({\n    key: \"insurancePerMonth\",\n    get: ({ get }) => {\n        return (getValuePerYear(get(insuranceState), get(insuranceFreqState)) / 12).toFixed(2);\n    },\n});\n\nexport const grossRentalIncomePerMonth = selector({\n    key: \"grossRentalIncomePerMonth\",\n    get: ({ get }) => {\n        return getGrossRentalIncomePerMonth(get(incomePerUnitState), get(numUnitsState)).toFixed(2);\n    },\n});\n\nexport const vacancyPerMonth = selector({\n    key: \"vacancyPerMonth\",\n    get: ({ get }) => {\n        return getVacancyPerMonth(get(incomePerUnitState), get(numUnitsState), get(vacancyRateState)).toFixed(2);\n    },\n});\n\nexport const netRentalIncomePerMonth = selector({\n    key: \"netRentalIncomePerMonth\",\n    get: ({ get }) => {\n        return getNetRentalIncomePerMonth(get(incomePerUnitState), get(numUnitsState), get(vacancyRateState)).toFixed(2);\n    },\n});\n\nexport const propertyManagementPerMonth = selector({\n    key: \"propertyManagementPerMonth\",\n    get: ({ get }) => {\n        return getPropertyManagementFee(get(incomePerUnitState), get(numUnitsState), get(vacancyRateState), get(managementState), get(leasingCostsState), get(avgOccupancyState)).toFixed(2);\n    },\n});\n\nexport const maintenancePerMonth = selector({\n    key: \"maintenancePerMonth\",\n    get: ({ get }) => {\n        return getMaintenancePerMonth(get(incomePerUnitState), get(numUnitsState), get(maintenanceState)).toFixed(2);\n    },\n});\n\nexport const expensesPerMonth = selector({\n    key: \"expensesPerMonth\",\n    get: ({ get }) => {\n        return getExpensesPerMonth(get(incomePerUnitState), get(numUnitsState), get(vacancyRateState), get(managementState), get(leasingCostsState), get(avgOccupancyState), get(maintenanceState), get(expenseUtilitiesState), get(propertyTaxState), get(propertyTaxFreqState), get(insuranceState), get(insuranceFreqState)).toFixed(2);\n    },\n});\n\nexport const expenseIncomeRatioPerMonth = selector({\n    key: \"expenseIncomeRatioPerMonth\",\n    get: ({ get }) => {\n        return getExpenseIncomeRatioPerMonth(get(incomePerUnitState), get(numUnitsState), get(vacancyRateState), get(managementState), get(leasingCostsState), get(avgOccupancyState), get(maintenanceState), get(expenseUtilitiesState), get(propertyTaxState), get(propertyTaxFreqState), get(insuranceState), get(insuranceFreqState)).toFixed(2);\n    },\n});\n\nexport const netOperatingIncomePerMonth = selector({\n    key: \"netOperatingIncomePerMonth\",\n    get: ({ get }) => {\n        return getOperatingIncomePerMonth(get(incomePerUnitState), get(numUnitsState), get(vacancyRateState), get(managementState), get(leasingCostsState), get(avgOccupancyState), get(maintenanceState), get(expenseUtilitiesState), get(propertyTaxState), get(propertyTaxFreqState), get(insuranceState), get(insuranceFreqState)).toFixed(2);\n    },\n});\n\nexport const netOperatingIncomePerYear = selector({\n    key: \"netOperatingIncomePerYear\",\n    get: ({ get }) => {\n        return getOperatingIncomePerYear(get(incomePerUnitState), get(numUnitsState), get(vacancyRateState), get(managementState), get(leasingCostsState), get(avgOccupancyState), get(maintenanceState), get(expenseUtilitiesState), get(propertyTaxState), get(propertyTaxFreqState), get(insuranceState), get(insuranceFreqState)).toFixed(2);\n    },\n});\n\nexport const mortgagePaymentPerMonth = selector({\n    key: \"mortgagePaymentPerMonth\",\n    get: ({ get }) => {\n        return getMortgagePaymentPerMonth(get(interestRateState), get(mortgagePaymentsPerYearState), get(mortgageYearsState), get(downPaymentState), get(purchasePriceState), get(loanToValueState), get(afterRepairValueState), get(brrrrState)).toFixed(2);\n    },\n});\n\nexport const mortgagePaymentPerYear = selector({\n    key: \"mortgagePaymentPerYear\",\n    get: ({ get }) => {\n        return getMortgagePaymentPerYear(get(interestRateState), get(mortgagePaymentsPerYearState), get(mortgageYearsState), get(downPaymentState), get(purchasePriceState), get(loanToValueState), get(afterRepairValueState), get(brrrrState)).toFixed(2);\n    },\n});\n\nexport const cashFlowPerMonth = selector({\n    key: \"cashFlowPerMonth\",\n    get: ({ get }) => {\n        return getCashFlowPerMonth(get(incomePerUnitState), get(numUnitsState), get(vacancyRateState), get(managementState), get(leasingCostsState), get(avgOccupancyState), get(maintenanceState), get(expenseUtilitiesState), get(propertyTaxState), get(propertyTaxFreqState), get(insuranceState), get(insuranceFreqState), get(interestRateState), get(mortgagePaymentsPerYearState), get(mortgageYearsState), get(downPaymentState), get(purchasePriceState), get(loanToValueState), get(afterRepairValueState), get(brrrrState)).toFixed(2);\n    },\n});\n\nexport const cashFlowPerMonthPerInvestor = selector({\n    key: \"cashFlowPerMonthPerInvestor\",\n    get: ({ get }) => {\n        return getCashFlowPerMonthPerInvestor(get(incomePerUnitState), get(numUnitsState), get(vacancyRateState), get(managementState), get(leasingCostsState), get(avgOccupancyState), get(maintenanceState), get(expenseUtilitiesState), get(propertyTaxState), get(propertyTaxFreqState), get(insuranceState), get(insuranceFreqState), get(interestRateState), get(mortgagePaymentsPerYearState), get(mortgageYearsState), get(downPaymentState), get(purchasePriceState), get(numInvestorsState), get(loanToValueState), get(afterRepairValueState), get(brrrrState)).toFixed(2);\n    },\n});\n\nexport const cashFlowPerYear = selector({\n    key: \"cashFlowPerYear\",\n    get: ({ get }) => {\n        return getCashFlowPerYear(get(incomePerUnitState), get(numUnitsState), get(vacancyRateState), get(managementState), get(leasingCostsState), get(avgOccupancyState), get(maintenanceState), get(expenseUtilitiesState), get(propertyTaxState), get(propertyTaxFreqState), get(insuranceState), get(insuranceFreqState), get(interestRateState), get(mortgagePaymentsPerYearState), get(mortgageYearsState), get(downPaymentState), get(purchasePriceState), get(loanToValueState), get(afterRepairValueState), get(brrrrState)).toFixed(2);\n    },\n});\n\nexport const cashFlowPerYearPerInvestor = selector({\n    key: \"cashFlowPerYearPerInvestor\",\n    get: ({ get }) => {\n        return getCashFlowPerYearPerInvestor(get(incomePerUnitState), get(numUnitsState), get(vacancyRateState), get(managementState), get(leasingCostsState), get(avgOccupancyState), get(maintenanceState), get(expenseUtilitiesState), get(propertyTaxState), get(propertyTaxFreqState), get(insuranceState), get(insuranceFreqState), get(interestRateState), get(mortgagePaymentsPerYearState), get(mortgageYearsState), get(downPaymentState), get(purchasePriceState), get(numInvestorsState), get(loanToValueState), get(afterRepairValueState), get(brrrrState)).toFixed(2);\n    },\n});\n\nexport const debtCoverageRatio = selector({\n    key: \"debtCoverageRatio\",\n    get: ({ get }) => {\n        return getDebtCoverageRatio(get(incomePerUnitState), get(numUnitsState), get(vacancyRateState), get(managementState), get(leasingCostsState), get(avgOccupancyState), get(maintenanceState), get(expenseUtilitiesState), get(propertyTaxState), get(propertyTaxFreqState), get(insuranceState), get(insuranceFreqState), get(interestRateState), get(mortgagePaymentsPerYearState), get(mortgageYearsState), get(downPaymentState), get(purchasePriceState), get(loanToValueState), get(afterRepairValueState), get(brrrrState)).toFixed(2);\n    },\n});\n\nexport const cashFlowPerUnitPerMonth = selector({\n    key: \"cashFlowPerUnitPerMonth\",\n    get: ({ get }) => {\n        return getCashFlowPerUnitPerMonth(get(incomePerUnitState), get(numUnitsState), get(vacancyRateState), get(managementState), get(leasingCostsState), get(avgOccupancyState), get(maintenanceState), get(expenseUtilitiesState), get(propertyTaxState), get(propertyTaxFreqState), get(insuranceState), get(insuranceFreqState), get(interestRateState), get(mortgagePaymentsPerYearState), get(mortgageYearsState), get(downPaymentState), get(purchasePriceState), get(loanToValueState), get(afterRepairValueState), get(brrrrState)).toFixed(2);\n    },\n});\n\nexport const totalInvestment = selector({\n    key: \"totalInvestment\",\n    get: ({ get }) => {\n        return getTotalInvesment(get(downPaymentState), get(purchasePriceState), get(closingCostsState), get(repairsState), get(loanToValueState), get(afterRepairValueState), get(brrrrState)).toFixed(2);\n    },\n});\n\nexport const totalInvestmentPerInvestor = selector({\n    key: \"totalInvestmentPerInvestor\",\n    get: ({ get }) => {\n        return getTotalInvestmentPerInvestor(get(downPaymentState), get(purchasePriceState), get(closingCostsState), get(repairsState), get(numInvestorsState), get(loanToValueState), get(afterRepairValueState), get(brrrrState)).toFixed(2);\n    },\n});\n\nexport const cashOnCash = selector({\n    key: \"cashOnCash\",\n    get: ({ get }) => {\n        return getCashOnCash(get(incomePerUnitState), get(numUnitsState), get(vacancyRateState), get(managementState), get(leasingCostsState), get(avgOccupancyState), get(maintenanceState), get(expenseUtilitiesState), get(propertyTaxState), get(propertyTaxFreqState), get(insuranceState), get(insuranceFreqState), get(interestRateState), get(mortgagePaymentsPerYearState), get(mortgageYearsState), get(downPaymentState), get(purchasePriceState), get(closingCostsState), get(repairsState), get(loanToValueState), get(afterRepairValueState), get(brrrrState))[0].toFixed(2);\n    },\n});\n\nexport const capRate = selector({\n    key: \"capRate\",\n    get: ({ get }) => {\n        return getCapRate(get(incomePerUnitState), get(numUnitsState), get(vacancyRateState), get(managementState), get(leasingCostsState), get(avgOccupancyState), get(maintenanceState), get(expenseUtilitiesState), get(propertyTaxState), get(propertyTaxFreqState), get(insuranceState), get(insuranceFreqState), get(downPaymentState), get(purchasePriceState), get(closingCostsState), get(repairsState), get(loanToValueState), get(afterRepairValueState), get(brrrrState)).toFixed(2);\n    },\n});\n\nexport const grossMonthlyRentPriceRatio = selector({\n    key: \"grossMonthlyRentPriceRatio\",\n    get: ({ get }) => {\n        return getGrossMonthlyRentPriceRatio(get(incomePerUnitState), get(numUnitsState), get(purchasePriceState)).toFixed(2);\n    },\n});\n\nexport const cashOutRefinance = selector({\n    key: \"cashOutRefinance\",\n    get: ({ get }) => {\n        return getCashOutRefinance(get(loanToValueState), get(afterRepairValueState), get(downPaymentState), get(purchasePriceState)).toFixed(2);\n    },\n});\n\nconst forecastValue = (val, rate) => {\n    const fcst_val = Array(30).fill(null);\n    for (let i=0; i < 30; i++){\n        fcst_val[i] = val * (1 + rate) ** (i);\n    }\n    return fcst_val;\n};\n\nconst forecastMtgValue = (mtgPmtPerYr, mortgageYears) => {\n    const fcst_val = Array(30).fill(null);\n\n    for (let i=0;i < 30;i++){\n        fcst_val[i] = (i < mortgageYears ? parseFloat(mtgPmtPerYr) : 0); // stop payments when loan concludes\n    }\n    return fcst_val;\n};\n\nconst forecastAccumPrinc = (interestRate, mortgagePaymentsPerYear, years, downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr) => {\n    const fcst_val = Array(30).fill(null);\n    for (let i=0; i < fcst_val.length; i++){\n        fcst_val[i] = getAmountFinanced(downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr) - getBalanceRemaining(interestRate, mortgagePaymentsPerYear, years, downPymt, purchasePrice, loanToValue, afterRepairValue, brrrr, i + 1);\n    }\n    return fcst_val;\n};\n\nconst addElementwise = (arrOfArrs) => {\n    const newArr = new Array(30).fill(null);\n    for (let i=0; i < arrOfArrs[0].length; i++){\n        for (let j=0; j < arrOfArrs.length; j++){\n            newArr[i] += arrOfArrs[j][i];\n        }\n    }\n    return newArr;\n};\n\nexport const forecastRevenue = selector({\n    key: \"forecastRevenue\",\n    get: ({ get }) => {\n        return forecastValue(getGrossRentalIncomePerMonth(get(incomePerUnitState), get(numUnitsState)) * 12, parseFloat(get(annRevIncState)) / 100);\n    },\n});\n\nexport const forecastVacancy = selector({\n    key: \"forecastVacancy\",\n    get: ({ get }) => {\n        return forecastValue(getVacancyPerMonth(get(incomePerUnitState), get(numUnitsState), get(vacancyRateState)) * 12, parseFloat(get(annRevIncState)) / 100);\n    },\n});\n\nexport const forecastPropertyManagement = selector({\n    key: \"forecastPropertyManagement\",\n    get: ({ get }) => {\n        return forecastValue(getPropertyManagementFee(get(incomePerUnitState), get(numUnitsState), get(vacancyRateState), get(managementState), get(leasingCostsState), get(avgOccupancyState)) * 12, parseFloat(get(annRevIncState)) / 100);\n    },\n});\n\nexport const forecastMaintenance = selector({\n    key: \"forecastMaintenance\",\n    get: ({ get }) => {\n        return forecastValue(getMaintenancePerMonth(get(incomePerUnitState), get(numUnitsState), get(maintenanceState)) * 12, parseFloat(get(annOpExpIncState)) / 100);\n    },\n});\n\nexport const forecastPropertyTax = selector({\n    key: \"forecastPropertyTax\",\n    get: ({ get }) => {\n        return forecastValue(getValuePerYear(get(propertyTaxState), get(propertyTaxFreqState)) / 12 * 12, parseFloat(get(annOpExpIncState)) / 100);\n    },\n});\n\nexport const forecastInsurance = selector({\n    key: \"forecastInsurance\",\n    get: ({ get }) => {\n        return forecastValue(getValuePerYear(get(insuranceState), get(insuranceFreqState)) / 12 * 12, parseFloat(get(annOpExpIncState)) / 100);\n    },\n});\n\nexport const forecastUtilities = selector({\n    key: \"forecastUtilities\",\n    get: ({ get }) => {\n        return forecastValue(get(expenseUtilitiesState) * 12, parseFloat(get(annOpExpIncState)) / 100);\n    },\n});\n\nexport const forecastTotalExpenses = selector({\n    key: \"forecastTotalExpenses\",\n    get: ({ get }) => {\n        return addElementwise([get(forecastVacancy),get(forecastPropertyManagement),get(forecastMaintenance),get(forecastPropertyTax),get(forecastInsurance),get(forecastUtilities)]);\n    },\n});\n\nexport const forecastNetOperatingIncome = selector({\n    key: \"forecastNetOperatingIncome\",\n    get: ({ get }) => {\n        return addElementwise([get(forecastRevenue),get(forecastTotalExpenses).map(x => x * -1)]);\n    },\n});\n\nexport const forecastMortgage = selector({\n    key: \"forecastMortgage\",\n    get: ({ get }) => {\n        return forecastMtgValue(get(mortgagePaymentPerYear), get(mortgageYearsState));\n    },\n});\n\nexport const forecastCashFlow = selector({\n    key: \"forecastCashFlow\",\n    get: ({ get }) => {\n        return addElementwise([get(forecastNetOperatingIncome),get(forecastMortgage).map(x => x * -1)]);\n    },\n});\n\nexport const forecastCashOnCash = selector({\n    key: \"forecastCashOnCash\",\n    get: ({ get }) => {\n        return get(forecastCashFlow).map(x => x / Math.max(0,get(totalInvestment)));\n    },\n});\n\nexport const forecastAccumPrincipal = selector({\n    key: \"forecastAccumPrincipal\",\n    get: ({ get }) => {\n        return forecastAccumPrinc(get(interestRateState), get(mortgagePaymentsPerYearState), get(mortgageYearsState), get(downPaymentState), get(purchasePriceState), get(loanToValueState), get(afterRepairValueState), get(brrrrState));\n    },\n});\n\nexport const forecastEquityAccrued = selector({\n    key: \"forecastEquityAccrued\",\n    get: ({ get }) => {\n        const arr = [];\n        for (let i=0; i < get(forecastAccumPrincipal).length; i++){\n            arr[i] = get(forecastAccumPrincipal)[i] - (i === 0 ? 0 : get(forecastAccumPrincipal)[i-1]);\n        }\n        return arr;\n    },\n});\n\nexport const forecastAppreciation = selector({\n    key: \"forecastAppreciation\",\n    get: ({ get }) => {\n        const brrrr = get(brrrrState);\n        const purch_price = parseFloat(get(purchasePriceState));\n        const repairs = parseFloat(get(repairsState));\n        const arv = parseFloat(get(afterRepairValueState));\n        const appr_rate = parseFloat(get(annApprState)) / 100;\n        const arr = Array(30).fill(0);\n\n        arr[0] += (brrrr ? arv - purch_price : repairs); // forced appreciation from brrrr, get initial repair value back in the form of added value\n        for (let i=1; i < arr.length; i++){\n            arr[i] = (((1 + appr_rate) ** i) - (1 + appr_rate) ** (i - 1)) * (brrrr ? parseFloat(get(afterRepairValueState)) : (parseFloat(get(purchasePriceState)) + parseFloat(get(repairsState))));\n        }\n        return arr;\n    },\n});\n\nexport const forecastReinvCashFlows = selector({\n    key: \"forecastReinvCashFlows\",\n    get: ({ get }) => {\n        const return_rate = parseFloat(get(annReinvRetState)) / 100;\n        const arr = Array(30).fill(0);\n        const cm_arr = Array(30).fill(0);\n        const cf_arr = get(forecastCashFlow);\n\n        cm_arr[0] = cf_arr[0];\n        for (let i=1; i < arr.length; i++){\n            cm_arr[i] = (1 + return_rate) * cm_arr[i-1]; // get return from current investment\n            arr[i] = cm_arr[i] - cm_arr[i-1]; // current year's returns based on the difference before investing new cash flows\n            cm_arr[i] += cf_arr[i]; // add new cash flows to investments\n        }\n        return arr;\n    },\n});\n\nexport const forecastTotalReturn = selector({\n    key: \"forecastTotalReturn\",\n    get: ({ get }) => {\n        return addElementwise([get(forecastCashFlow),get(forecastEquityAccrued),get(forecastAppreciation),get(forecastReinvCashFlows)]);\n    },\n});\n\nexport const forecastTotalROI = selector({\n    key: \"forecastTotalROI\",\n    get: ({ get }) => {\n        return get(forecastTotalReturn).map(x => x / Math.max(0,get(totalInvestment)));\n    },\n});\n\nexport const forecastCmAnnualizedReturn = selector({\n    key: \"forecastCmAnnualizedReturn\",\n    get: ({ get }) => {\n        const arr = [];\n        const cm_ret = [];\n        const purch_price = parseFloat(get(purchasePriceState));\n        const amt_fin = parseFloat(get(amountFinanced));\n        const tot_ret_arr = get(forecastTotalReturn);\n        const tot_inv = parseFloat(get(totalInvestment));\n\n        for (let i=0; i < tot_ret_arr.length; i++){\n            if (i===0){\n                cm_ret[i] = tot_ret_arr[i];\n            }\n            else {\n                cm_ret[i] = cm_ret[i-1] + tot_ret_arr[i];\n            }\n            arr[i] = ((cm_ret[i] + purch_price - amt_fin) / Math.max(0,tot_inv)) ** (1 / (i + 1)) - 1; // assuming you get the difference between purchase price and financed amount back, repairs and ARV flow through appreciation\n        }\n        return arr;\n    },\n});","import {\n    useMemo,\n} from 'react';\n\nimport {\n    useRecoilValue,\n} from 'recoil';\n\nimport {\n    FontIcon,\n} from '@fluentui/react';\nimport { mergeStyles } from 'office-ui-fabric-react/lib/Styling';\n\nimport {\n    themeState,\n} from '../store';\n\nconst ThemedIcon = ({ className, ...otherProps }) => {\n    const theme = useRecoilValue(themeState);\n    const iconClass = useMemo(() => {\n        return mergeStyles({\n            color: theme.palette.black,\n        }, className);\n    }, [theme, className]);\n\n    return (\n        <FontIcon\n            className={iconClass}\n            {...otherProps}\n        />\n    );\n};\n\nexport default ThemedIcon;","import ThemedIcon from './ThemedIcon';\nexport default ThemedIcon;","import {\n    useCallback,\n    useMemo,\n    useState,\n} from 'react';\n\nimport {\n    useRecoilValue,\n} from 'recoil';\n\nimport LZUTF8 from 'lzutf8';\n\nimport {\n    themeState,\n    addressState,\n    urlState,\n    purchasePriceState,\n    downPaymentState,\n    interestRateState,\n    mortgageYearsState,\n    mortgagePaymentsPerYearState,\n    closingCostsState,\n    repairsState,\n    propertyTaxState,\n    propertyTaxFreqState,\n    insuranceState,\n    insuranceFreqState,\n    expenseUtilitiesState,\n    managementState,\n    leasingCostsState,\n    avgOccupancyState,\n    maintenanceState,\n    incomePerUnitState,\n    numUnitsState,\n    vacancyRateState,\n    incomeUtilitiesState,\n    numInvestorsState,\n    brrrrState,\n    loanToValueState,\n    afterRepairValueState,\n    forecastState,\n    annRevIncState,\n    annOpExpIncState,\n    annReinvRetState,\n    annApprState,   \n    purchasePriceDistState,\n    interestRateDistState,\n    closingCostsDistState,\n    repairsDistState,\n    propertyTaxDistState,\n    insuranceDistState,\n    expenseUtilitiesDistState,\n    managementDistState,\n    leasingCostsDistState,\n    avgOccupancyDistState,\n    maintenanceDistState,\n    incomePerUnitDistState,\n    vacancyRateDistState,\n    incomeUtilitiesDistState,\n    afterRepairValueDistState,\n    purchasePriceMinState,\n    interestRateMinState,\n    closingCostsMinState,\n    repairsMinState,\n    propertyTaxMinState,\n    insuranceMinState,\n    expenseUtilitiesMinState,\n    managementMinState,\n    leasingCostsMinState,\n    avgOccupancyMinState,\n    maintenanceMinState,\n    incomePerUnitMinState,\n    vacancyRateMinState,\n    incomeUtilitiesMinState,\n    afterRepairValueMinState,\n    purchasePriceMaxState,\n    interestRateMaxState,\n    closingCostsMaxState,\n    repairsMaxState,\n    propertyTaxMaxState,\n    insuranceMaxState,\n    expenseUtilitiesMaxState,\n    managementMaxState,\n    leasingCostsMaxState,\n    avgOccupancyMaxState,\n    maintenanceMaxState,\n    incomePerUnitMaxState,\n    vacancyRateMaxState,\n    incomeUtilitiesMaxState,\n    afterRepairValueMaxState,\n    purchasePriceChoiceState,\n    interestRateChoiceState,\n    closingCostsChoiceState,\n    repairsChoiceState,\n    propertyTaxChoiceState,\n    insuranceChoiceState,\n    expenseUtilitiesChoiceState,\n    managementChoiceState,\n    leasingCostsChoiceState,\n    avgOccupancyChoiceState,\n    maintenanceChoiceState,\n    incomePerUnitChoiceState,\n    vacancyRateChoiceState,\n    incomeUtilitiesChoiceState,\n    afterRepairValueChoiceState,     \n} from '../store';\n\nimport { Dialog, DialogType, DialogFooter, PrimaryButton, DefaultButton } from '@fluentui/react';\nimport { mergeStyles } from 'office-ui-fabric-react/lib/Styling';\n\nimport ThemedIcon from '../ThemedIcon';\n\nconst dialogStyles = {\n    main: {\n        maxWidth: 450\n    },\n};\n\nconst CreateLinkButton = () => {\n    const theme = useRecoilValue(themeState);\n    const address = useRecoilValue(addressState);\n    const url = useRecoilValue(urlState);\n    const purchasePrice = useRecoilValue(purchasePriceState);\n    const downPayment = useRecoilValue(downPaymentState);\n    const interestRate = useRecoilValue(interestRateState);\n    const mortgageYears = useRecoilValue(mortgageYearsState);\n    const mortgagePaymentsPerYear = useRecoilValue(mortgagePaymentsPerYearState);\n    const closingCosts = useRecoilValue(closingCostsState);\n    const repairs = useRecoilValue(repairsState);\n    const propertyTax = useRecoilValue(propertyTaxState);\n    const propertyTaxFreq = useRecoilValue(propertyTaxFreqState);\n    const insurance = useRecoilValue(insuranceState);\n    const insuranceFreq = useRecoilValue(insuranceFreqState);\n    const expenseUtilities = useRecoilValue(expenseUtilitiesState);\n    const management = useRecoilValue(managementState);\n    const leasingCosts = useRecoilValue(leasingCostsState);\n    const avgOccupancy = useRecoilValue(avgOccupancyState);\n    const maintenance = useRecoilValue(maintenanceState);\n    const incomePerUnit = useRecoilValue(incomePerUnitState);\n    const numUnits = useRecoilValue(numUnitsState);\n    const vacancyRate = useRecoilValue(vacancyRateState);\n    const incomeUtilities = useRecoilValue(incomeUtilitiesState);\n    const numInvestors = useRecoilValue(numInvestorsState);\n    const loanToValue = useRecoilValue(loanToValueState);\n    const afterRepairValue = useRecoilValue(afterRepairValueState);    \n    const brrrr = useRecoilValue(brrrrState);\n    const forecast = useRecoilValue(forecastState);\n    const annRevInc = useRecoilValue(annRevIncState);\n    const annOpExpInc = useRecoilValue(annOpExpIncState);\n    const annReinvRet = useRecoilValue(annReinvRetState);\n    const annAppr = useRecoilValue(annApprState);\n    const purchasePriceDist = useRecoilValue(purchasePriceDistState);\n    const interestRateDist = useRecoilValue(interestRateDistState);\n    const closingCostsDist = useRecoilValue(closingCostsDistState);\n    const repairsDist = useRecoilValue(repairsDistState);\n    const propertyTaxDist = useRecoilValue(propertyTaxDistState);\n    const insuranceDist = useRecoilValue(insuranceDistState);\n    const expenseUtilitiesDist = useRecoilValue(expenseUtilitiesDistState);\n    const managementDist = useRecoilValue(managementDistState);\n    const leasingCostsDist = useRecoilValue(leasingCostsDistState);\n    const avgOccupancyDist = useRecoilValue(avgOccupancyDistState);\n    const maintenanceDist = useRecoilValue(maintenanceDistState);\n    const incomePerUnitDist = useRecoilValue(incomePerUnitDistState);\n    const vacancyRateDist = useRecoilValue(vacancyRateDistState);\n    const incomeUtilitiesDist = useRecoilValue(incomeUtilitiesDistState);\n    const afterRepairValueDist = useRecoilValue(afterRepairValueDistState);      \n    const purchasePriceMin = useRecoilValue(purchasePriceMinState);\n    const interestRateMin = useRecoilValue(interestRateMinState);\n    const closingCostsMin = useRecoilValue(closingCostsMinState);\n    const repairsMin = useRecoilValue(repairsMinState);\n    const propertyTaxMin = useRecoilValue(propertyTaxMinState);\n    const insuranceMin = useRecoilValue(insuranceMinState);\n    const expenseUtilitiesMin = useRecoilValue(expenseUtilitiesMinState);\n    const managementMin = useRecoilValue(managementMinState);\n    const leasingCostsMin = useRecoilValue(leasingCostsMinState);\n    const avgOccupancyMin = useRecoilValue(avgOccupancyMinState);\n    const maintenanceMin = useRecoilValue(maintenanceMinState);\n    const incomePerUnitMin = useRecoilValue(incomePerUnitMinState);\n    const vacancyRateMin = useRecoilValue(vacancyRateMinState);\n    const incomeUtilitiesMin = useRecoilValue(incomeUtilitiesMinState);\n    const afterRepairValueMin = useRecoilValue(afterRepairValueMinState);   \n    const purchasePriceMax = useRecoilValue(purchasePriceMaxState);\n    const interestRateMax = useRecoilValue(interestRateMaxState);\n    const closingCostsMax = useRecoilValue(closingCostsMaxState);\n    const repairsMax = useRecoilValue(repairsMaxState);\n    const propertyTaxMax = useRecoilValue(propertyTaxMaxState);\n    const insuranceMax = useRecoilValue(insuranceMaxState);\n    const expenseUtilitiesMax = useRecoilValue(expenseUtilitiesMaxState);\n    const managementMax = useRecoilValue(managementMaxState);\n    const leasingCostsMax = useRecoilValue(leasingCostsMaxState);\n    const avgOccupancyMax = useRecoilValue(avgOccupancyMaxState);\n    const maintenanceMax = useRecoilValue(maintenanceMaxState);\n    const incomePerUnitMax = useRecoilValue(incomePerUnitMaxState);\n    const vacancyRateMax = useRecoilValue(vacancyRateMaxState);\n    const incomeUtilitiesMax = useRecoilValue(incomeUtilitiesMaxState);\n    const afterRepairValueMax = useRecoilValue(afterRepairValueMaxState);   \n    const purchasePriceChoice = useRecoilValue(purchasePriceChoiceState);\n    const interestRateChoice = useRecoilValue(interestRateChoiceState);\n    const closingCostsChoice = useRecoilValue(closingCostsChoiceState);\n    const repairsChoice = useRecoilValue(repairsChoiceState);\n    const propertyTaxChoice = useRecoilValue(propertyTaxChoiceState);\n    const insuranceChoice = useRecoilValue(insuranceChoiceState);\n    const expenseUtilitiesChoice = useRecoilValue(expenseUtilitiesChoiceState);\n    const managementChoice = useRecoilValue(managementChoiceState);\n    const leasingCostsChoice = useRecoilValue(leasingCostsChoiceState);\n    const avgOccupancyChoice = useRecoilValue(avgOccupancyChoiceState);\n    const maintenanceChoice = useRecoilValue(maintenanceChoiceState);\n    const incomePerUnitChoice = useRecoilValue(incomePerUnitChoiceState);\n    const vacancyRateChoice = useRecoilValue(vacancyRateChoiceState);\n    const incomeUtilitiesChoice = useRecoilValue(incomeUtilitiesChoiceState);\n    const afterRepairValueChoice = useRecoilValue(afterRepairValueChoiceState);               \n    const [link, setLink] = useState(\"\");\n    const [dialogVisible, setDialogVisible] = useState(false);\n\n    const onClickCreateLink = useCallback(() => {\n        const u = new URL(window.location.href);\n        const params = new URLSearchParams(u.search);\n\n        params.set('s', LZUTF8.encodeBase64(LZUTF8.compress(JSON.stringify({\n            address: address,\n            url: url,\n            purchasePrice: purchasePrice,\n            downPayment: downPayment,\n            interestRate: interestRate,\n            mortgageYears: mortgageYears,\n            mortgagePaymentsPerYear: mortgagePaymentsPerYear,\n            closingCosts: closingCosts,\n            repairs: repairs,\n            propertyTax: propertyTax,\n            propertyTaxFreq: propertyTaxFreq,\n            insurance: insurance,\n            insuranceFreq: insuranceFreq,\n            expenseUtilities: expenseUtilities,\n            management: management,\n            leasingCosts: leasingCosts,\n            avgOccupancy: avgOccupancy,\n            maintenance: maintenance,\n            incomePerUnit: incomePerUnit,\n            numUnits: numUnits,\n            vacancyRate: vacancyRate,\n            incomeUtilities: incomeUtilities,\n            numInvestors: numInvestors,\n            loanToValue: loanToValue,\n            afterRepairValue: afterRepairValue,\n            brrrr: brrrr,\n            forecast: forecast,\n            annRevInc: annRevInc,\n            annOpExpInc: annOpExpInc,\n            annReinvRet: annReinvRet,\n            annAppr: annAppr,\n            purchasePriceDist: purchasePriceDist,\n            interestRateDist: interestRateDist,\n            closingCostsDist: closingCostsDist,\n            repairsDist: repairsDist,\n            propertyTaxDist: propertyTaxDist,\n            insuranceDist: insuranceDist,\n            expenseUtilitiesDist: expenseUtilitiesDist,\n            managementDist: managementDist,\n            leasingCostsDist: leasingCostsDist,\n            avgOccupancyDist: avgOccupancyDist,\n            maintenanceDist: maintenanceDist,\n            incomePerUnitDist: incomePerUnitDist,\n            vacancyRateDist: vacancyRateDist,\n            incomeUtilitiesDist: incomeUtilitiesDist,\n            afterRepairValueDist: afterRepairValueDist,\n            purchasePriceMin: purchasePriceMin,\n            interestRateMin: interestRateMin,\n            closingCostsMin: closingCostsMin,\n            repairsMin: repairsMin,\n            propertyTaxMin: propertyTaxMin,\n            insuranceMin: insuranceMin,\n            expenseUtilitiesMin: expenseUtilitiesMin,\n            managementMin: managementMin,\n            leasingCostsMin: leasingCostsMin,\n            avgOccupancyMin: avgOccupancyMin,\n            maintenanceMin: maintenanceMin,\n            incomePerUnitMin: incomePerUnitMin,\n            vacancyRateMin: vacancyRateMin,\n            incomeUtilitiesMin: incomeUtilitiesMin,\n            afterRepairValueMin: afterRepairValueMin,\n            purchasePriceMax: purchasePriceMax,\n            interestRateMax: interestRateMax,\n            closingCostsMax: closingCostsMax,\n            repairsMax: repairsMax,\n            propertyTaxMax: propertyTaxMax,\n            insuranceMax: insuranceMax,\n            expenseUtilitiesMax: expenseUtilitiesMax,\n            managementMax: managementMax,\n            leasingCostsMax: leasingCostsMax,\n            avgOccupancyMax: avgOccupancyMax,\n            maintenanceMax: maintenanceMax,\n            incomePerUnitMax: incomePerUnitMax,\n            vacancyRateMax: vacancyRateMax,\n            incomeUtilitiesMax: incomeUtilitiesMax,\n            afterRepairValueMax: afterRepairValueMax,\n            purchasePriceChoice: purchasePriceChoice,\n            interestRateChoice: interestRateChoice,\n            closingCostsChoice: closingCostsChoice,\n            repairsChoice: repairsChoice,\n            propertyTaxChoice: propertyTaxChoice,\n            insuranceChoice: insuranceChoice,\n            expenseUtilitiesChoice: expenseUtilitiesChoice,\n            managementChoice: managementChoice,\n            leasingCostsChoice: leasingCostsChoice,\n            avgOccupancyChoice: avgOccupancyChoice,\n            maintenanceChoice: maintenanceChoice,\n            incomePerUnitChoice: incomePerUnitChoice,\n            vacancyRateChoice: vacancyRateChoice,\n            incomeUtilitiesChoice: incomeUtilitiesChoice,\n            afterRepairValueChoice: afterRepairValueChoice,                                    \n        }))));\n        window.history.replaceState({}, '', `${u.pathname}?${params}`);\n        setLink(window.location.href);\n        setDialogVisible(true);\n    }, [\n        address,\n        url,\n        purchasePrice,\n        downPayment,\n        interestRate,\n        mortgageYears,\n        mortgagePaymentsPerYear,\n        closingCosts,\n        repairs,\n        propertyTax,\n        propertyTaxFreq,\n        insurance,\n        insuranceFreq,\n        expenseUtilities,\n        management,\n        leasingCosts,\n        avgOccupancy,\n        maintenance,\n        incomePerUnit,\n        numUnits,\n        vacancyRate,\n        incomeUtilities,\n        numInvestors,\n        loanToValue,\n        afterRepairValue,\n        brrrr,\n        forecast,\n        annRevInc,\n        annOpExpInc,\n        annReinvRet,\n        annAppr,\n        purchasePriceDist,\n        interestRateDist,\n        closingCostsDist,\n        repairsDist,\n        propertyTaxDist,\n        insuranceDist,\n        expenseUtilitiesDist,\n        managementDist,\n        leasingCostsDist,\n        avgOccupancyDist,\n        maintenanceDist,\n        incomePerUnitDist,\n        vacancyRateDist,\n        incomeUtilitiesDist,\n        afterRepairValueDist,\n        purchasePriceMin,\n        interestRateMin,\n        closingCostsMin,\n        repairsMin,\n        propertyTaxMin,\n        insuranceMin,\n        expenseUtilitiesMin,\n        managementMin,\n        leasingCostsMin,\n        avgOccupancyMin,\n        maintenanceMin,\n        incomePerUnitMin,\n        vacancyRateMin,\n        incomeUtilitiesMin,\n        afterRepairValueMin,\n        purchasePriceMax,\n        interestRateMax,\n        closingCostsMax,\n        repairsMax,\n        propertyTaxMax,\n        insuranceMax,\n        expenseUtilitiesMax,\n        managementMax,\n        leasingCostsMax,\n        avgOccupancyMax,\n        maintenanceMax,\n        incomePerUnitMax,\n        vacancyRateMax,\n        incomeUtilitiesMax,\n        afterRepairValueMax,\n        purchasePriceChoice,\n        interestRateChoice,\n        closingCostsChoice,\n        repairsChoice,\n        propertyTaxChoice,\n        insuranceChoice,\n        expenseUtilitiesChoice,\n        managementChoice,\n        leasingCostsChoice,\n        avgOccupancyChoice,\n        maintenanceChoice,\n        incomePerUnitChoice,\n        vacancyRateChoice,\n        incomeUtilitiesChoice,\n        afterRepairValueChoice,                        \n    ]);\n\n    const onHideDialog = useCallback(() => {\n        setDialogVisible(false);\n    }, [setDialogVisible]);\n\n    const modalProps = useMemo(() => ({\n        isBlocking: true,\n        styles: dialogStyles,\n        dragOptions: undefined,\n    }), []);\n\n    const iconClass = useMemo(() => {\n        return mergeStyles({\n            fontSize: 24,\n            height: 32,\n            width: 32,\n            paddingTop: 7,\n            margin: '0 5px',\n            cursor: \"pointer\",\n            backgroundColor: theme.palette.themeSecondary,\n            color: theme.palette.white,\n        });\n    }, [theme]);\n\n    const copyCreateLink = useCallback(e => {\n        navigator.clipboard.writeText(link);\n        onHideDialog();\n    }, [link, onHideDialog]);\n\n    const dialogContentProps = useMemo(() => ({\n        type: DialogType.normal,\n        title: 'Copy Link',\n        closeButtonAriaLabel: 'Close',\n        subText: link,\n    }), [link]);\n\n    return (\n        <>\n            <ThemedIcon\n                title=\"Copy Link to this Page\"\n                iconName=\"AddLink\"\n                className={iconClass}\n                onClick={onClickCreateLink}\n            />\n            <Dialog\n                hidden={!dialogVisible}\n                onDismiss={onHideDialog}\n                dialogContentProps={dialogContentProps}\n                modalProps={modalProps}\n            >\n                <DialogFooter>\n                    <PrimaryButton onClick={copyCreateLink} text=\"Copy\"/>\n                    <DefaultButton onClick={onHideDialog} text=\"Cancel\"/>\n                </DialogFooter>\n            </Dialog>\n        </>\n    );\n};\n\nexport default CreateLinkButton;","import CreateLinkButton from './CreateLinkButton';\nexport default CreateLinkButton;","import {\n    useCallback,\n} from 'react';\n\nimport {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    Callout,\n    Toggle,\n} from '@fluentui/react';\n\nimport {\n    settingsVisibleState, themes, themeState,\n} from '../store';\n\nconst Settings = ({ target }) => {\n    const [settingsVisible, setSettingsVisible] = useRecoilState(settingsVisibleState);\n    const hideSettings = useCallback(() => {\n        setSettingsVisible(false);\n    }, [setSettingsVisible]);\n\n    const [theme, setTheme] = useRecoilState(themeState);\n    const setDarkMode = useCallback((ev, checked) => {\n        setTheme(checked === true ? themes.dark : themes.default);\n    }, [setTheme]);\n\n    if (!settingsVisible) return null;\n    return (\n        <Callout\n            target={target}\n            onDismiss={hideSettings}\n        >\n            <div style={{padding: 10}}>\n                <Toggle\n                    label=\"Dark Mode\"\n                    defaultChecked={theme === themes.dark ? true : undefined}\n                    onText=\"On\"\n                    offText=\"Off\"\n                    onChange={setDarkMode}\n                />\n            </div>\n        </Callout>\n    );\n};\n\nexport default Settings;","import Settings from './Settings';\nexport default Settings;","import {\n    useCallback,\n    useRef,\n    useMemo,\n} from 'react';\n\nimport {\n    useRecoilState,\n    useRecoilValue,\n} from 'recoil';\n\nimport {\n    Label,\n} from '@fluentui/react';\nimport { mergeStyles } from 'office-ui-fabric-react/lib/Styling';\n\nimport ThemedIcon from '../ThemedIcon';\nimport CreateLinkButton from '../CreateLinkButton';\nimport Settings from '../Settings';\n\nimport {\n    settingsVisibleState,\n    themeState,\n} from '../store';\n\nimport './style.css';\n\nconst Header = () => {\n    const theme = useRecoilValue(themeState);\n\n    const [settingsVisible, setSettingsVisible] = useRecoilState(settingsVisibleState);\n    const toggleSettings = useCallback(() => {\n        setSettingsVisible(!settingsVisible);\n    }, [settingsVisible, setSettingsVisible]);\n\n    const settingsRef = useRef();\n\n    const iconClass = useMemo(() => {\n        return mergeStyles({\n            fontSize: 24,\n            height: 32,\n            width: 32,\n            paddingTop: 7,\n            margin: '0 5px',\n            cursor: \"pointer\",\n            backgroundColor: theme.palette.themeSecondary,\n            color: theme.palette.white,\n        });\n    }, [theme]);\n\n    return (\n        <div style={{display:\"flex\", backgroundColor: theme.palette.themeSecondary}}>\n            <div>\n                <CreateLinkButton/>\n            </div>\n            <div style={{flex:1}}>\n                <Label className=\"Header-Title\" style={{color: theme.palette.white}}>Real Estate Investment Calculator</Label>\n            </div>\n            <div ref={settingsRef}>\n                <Settings target={settingsRef}/>\n                <ThemedIcon\n                    title=\"Settings\"\n                    iconName=\"Settings\"\n                    className={iconClass}\n                    onClick={toggleSettings}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","import {\n    useCallback,\n    useEffect,\n    useState,\n} from 'react';\n\nimport {\n    TextField,\n} from '@fluentui/react';\n\nimport './style.css';\n\nconst defaultValidate = (s) => {\n    if (parseFloat(s) < 0) return \"0\";\n    return s;\n};\n\nconst ValueTextField = props => {\n    const {\n        defaultValue,\n        onChange,\n        validate = defaultValidate,\n        ...restProps\n    } = props;\n\n    const [val, setVal] = useState(defaultValue);\n    useEffect(() => {\n        setVal(defaultValue);\n    }, [defaultValue, setVal])\n    const onChangeCallback = useCallback((e, txt) => {\n        const newVal = validate(txt);\n        setVal(newVal);\n        onChange(newVal);\n    }, [setVal, onChange, validate]);\n\n    const onFocus = useCallback(e => {\n        e.target.select();\n    }, []);\n\n    return (\n        <TextField\n            inputClassName=\"ValueTextField\"\n            type=\"number\"\n            value={val}\n            onChange={onChangeCallback}\n            onFocus={onFocus}\n            {...restProps}\n        />\n    );\n};\n\nexport default ValueTextField;","import ValueTextField from './ValueTextField';\nexport default ValueTextField;","import './style.css';\n\nimport ValueTextField from '../ValueTextField';\n\nconst rangeCheck = val => {\n    if (parseFloat(val) < 0) return \"0\";\n    else if (parseFloat(val) > 100) return \"100\";\n    return val;\n};\n\nconst ValuePctTextField = props => {\n    const {\n        ...restProps\n    } = props;\n\n    return (\n        <ValueTextField\n            inputClassName=\"TextField\"\n            suffix=\"%\"\n            validate={rangeCheck}\n            {...restProps}\n        />\n    );\n};\n\nexport default ValuePctTextField;","import ValuePctTextField from './ValuePctTextField';\nexport default ValuePctTextField;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    annRevIncState,\n} from '../store';\n\nimport ValuePctTextField from '../ValuePctTextField';\n\nconst AnnualRevenueIncrease = () => {\n    const [annRevInc, setAnnRevInc] = useRecoilState(annRevIncState);\n    return (\n        <ValuePctTextField\n            onChange={setAnnRevInc}\n            defaultValue={annRevInc}\n        />\n    );\n};\n\nexport default AnnualRevenueIncrease;","import AnnualRevenueIncrease from './AnnualRevenueIncrease';\nexport default AnnualRevenueIncrease;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    annOpExpIncState,\n} from '../store';\n\nimport ValuePctTextField from '../ValuePctTextField';\n\nconst AnnualOperatingExpenseIncrease = () => {\n    const [annOpExpInc, setAnnOpExpInc] = useRecoilState(annOpExpIncState);\n\n    return (\n        <ValuePctTextField\n            onChange={setAnnOpExpInc}\n            defaultValue={annOpExpInc}\n        />\n    );\n};\n\nexport default AnnualOperatingExpenseIncrease;","import AnnualOperatingExpenseIncrease from './AnnualOperatingExpenseIncrease';\nexport default AnnualOperatingExpenseIncrease;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    annReinvRetState,\n} from '../store';\n\nimport ValuePctTextField from '../ValuePctTextField';\n\nconst AnnualReinvestmentReturn = () => {\n    const [annReinvRet, setAnnReinvRet] = useRecoilState(annReinvRetState);\n\n    return (\n        <ValuePctTextField\n            onChange={setAnnReinvRet}\n            defaultValue={annReinvRet}\n        />\n    );\n};\n\nexport default AnnualReinvestmentReturn;","import AnnualReinvestmentReturn from './AnnualReinvestmentReturn';\nexport default AnnualReinvestmentReturn;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    annApprState,\n} from '../store';\n\nimport ValuePctTextField from '../ValuePctTextField';\n\nconst AnnualAppreciation = () => {\n    const [annAppr, setAnnApprState] = useRecoilState(annApprState);\n\n    return (\n        <ValuePctTextField\n            onChange={setAnnApprState}\n            defaultValue={annAppr}\n        />\n    );\n};\n\nexport default AnnualAppreciation;","import AnnualAppreciation from './AnnualAppreciation';\nexport default AnnualAppreciation;","import {\n    Label,\n} from '@fluentui/react';\n\nimport AnnualRevenueIncrease from '../AnnualRevenueIncrease';\nimport AnnualOperatingExpenseIncrease from '../AnnualOperatingExpenseIncrease';\nimport AnnualReinvestmentReturn from '../AnnualReinvestmentReturn';\nimport AnnualAppreciation from '../AnnualAppreication';\n\nimport './style.css';\n\nconst ForecastInput = () => {\n    return (\n        <div className=\"ForecastInput-Div\">\n            <Label className=\"ForecastInput-Title\">Annual Revenue Increase</Label>\n            <div className=\"ForecastInput-Container\">\n                <AnnualRevenueIncrease/>\n            </div>\n            <Label className=\"ForecastInput-Title\">Annual Operating Expense Increase</Label>\n            <div className=\"ForecastInput-Container\">\n                <AnnualOperatingExpenseIncrease/>\n            </div>\n            <Label className=\"ForecastInput-Title\">Annual Reinvestment Return</Label>\n            <div className=\"ForecastInput-Container\">\n                <AnnualReinvestmentReturn/>\n            </div>\n            <Label className=\"ForecastInput-Title\">Annual Appreciation</Label>\n            <div className=\"ForecastInput-Container\">\n                <AnnualAppreciation/>\n            </div>\n        </div>\n    );\n};\n\nexport default ForecastInput;","import ForecastInput from './ForecastInput';\nexport default ForecastInput;","import plotComponentFactory from 'react-plotly.js/factory';\nimport Plotly from 'plotly.js-dist';\n\nconst ReactPlotly = plotComponentFactory(Plotly);\n\nexport default ReactPlotly;","import ReactPlotly from './ReactPlotly';\nexport default ReactPlotly;","import {\n    useCallback,\n    useMemo,\n    useState,\n    useLayoutEffect,\n    useEffect,\n    useRef,\n} from 'react';\n\nimport {\n    useRecoilValue,\n} from 'recoil';\n\nimport {\n    themeState,\n    forecastCashOnCash,\n    forecastTotalROI,\n    forecastCmAnnualizedReturn,\n} from '../store';\n\nimport {\n    percentile,\n} from 'stats-lite';\n\nimport ReactPlotly from '../ReactPlotly';\n\nconst plotConfig = {\n    modeBarButtonsToRemove: [\n        'sendDataToCloud', 'select2d', 'lasso2d', 'resetScale2d'\n    ],\n    displaylogo: false,\n    scrollZoom: false,\n};\n\nconst useDimensions = recalc => {\n    const ref = useRef();\n    const [dimensions, setDimensions] = useState({});\n\n    useLayoutEffect(() => {\n        if (ref.current === null) return;\n        setDimensions(ref.current.getBoundingClientRect().toJSON());\n    }, [setDimensions, recalc]);\n\n    useEffect(() => {\n        if (ref.current === null) return;\n        const handleResize = () => {\n            setDimensions(ref.current.getBoundingClientRect().toJSON());\n        };\n        window.addEventListener('resize', handleResize);\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        }\n    }, []);\n    return [ref, dimensions];\n};\n\nconst ReturnFcstGraph = props => {\n    const theme = useRecoilValue(themeState);\n    const forecastCashOnCashVal = useRecoilValue(forecastCashOnCash);\n    const forecastTotalROIVal = useRecoilValue(forecastTotalROI);\n    const forecastCmAnnualizedReturnVal = useRecoilValue(forecastCmAnnualizedReturn);\n\n    const {\n        updateLayout,\n    } = props;\n\n    const data = [\n        {\n            x: Array.from(Array(31).keys()).slice(1,31),\n            y: forecastCashOnCashVal,\n            type: 'line',\n            mode: 'lines+markers',\n            marker: {\n                color: 'blue',\n            },\n            name: 'Cash on Cash'\n        },\n        {\n            x: Array.from(Array(31).keys()).slice(1,31),\n            y: forecastTotalROIVal,\n            type: 'line',\n            mode: 'lines+markers',\n            marker: {\n                color: 'red',\n            },\n            name: 'Total ROI'\n        },\n        {\n            x: Array.from(Array(31).keys()).slice(1,31),\n            y: forecastCmAnnualizedReturnVal,\n            type: 'line',\n            mode: 'lines+markers',\n            marker: {\n                color: 'gray',\n            },\n            name: 'Cumulative Annualized Return'\n        },\n    ]\n\n    const [graphDivRef, dimensions] = useDimensions(updateLayout);\n\n    const layout = useMemo(() => {\n        return {\n            title: 'Return Per Year Over Time',\n            xaxis: {\n                title: \"Year\",\n                gridcolor: theme.palette.neutralLight,\n                range: [1,30],\n            },\n            yaxis: {\n                side: 'left',\n                anchor: 'x',\n                showline: true,\n                title: \"Return\",\n                autorange: true,\n                gridcolor: theme.palette.neutralLight,\n                tickformat: ',.1%',\n            },\n            paper_bgcolor: theme.palette.white,\n            plot_bgcolor: theme.palette.white,\n            font: {\n                color: theme.palette.black,\n            },\n            showlegend: false,\n            width: dimensions.width,\n        };\n    }, [theme, dimensions, forecastCashOnCashVal, forecastTotalROIVal, forecastCmAnnualizedReturnVal]);\n\n    const assignRef = useCallback(ref => {\n        if (ref === null) return;\n        graphDivRef.current = ref;\n    }, [graphDivRef]);\n\n    return (\n        <div\n            id=\"ReturnFcstGraph\"\n            style={{\n                height: 'calc(100%)',\n                width: 'calc(100%)',\n            }}\n            ref={assignRef}\n        >\n            <ReactPlotly\n                divId={\"chart\"}\n                layout={layout}\n                data={data}\n                useResizeHandler={true}\n                config={plotConfig}\n                style={{\n                    width: 'calc(100%)',\n                    height: 'inherit',\n                }}\n            />\n        </div>\n    );\n};\n\nexport default ReturnFcstGraph;","import ReturnFcstGraph from './ReturnFcstGraph';\nexport default ReturnFcstGraph;","import {\n    useCallback,\n    useMemo,\n    useState,\n    useLayoutEffect,\n    useEffect,\n    useRef,\n} from 'react';\n\nimport {\n    useRecoilValue,\n} from 'recoil';\n\nimport {\n    themeState,\n    forecastRevenue,\n    forecastTotalExpenses,\n    forecastMortgage,\n    forecastCashFlow,\n    //forecastEquityAccrued,\n    //forecastTotalReturn,\n} from '../store';\n\nimport {\n    percentile,\n} from 'stats-lite';\n\nimport ReactPlotly from '../ReactPlotly';\n\nconst plotConfig = {\n    modeBarButtonsToRemove: [\n        'sendDataToCloud', 'select2d', 'lasso2d', 'resetScale2d'\n    ],\n    displaylogo: false,\n    scrollZoom: false,\n};\n\nconst useDimensions = recalc => {\n    const ref = useRef();\n    const [dimensions, setDimensions] = useState({});\n\n    useLayoutEffect(() => {\n        if (ref.current === null) return;\n        setDimensions(ref.current.getBoundingClientRect().toJSON());\n    }, [setDimensions, recalc]);\n\n    useEffect(() => {\n        if (ref.current === null) return;\n        const handleResize = () => {\n            setDimensions(ref.current.getBoundingClientRect().toJSON());\n        };\n        window.addEventListener('resize', handleResize);\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        }\n    }, []);\n    return [ref, dimensions];\n};\n\nconst BalanceSheetGraph = props => {\n    const theme = useRecoilValue(themeState);\n    const forecastRevenueVal = useRecoilValue(forecastRevenue);\n    const forecastTotalExpensesVal = useRecoilValue(forecastTotalExpenses);\n    const forecastMortgageVal = useRecoilValue(forecastMortgage);\n    const forecastCashFlowVal = useRecoilValue(forecastCashFlow);\n    //const forecastEquityAccruedVal = useRecoilValue(forecastEquityAccrued);\n    //const forecastTotalReturnVal = useRecoilValue(forecastTotalReturn);\n\n    const {\n        updateLayout,\n    } = props;\n\n    const data = [\n        {\n            x: Array.from(Array(31).keys()).slice(1,31),\n            y: forecastRevenueVal,\n            type: 'line',\n            mode: 'lines+markers',\n            marker: {\n                color: 'green',\n            },\n            name: 'Revenue',\n        },\n        /*\n        {\n            x: Array.from(Array(31).keys()).slice(1,31),\n            y: forecastEquityAccruedVal,\n            type: 'line',\n            mode: 'lines+markers',\n            marker: {\n                color: 'green',\n            },\n            name: 'Equity Accrued',\n            line: {\n                dash: 'dot',\n              }\n        },*/   \n        {\n            x: Array.from(Array(31).keys()).slice(1,31),\n            y: forecastTotalExpensesVal,\n            type: 'line',\n            mode: 'lines+markers',\n            marker: {\n                color: 'red',\n            },\n            name: 'Total Expenses',\n        },\n        {\n            x: Array.from(Array(31).keys()).slice(1,31),\n            y: forecastMortgageVal,\n            type: 'line',\n            mode: 'lines+markers',\n            marker: {\n                color: 'crimson',\n            },\n            name: 'Mortgage',\n        },            \n        {\n            x: Array.from(Array(31).keys()).slice(1,31),\n            y: forecastCashFlowVal,\n            type: 'line',\n            mode: 'lines+markers',\n            marker: {\n                color: 'gray',\n            },\n            name: 'Cash Flow',\n        },\n        /*\n        {\n            x: Array.from(Array(31).keys()).slice(1,31),\n            y: forecastTotalReturnVal,\n            type: 'line',\n            mode: 'lines+markers',\n            marker: {\n                color: 'gray',\n            },\n            name: 'Total Return',\n            line: {\n                dash: 'dot',\n              }\n        },*/    \n    ]\n\n    const [graphDivRef, dimensions] = useDimensions(updateLayout);\n\n    const layout = useMemo(() => {\n        return {\n            title: 'Revenue vs Expenses Per Year Over Time',\n            xaxis: {\n                title: \"Year\",\n                gridcolor: theme.palette.neutralLight,\n                range: [1,30],\n            },\n            yaxis: {\n                side: 'left',\n                anchor: 'x',\n                showline: true,\n                title: \"Return\",\n                autorange: true,\n                gridcolor: theme.palette.neutralLight,\n                tickformat: '$,0f',\n                hoverformat: '$,.0f',\n            },\n            paper_bgcolor: theme.palette.white,\n            plot_bgcolor: theme.palette.white,\n            font: {\n                color: theme.palette.black,\n            },\n            showlegend: false,\n            width: dimensions.width,\n        };\n    }, [theme, dimensions, forecastRevenueVal, forecastTotalExpensesVal, forecastMortgageVal, forecastCashFlowVal]); //, forecastEquityAccruedVal, forecastTotalReturnVal\n\n    const assignRef = useCallback(ref => {\n        if (ref === null) return;\n        graphDivRef.current = ref;\n    }, [graphDivRef]);\n\n    return (\n        <div\n            id=\"BalanceSheetGraph\"\n            style={{\n                height: 'calc(100%)',\n                width: 'calc(100%)',\n            }}\n            ref={assignRef}\n        >\n            <ReactPlotly\n                divId={\"chart\"}\n                layout={layout}\n                data={data}\n                useResizeHandler={true}\n                config={plotConfig}\n                style={{\n                    width: 'calc(100%)',\n                    height: 'inherit',\n                }}\n            />\n        </div>\n    );\n};\n\nexport default BalanceSheetGraph;","import BalanceSheetGraph from './BalanceSheetGraph';\nexport default BalanceSheetGraph;","import './style.css';\n\nimport { DetailsList, DetailsRow } from '@fluentui/react';\nimport { IDetailsRowStyles, IDetailsListProps } from '@fluentui/react/lib/DetailsList';\nimport { getTheme } from '@fluentui/react/lib/Styling';\n\nconst theme = getTheme();\n\nconst DetailsListCustom = props => {\n    const {\n        to_highlight,\n        ...restProps\n    } = props;\n\n    const _onRenderRow = props => {\n        const {\n            item,\n            ...restProps\n        } = props;\n        \n        const customStyles: Partial<IDetailsRowStyles> = {};\n    \n        if (to_highlight.includes(item['description'])){\n            customStyles.root = { \n                fontWeight: 'bold', \n                backgroundColor: theme.palette.themeSecondary, \n                color: theme.palette.white \n            };\n    \n            return <DetailsRow \n                    styles={customStyles} \n                    item={item} \n                    {...restProps} \n                    />;\n        }\n        return <DetailsRow \n                item={item} \n                {...restProps} \n                />;\n      };\n    \n    return (\n        <DetailsList\n            onRenderRow={ _onRenderRow }\n            {...restProps}\n        />\n    );\n};\n\nexport default DetailsListCustom;","import DetailsListCustom from './DetailsListCustom';\nexport default DetailsListCustom;","import {\n    Label,\n    ILabelStyles,\n    ILabelStyleProps,\n    ITextFieldProps,\n} from '@fluentui/react';\n\nimport { IconButton, IButtonStyles } from '@fluentui/react/lib/Button';\nimport { TooltipHost, ITooltipHostStyles } from '@fluentui/react/lib/Tooltip';\nimport { Callout } from '@fluentui/react/lib/Callout';\nimport { IStackTokens, Stack, IStackStyles } from '@fluentui/react/lib/Stack';\nimport { useBoolean, useId } from '@fluentui/react-hooks';\n//https://developer.microsoft.com/en-us/fluentui#/controls/web/textfield\n\nexport interface ITextFieldCustomRenderExampleState {\nisCalloutVisible: boolean;\n}\n\nconst stackTokens: IStackTokens = {\nchildrenGap: 4,\nmaxWidth: 300,\n};\n\nconst labelCalloutStackStyles: Partial<IStackStyles> = { root: { padding: 10 } };\nconst iconButtonStyles: Partial<IButtonStyles> = { root: { marginBottom: -3 }, \n                                                    button: {\n                                                    width: 12, height: 12,\n                                                    padding: 0,\n                                                    },\n                                                    icon: {\n                                                    fontSize:12,\n                                                    color:'#000000',\n                                                    lineHeight:0,\n                                                    padding:0\n                                                    },\n                                                    tooltip: {\n                                                    marginLeft:5,\n                                                    marginRight:5\n                                                    },\n                                                    rootHovered: {\n                                                    backgroundColor: \"none\"\n                                                    }};\nconst labelStyles: Partial<ILabelStyles> = { root: { verticalAlign: \"top\"} };    \nconst calloutProps = { gapSpace: 0 };\nconst hostStyles: Partial<ITooltipHostStyles> = { root: { display: 'inline-block' } };                                  \nconst iconProps = { iconName: 'Info' };\n    \nconst CustomFcstResultLabel = (props: ITextFieldProps): JSX.Element => {\n    const [isCalloutVisible, { toggle: toggleIsCalloutVisible }] = useBoolean(false);\n    const descriptionId: string = useId('description');\n    const iconButtonId: string = useId('iconButton');\n\n    return (\n        <>\n        <Stack horizontal horizontalAlign=\"left\" verticalAlign=\"bottom\" tokens={stackTokens}>\n        <TooltipHost\n            calloutProps={calloutProps}\n            styles={hostStyles}>\n            {(typeof props.description == 'string') && <div className=\"IconDiv\"><IconButton\n                id={iconButtonId}\n                iconProps={iconProps}\n                //title=\"Calculation description\"\n                //ariaLabel=\"Calculation description\"\n                onClick={toggleIsCalloutVisible}\n                styles={iconButtonStyles}\n            /></div>}\n            </TooltipHost>\n            <Label\n            styles={labelStyles}>\n            \n            {props.label}\n            </Label>\n        </Stack>\n        {isCalloutVisible && (\n            <Callout\n            target={'#' + iconButtonId}\n            setInitialFocus\n            onDismiss={toggleIsCalloutVisible}\n            ariaDescribedBy={descriptionId}\n            role=\"alertdialog\"\n            >\n            <Stack tokens={stackTokens} horizontalAlign=\"end\" styles={labelCalloutStackStyles}>\n                <span id={descriptionId}>{props.description}</span>\n            </Stack>\n            </Callout>\n        )}\n        </>\n    );\n};\n\nexport default CustomFcstResultLabel;","import CustomFcstResultLabel from './CustomFcstResultLabel';\nexport default CustomFcstResultLabel;","import {\n    useRecoilValue,\n} from 'recoil';\n\nimport {\n    useMemo,\n} from 'react';\n\nimport {\n    forecastRevenue,\n    forecastVacancy,\n    forecastTotalExpenses,\n    forecastCashFlow,\n    forecastCashOnCash,\n    forecastTotalROI,\n    forecastEquityAccrued,\n    forecastUtilities,\n    forecastInsurance,\n    forecastPropertyTax,\n    forecastMaintenance,\n    forecastPropertyManagement,\n    forecastMortgage,\n    forecastNetOperatingIncome,\n    forecastTotalReturn,\n    forecastCmAnnualizedReturn,\n    forecastAppreciation,\n    forecastReinvCashFlows,\n} from '../store';\n\nimport ReturnFcstGraph from '../ReturnFcstGraph';\nimport BalanceSheetGraph from '../BalanceSheetGraph';\nimport DetailsListCustom from '../DetailsListCustom';\nimport CustomFcstResultLabel from '../CustomFcstResultLabel';\n\nimport './style.css';\n\nconst ForecastOutput = () => {\n    const forecastRevenueVal = useRecoilValue(forecastRevenue);\n    const forecastVacancyVal = useRecoilValue(forecastVacancy);\n    const forecastPropertyManagementVal = useRecoilValue(forecastPropertyManagement);\n    const forecastMaintenanceVal = useRecoilValue(forecastMaintenance);\n    const forecastUtilitiesVal = useRecoilValue(forecastUtilities);\n    const forecastPropertyTaxVal = useRecoilValue(forecastPropertyTax);\n    const forecastInsuranceVal = useRecoilValue(forecastInsurance);\n    const forecastTotalExpensesVal = useRecoilValue(forecastTotalExpenses);\n    const forecastNetOperatingIncomeVal = useRecoilValue(forecastNetOperatingIncome);\n    const forecastAppreciationVal = useRecoilValue(forecastAppreciation);\n    const forecastReinvCashFlowsVal = useRecoilValue(forecastReinvCashFlows);\n    const forecastEquityAccruedVal = useRecoilValue(forecastEquityAccrued);\n    const forecastCashOnCashVal = useRecoilValue(forecastCashOnCash);\n    const forecastCashFlowVal = useRecoilValue(forecastCashFlow);\n    const forecastTotalReturnVal = useRecoilValue(forecastTotalReturn);\n    const forecastTotalROIVal = useRecoilValue(forecastTotalROI);\n    const forecastMortgageVal = useRecoilValue(forecastMortgage);\n    const forecastCmAnnualizedReturnVal = useRecoilValue(forecastCmAnnualizedReturn);\n\n    const [cols, items] = useMemo(() => {\n\n        const createItem = (info, desc, arr, type) => {\n            if (type === '$') {\n                return {\n                    'info': info,\n                    'description': desc,\n                    'yr1': '$' + arr[0].toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n                    'yr2': '$' + arr[1].toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n                    'yr5': '$' + arr[4].toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n                    'yr10': '$' + arr[9].toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n                    'yr15': '$' + arr[14].toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n                    'yr20': '$' + arr[19].toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n                    'yr30': '$' + arr[29].toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n                    };\n                }\n            else if (type === '%') {\n                arr = arr.map(x => x * 100)\n                return {\n                    'info': info,\n                    'description': desc,\n                    'yr1': arr[0].toFixed(2) + '%',\n                    'yr2': arr[1].toFixed(2) + '%',\n                    'yr5': arr[4].toFixed(2) + '%',\n                    'yr10': arr[9].toFixed(2) + '%',\n                    'yr15': arr[14].toFixed(2) + '%',\n                    'yr20': arr[19].toFixed(2) + '%',\n                    'yr30': arr[29].toFixed(2) + '%',\n                    };\n            }\n        }\n\n        const cols = [{ key: 'column0', name: '', fieldName: 'info', minWidth: 8, maxWidth: 8, isResizable: true },\n            { key: 'column1', name: 'Description', fieldName: 'description', minWidth: 10, maxWidth: 125, isResizable: true },\n            { key: 'column2', name: 'Year 1', fieldName: 'yr1', minWidth: 10, maxWidth: 70, isResizable: true },\n            { key: 'column3', name: 'Year 2', fieldName: 'yr2', minWidth: 10, maxWidth: 70, isResizable: true },\n            { key: 'column4', name: 'Year 5', fieldName: 'yr5', minWidth: 10, maxWidth: 70, isResizable: true },\n            { key: 'column5', name: 'Year 10', fieldName: 'yr10', minWidth: 10, maxWidth: 70, isResizable: true },\n            { key: 'column6', name: 'Year 15', fieldName: 'yr15', minWidth: 10, maxWidth: 70, isResizable: true },\n            { key: 'column7', name: 'Year 20', fieldName: 'yr20', minWidth: 10, maxWidth: 70, isResizable: true },\n            { key: 'column8', name: 'Year 30', fieldName: 'yr30', minWidth: 10, maxWidth: 70, isResizable: true },];\n        \n        const items = [createItem('',\n                                    'Revenue',forecastRevenueVal,'$'),\n                        createItem('',\n                                    'Vacancy',forecastVacancyVal,'$'),\n                        createItem(''\n                                    ,'Property Management',forecastPropertyManagementVal,'$'),\n                        createItem(''\n                                    ,'Maintenance',forecastMaintenanceVal,'$'),\n                        createItem(''\n                                    ,'Property Tax',forecastPropertyTaxVal,'$'),\n                        createItem(''\n                                    ,'Insurance',forecastInsuranceVal,'$'),\n                        createItem(''\n                                    ,'Utilities',forecastUtilitiesVal,'$'),\n                        createItem(''\n                                    ,'Total Expenses',forecastTotalExpensesVal,'$'),\n                        createItem(''\n                                    ,'Net Operating Income',forecastNetOperatingIncomeVal,'$'),\n                        createItem(''\n                                    ,'Mortgage',forecastMortgageVal,'$'),\n                        createItem(''\n                                    ,'Cash Flow',forecastCashFlowVal,'$'),\n                        createItem(''\n                                    ,'Cash on Cash',forecastCashOnCashVal,'%'),\n                        createItem(<div className=\"FcstIconDiv\"><CustomFcstResultLabel description={'Cash flows reinvested at the annual reinvestment return rate'}/></div>\n                                    ,'Cash Flow Reinv',forecastReinvCashFlowsVal,'$'),\n                        createItem(<div className=\"FcstIconDiv\"><CustomFcstResultLabel description={'Principal paid into the mortgage in this year'}/></div>\n                                    ,'Equity Accrued',forecastEquityAccruedVal,'$'),\n                        createItem(<div className=\"FcstIconDiv\"><CustomFcstResultLabel description={'Appreciation on the property purchase price plus repairs or ARV, as applicable; first year appreciation is forced appreciation'}/></div>\n                                    ,'Appreciation',forecastAppreciationVal,'$'),\n                        createItem(<div className=\"FcstIconDiv\"><CustomFcstResultLabel description={'Sum of cash flows, earnings on reinvested cash flows, equity accrued, and property appreciation for this year'}/></div>\n                                    ,'Total Return',forecastTotalReturnVal,'$'),\n                        createItem(<div className=\"FcstIconDiv\"><CustomFcstResultLabel description={'Total ROI for this year'}/></div>\n                                    ,'Total ROI',forecastTotalROIVal,'%'),\n                        createItem(<div className=\"FcstIconDiv\"><CustomFcstResultLabel description={'Total cumulative ROI annualized over the current and all preceding years'}/></div>,\n                                    'Cumulative Ann Return',forecastCmAnnualizedReturnVal,'%'),\n                    ];\n\n        return [cols, items];\n    }, [forecastRevenueVal\n        ,forecastVacancyVal\n        ,forecastPropertyManagementVal\n        ,forecastMaintenanceVal\n        ,forecastPropertyTaxVal\n        ,forecastInsuranceVal\n        ,forecastUtilitiesVal\n        ,forecastTotalExpensesVal\n        ,forecastNetOperatingIncomeVal\n        ,forecastMortgageVal\n        ,forecastCashFlowVal\n        ,forecastCashOnCashVal\n        ,forecastReinvCashFlowsVal\n        ,forecastEquityAccruedVal\n        ,forecastAppreciationVal\n        ,forecastTotalReturnVal\n        ,forecastTotalROIVal\n        ,forecastCmAnnualizedReturnVal\n    ]);\n\n    return (\n        <div className=\"ForecastOutput-Parent-Div\">\n            <div className=\"ForecastOutput-Div\">\n                <DetailsListCustom\n                    items={items}\n                    columns={cols}\n                    selectionMode={0}\n                    to_highlight={['Revenue','Total Expenses','Net Operating Income','Cash Flow','Cash on Cash','Total Return','Total ROI']}\n                />\n                <ReturnFcstGraph/>\n                <BalanceSheetGraph/>\n            </div>\n        </div>\n    );\n};\n\nexport default ForecastOutput;","import ForecastOutput from './ForecastOutput';\nexport default ForecastOutput;","import { Panel, PanelType } from '@fluentui/react';\nimport { useCallback } from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport ForecastInput from '../ForecastInput';\nimport ForecastOutput from '../ForecastOutput';\nimport { forecastState } from '../store';\nimport './style.css';\n\nconst ForecastPanel = () => {\n    const [forecast, setForecast] = useRecoilState(forecastState);\n\n    const onDismiss = useCallback(() => {\n        document.getElementById('topFcst').scrollIntoView(); // scroll to top as workaround for plotly issue\n        setForecast(false);\n    }, [setForecast]);\n\n    return (\n        <Panel\n            id=\"fcstPanel\"\n            isOpen={forecast}\n            headerText={\"Forecast\"}\n            closeButtonAriaLabel=\"Close\"\n            onDismiss={onDismiss}\n            isBlocking={false}\n            isHiddenOnDismiss={true}\n            onOuterClick={onDismiss}\n            type={PanelType.large}\n        ><a id=\"topFcst\"></a>\n            <ForecastInput/>\n            <ForecastOutput/>\n        </Panel>\n    );\n};\n\nexport default ForecastPanel;","import ForecastPanel from './ForecastPanel';\nexport default ForecastPanel;","import {\n    useCallback,\n} from 'react';\n\nimport {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    TextField,\n} from '@fluentui/react';\nimport { mergeStyles } from 'office-ui-fabric-react/lib/Styling';\n\nimport {\n    addressState,\n} from '../store';\n\nimport ThemedIcon from '../ThemedIcon';\n\nimport './style.css';\n\nconst iconClass = mergeStyles({\n    fontSize: 24,\n    height: 32,\n    width: 32,\n    paddingTop: 29,\n    margin: '0 5px',\n    cursor: \"pointer\"\n});\n\nconst Address = () => {\n    const [address, setAddress] = useRecoilState(addressState);\n    const onChangeAddress = useCallback((e, txt) => {\n        setAddress(txt);\n    }, [setAddress]);\n\n    const onClickMap = useCallback(e => {\n        if (address === \"\") return;\n        window.open('https://maps.google.com/maps?q='+address, \"_blank\")\n    }, [address]);\n\n    return (\n        <div className=\"Address-Div\">\n            <div className=\"Address-TextField\">\n                <TextField\n                    label=\"Address\"\n                    onChange={onChangeAddress}\n                    value={address}\n                />\n            </div>\n            <div className=\"Address-Icon\">\n                <ThemedIcon\n                    iconName=\"Nav2DMapView\"\n                    className={iconClass}\n                    onClick={onClickMap}\n                />\n            </div>\n        </div>\n    );\n};\n    \nexport default Address;","import Address from './Address';\nexport default Address;","import {\n    useCallback,\n} from 'react';\n\nimport {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    TextField,\n} from '@fluentui/react';\nimport { mergeStyles } from 'office-ui-fabric-react/lib/Styling';\n\nimport ThemedIcon from '../ThemedIcon';\n\nimport {\n    urlState,\n} from '../store';\n\nimport './style.css';\n\nconst iconClass = mergeStyles({\n    fontSize: 24,\n    height: 32,\n    width: 32,\n    paddingTop: 29,\n    margin: '0 5px',\n    cursor: \"pointer\"\n});\n\nconst Url = () => {\n    const [url, setURL] = useRecoilState(urlState);\n    const onChangeURL = useCallback((e, txt) => {\n        setURL(txt);\n    }, [setURL]);\n\n    const onClickURL = useCallback(e => {\n        if (url === \"\") return;\n        window.open(url, \"_blank\")\n    }, [url]);\n\n    return (\n        <div className=\"Url-Div\">\n            <div className=\"Url-TextField\">\n                <TextField\n                    label=\"URL\"\n                    onChange={onChangeURL}\n                    value={url}\n                />\n            </div>\n            <div className=\"Url-Icon\">\n                <ThemedIcon\n                    iconName=\"OpenInNewTab\"\n                    className={iconClass}\n                    onClick={onClickURL}\n                />\n            </div>\n        </div>\n    );\n};\n    \nexport default Url;","import Url from './Url';\nexport default Url;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    numUnitsState,\n} from '../store';\n\nimport ValueTextField from '../ValueTextField';\n\nimport './style.css';\n\nconst NumUnits = () => {\n    const [numUnits, setNumUnits] = useRecoilState(numUnitsState);\n    return (\n        <ValueTextField\n            label=\"Number of Units\"\n            className=\"NumUnits-TextField\"\n            onChange={setNumUnits}\n            defaultValue={numUnits}\n        />\n    );\n};\n\nexport default NumUnits;","import NumUnits from './NumUnits';\nexport default NumUnits;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    numInvestorsState,\n} from '../store';\n\nimport ValueTextField from '../ValueTextField';\n\nimport './style.css';\n\nconst NumInvestors = () => {\n    const [numInvestors, setNumInvestors] = useRecoilState(numInvestorsState);\n    return (\n        <ValueTextField\n            label=\"Number of Investors\"\n            className=\"NumInvestors-TextField\"\n            onChange={setNumInvestors}\n            defaultValue={numInvestors}\n        />\n    );\n};\n\nexport default NumInvestors;","import NumInvestors from './NumInvestors';\nexport default NumInvestors;","import {\n    brrrrState,\n} from '../store';\n\nimport {\n    useRecoilState,\n} from 'recoil';\nimport { Checkbox } from '@fluentui/react';\nimport { useCallback } from 'react';\n\nimport './style.css';\n\nconst BrrrrToggle = () => {\n    const [brrrr, setBrrrr] = useRecoilState(brrrrState);\n\n    const onChange = useCallback(() => {\n        setBrrrr(!brrrr);\n    }, [brrrr, setBrrrr]);\n\n    return (\n        <div className=\"BrrrrButton-Div\">\n            <Checkbox\n                label=\"Intended to BRRRR\"\n                onChange={onChange}\n                checked={brrrr}\n            />\n        </div>\n    );\n};\n\nexport default BrrrrToggle;","import BrrrrToggle from './BrrrrToggle';\nexport default BrrrrToggle;","import PropertyDetails from './PropertyDetails';\nexport default PropertyDetails;","import {\n    Label,\n} from '@fluentui/react';\n\nimport Address from '../Address';\nimport Url from '../Url';\nimport NumUnits from '../NumUnits';\nimport NumInvestors from '../NumInvestors';\nimport BrrrrToggle from '../BrrrrToggle';\n\nimport './style.css';\n\nconst PropertyDetails = () => {\n    return (\n        <div className=\"PropertyDetails-Div\">\n            <Label className=\"PropertyDetails-Title\">Property Details</Label>\n            <Address/>\n            <Url/>\n            <div className=\"PropertyDetails-Container\">\n                <NumUnits/>\n                <NumInvestors/>\n            </div>\n            <BrrrrToggle/>\n        </div>\n    );\n};\n\nexport default PropertyDetails;","import PurchasePrice from './PurchasePrice';\nexport default PurchasePrice;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    purchasePriceState,\n} from '../store';\n\nimport ValueTextField from '../ValueTextField';\n\nconst PurchasePrice = () => {\n    const [purchasePrice, setPurchasePrice] = useRecoilState(purchasePriceState);\n    return (\n        <ValueTextField\n            label=\"Purchase Price\"\n            onChange={setPurchasePrice}\n            defaultValue={purchasePrice}\n        />\n    );\n};\n\nexport default PurchasePrice;","import DownPayment from './DownPayment';\nexport default DownPayment;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    downPaymentState,\n} from '../store';\n\nimport ValuePctTextField from '../ValuePctTextField';\n\nconst DownPayment = () => {\n    const [downPayment, setDownPayment] = useRecoilState(downPaymentState);\n    return (\n        <ValuePctTextField\n            label=\"Down Payment\"\n            onChange={setDownPayment}\n            defaultValue={downPayment}\n        />\n    );\n};\n\nexport default DownPayment;","import InterestRate from './InterestRate';\nexport default InterestRate;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    interestRateState,\n} from '../store';\n\nimport ValuePctTextField from '../ValuePctTextField';\n\nconst InterestRate = () => {\n    const [interestRate, setInterestRate] = useRecoilState(interestRateState);\n    return (\n        <ValuePctTextField\n            label=\"Interest Rate\"\n            onChange={setInterestRate}\n            defaultValue={interestRate}\n        />\n    );\n};\n\nexport default InterestRate;","import MortgageYears from './MortgageYears';\nexport default MortgageYears;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    mortgageYearsState,\n} from '../store';\n\nimport ValueTextField from '../ValueTextField';\n\nimport './style.css';\n\nconst MortgageYears = () => {\n    const [mortgageYears, setMortgageYears] = useRecoilState(mortgageYearsState);\n    return (\n        <ValueTextField\n            label=\"Years\"\n            className=\"MortgageYears-TextField\"\n            onChange={setMortgageYears}\n            defaultValue={mortgageYears}\n        />\n    );\n};\n\nexport default MortgageYears;","import MortgagePaymentsPerYear from './MortgagePaymentsPerYear';\nexport default MortgagePaymentsPerYear;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    Dropdown,\n} from '@fluentui/react';\n\nimport {\n    useCallback,\n} from 'react';\n\nimport {\n    mortgagePaymentsPerYearState,\n} from '../store';\n\nimport {\n    PaymentsYearOptions\n} from '../store';\n\nimport './style.css';\n\nconst MortgagePaymentsPerYear = () => {\n    const [mortgagePaymentsPerYear, setMortgagePaymentsPerYear] = useRecoilState(mortgagePaymentsPerYearState);\n    const onChangeMortgagePaymentsPerYear = useCallback((e, item) => {\n        setMortgagePaymentsPerYear(item);\n    }, [setMortgagePaymentsPerYear]);\n\n    return (\n        <div className=\"MortgagePaymentsPerYear-Div\">\n            <Dropdown\n                label=\"Payments/Year\"\n                className=\"MortgagePaymentsPerYear-Dropdown\"\n                defaultSelectedKey={mortgagePaymentsPerYear.key}\n                options={PaymentsYearOptions}\n                onChange={onChangeMortgagePaymentsPerYear}\n            />\n        </div>\n    );\n};\n\nexport default MortgagePaymentsPerYear;","import ClosingCosts from './ClosingCosts';\nexport default ClosingCosts;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    closingCostsState,\n} from '../store';\n\nimport ValuePctTextField from '../ValuePctTextField';\n\nconst ClosingCosts = () => {\n    const [closingCosts, setClosingCosts] = useRecoilState(closingCostsState);\n    return (\n        <ValuePctTextField\n            label=\"Closing Costs\"\n            onChange={setClosingCosts}\n            defaultValue={closingCosts}\n        />\n    );\n};\n\nexport default ClosingCosts;","import Repairs from './Repairs';\nexport default Repairs;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    repairsState,\n} from '../store';\n\nimport ValueTextField from '../ValueTextField';\n\nconst Repairs = () => {\n    const [repairs, setRepairs] = useRecoilState(repairsState);\n    return (\n        <ValueTextField\n            label=\"Repairs/Renovation\"\n            onChange={setRepairs}\n            defaultValue={repairs}\n        />\n    );\n};\n\nexport default Repairs;","import AfterRepairValue from './AfterRepairValue';\nexport default AfterRepairValue;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    afterRepairValueState,\n} from '../store';\n\nimport ValueTextField from '../ValueTextField';\n\nconst AfterRepairValue = () => {\n    const [afterRepairValue, setAfterRepairValue] = useRecoilState(afterRepairValueState);\n    return (\n        <ValueTextField\n            label=\"After Repair Value\"\n            onChange={setAfterRepairValue}\n            defaultValue={afterRepairValue}\n        />\n    );\n};\n\nexport default AfterRepairValue;","import LoanToValue from './LoanToValue';\nexport default LoanToValue;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    loanToValueState,\n} from '../store';\n\nimport ValuePctTextField from '../ValuePctTextField';\n\nconst LoanToValue = () => {\n    const [loanToValue, setLoanToValue] = useRecoilState(loanToValueState);\n    return (\n        <ValuePctTextField\n            label=\"Loan to Value\"\n            onChange={setLoanToValue}\n            defaultValue={loanToValue}\n        />\n    );\n};\n\nexport default LoanToValue;","import PurchaseDetails from './PurchaseDetails';\nexport default PurchaseDetails;","import {\n    Label,\n} from '@fluentui/react';\n\nimport {\n    useRecoilValue,\n} from 'recoil';\n\nimport PurchasePrice from '../PurchasePrice';\nimport DownPayment from '../DownPayment';\nimport InterestRate from '../InterestRate';\nimport MortgageYears from '../MortgageYears';\nimport MortgagePaymentsPerYear from '../MortgagePaymentsPerYear';\nimport ClosingCosts from '../ClosingCosts';\nimport Repairs from '../Repairs';\nimport AfterRepairValue from '../AfterRepairValue';\n\nimport './style.css';\n\nimport {\n    brrrrState,\n} from '../store';\nimport LoanToValue from '../LoanToValue';\n\nconst PurchaseDetails = () => {\n    const brrrr = useRecoilValue(brrrrState);\n\n    return (\n        <div className=\"PurchaseDetails-Div\">\n            <Label className=\"PurchaseDetails-Title\">Purchase Details</Label>\n            <div className=\"PurchaseDetails-Container\">\n                <PurchasePrice/>\n                <DownPayment/>\n                {brrrr && <AfterRepairValue/>}\n                {brrrr && <LoanToValue/>}\n                <InterestRate/>\n                <MortgageYears/>\n                <MortgagePaymentsPerYear/>\n                <ClosingCosts/>\n                <Repairs/>\n            </div>\n        </div>\n    );\n};\n\nexport default PurchaseDetails;","import PropertyTax from './PropertyTax';\nexport default PropertyTax;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    propertyTaxState,\n} from '../store';\n\nimport ValueTextField from '../ValueTextField';\n\nconst PropertyTax = () => {\n    const [propertyTax, setPropertyTax] = useRecoilState(propertyTaxState);\n    return (\n        <ValueTextField\n            label=\"Property Tax\"\n            onChange={setPropertyTax}\n            defaultValue={propertyTax}\n        />\n    );\n};\n\nexport default PropertyTax;","import PropertyTaxFreq from './PropertyTaxFreq';\nexport default PropertyTaxFreq;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    Dropdown,\n} from '@fluentui/react';\n\nimport {\n    useCallback,\n} from 'react';\n\nimport {\n    propertyTaxFreqState,\n} from '../store';\n\nimport {\n    FrequencyOptions\n} from '../store';\n\nimport './style.css';\n\nconst PropertyTaxFreq = () => {\n    const [propertyTaxFreq, setPropertyTaxFreq] = useRecoilState(propertyTaxFreqState);\n    const onChangePropertyTaxFreq = useCallback((e, item) => {\n        setPropertyTaxFreq(item.text);\n    }, [setPropertyTaxFreq]);\n\n    return (\n        <div className=\"PropertyTaxFreq-Div\">\n            <Dropdown\n                label=\"Property Tax Payment Frequency\"\n                className=\"PropertyTaxFreq-Dropdown\"\n                placeholder={propertyTaxFreq}\n                options={FrequencyOptions}\n                onChange={onChangePropertyTaxFreq}\n            />\n        </div>\n    );\n};\n\nexport default PropertyTaxFreq;","import Insurance from './Insurance';\nexport default Insurance;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    insuranceState,\n} from '../store';\n\nimport ValueTextField from '../ValueTextField';\n\nconst Insurance = () => {\n    const [insurance, setInsurance] = useRecoilState(insuranceState);\n    return (\n        <ValueTextField\n            label=\"Insurance\"\n            onChange={setInsurance}\n            defaultValue={insurance}\n        />\n    );\n};\n\nexport default Insurance;","import InsuranceFreq from './InsuranceFreq';\nexport default InsuranceFreq;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    Dropdown,\n} from '@fluentui/react';\n\nimport {\n    useCallback,\n} from 'react';\n\nimport {\n    insuranceFreqState,\n} from '../store';\n\nimport {\n    FrequencyOptions\n} from '../store';\n\nimport './style.css';\n\nconst InsuranceFreq = () => {\n    const [insuranceFreq, setInsuranceFreq] = useRecoilState(insuranceFreqState);\n    const onChangeInsuranceFreq = useCallback((e, item) => {\n        setInsuranceFreq(item.text);\n    }, [setInsuranceFreq]);\n\n    return (\n        <div className=\"InsuranceFreq-Div\">\n            <Dropdown\n                label=\"Insurance Payment Frequency\"\n                className=\"InsuranceFreq-Dropdown\"\n                placeholder={insuranceFreq}\n                options={FrequencyOptions}\n                onChange={onChangeInsuranceFreq}\n            />\n        </div>\n    );\n};\n\nexport default InsuranceFreq;","import ExpenseUtilities from './ExpenseUtilities';\nexport default ExpenseUtilities;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    expenseUtilitiesState,\n} from '../store';\n\nimport ValueTextField from '../ValueTextField';\n\nconst ExpenseUtilities = () => {\n    const [expenseUtilities, setExpenseUtilities] = useRecoilState(expenseUtilitiesState);\n    return (\n        <ValueTextField\n            label=\"Monthly Utilities\"\n            onChange={setExpenseUtilities}\n            defaultValue={expenseUtilities}\n        />\n    );\n};\n\nexport default ExpenseUtilities;","import LeasingCosts from './LeasingCosts';\nexport default LeasingCosts;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    leasingCostsState,\n} from '../store';\n\nimport ValueTextField from '../ValueTextField';\n\nconst LeasingCosts = () => {\n    const [leasingCosts, setLeasingCosts] = useRecoilState(leasingCostsState);\n    return (\n        <ValueTextField\n            label=\"Leasing Costs Per Unit\"\n            onChange={setLeasingCosts}\n            defaultValue={leasingCosts}\n        />\n    );\n};\n\nexport default LeasingCosts;","import AvgOccupancy from './AvgOccupancy';\nexport default AvgOccupancy;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    avgOccupancyState,\n} from '../store';\n\nimport ValueTextField from '../ValueTextField';\n\nconst AvgOccupancy = () => {\n    const [avgOccupancy, setAvgOccupancy] = useRecoilState(avgOccupancyState);\n    return (\n        <ValueTextField\n            label=\"Avg Occupancy (Yrs)\"\n            onChange={setAvgOccupancy}\n            defaultValue={avgOccupancy}\n        />\n    );\n};\n\nexport default AvgOccupancy;","import Management from './Management';\nexport default Management;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    managementState,\n} from '../store';\n\nimport ValuePctTextField from '../ValuePctTextField';\n\nconst Management = () => {\n    const [management, setManagement] = useRecoilState(managementState);\n    return (\n        <ValuePctTextField\n            label=\"Management\"\n            onChange={setManagement}\n            defaultValue={management}\n        />\n    );\n};\n\nexport default Management;","import Maintenance from './Maintenance';\nexport default Maintenance;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    maintenanceState,\n} from '../store';\n\nimport ValuePctTextField from '../ValuePctTextField';\n\nconst Maintenance = () => {\n    const [maintenance, setMaintenance] = useRecoilState(maintenanceState);\n    return (\n        <ValuePctTextField\n            label=\"Maintenance\"\n            onChange={setMaintenance}\n            defaultValue={maintenance}\n        />\n    );\n};\n\nexport default Maintenance;","import ExpenseDetails from './ExpenseDetails';\nexport default ExpenseDetails;","import {\n    Label,\n} from '@fluentui/react';\n\nimport PropertyTax from '../PropertyTax';\nimport PropertyTaxFreq from '../PropertyTaxFreq';\nimport Insurance from '../Insurance';\nimport InsuranceFreq from '../InsuranceFreq';\nimport ExpenseUtilities from '../ExpenseUtilities';\nimport LeasingCosts from '../LeasingCosts';\nimport AvgOccupancy from '../AvgOccupancy';\nimport Management from '../Management';\nimport Maintenance from '../Maintenance';\n\nimport './style.css';\n\nconst ExpenseDetails = () => {\n    return (\n        <div className=\"ExpenseDetails-Div\">\n            <Label className=\"ExpenseDetails-Title\">Expense Details</Label>\n            <div className=\"ExpenseDetails-Container\">\n                <PropertyTax/>\n                <PropertyTaxFreq/>\n                <Insurance/>\n                <InsuranceFreq/>\n                <ExpenseUtilities/>\n                <Management/>\n                <LeasingCosts/>\n                <AvgOccupancy/>\n                <Maintenance/>\n            </div>\n        </div>\n    );\n};\n\nexport default ExpenseDetails;","import IncomePerUnit from './IncomePerUnit';\nexport default IncomePerUnit;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    incomePerUnitState,\n} from '../store';\n\nimport ValueTextField from '../ValueTextField';\n\nconst IncomePerUnit = () => {\n    const [incomePerUnit, setIncomePerUnit] = useRecoilState(incomePerUnitState);\n    return (\n        <ValueTextField\n            label=\"Monthly Rent Per Unit\"\n            onChange={setIncomePerUnit}\n            defaultValue={incomePerUnit}\n        />\n    );\n};\n\nexport default IncomePerUnit;","import VacancyRate from './VacancyRate';\nexport default VacancyRate;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    vacancyRateState,\n} from '../store';\n\nimport ValuePctTextField from '../ValuePctTextField';\n\nconst VacancyRate = () => {\n    const [vacancyRate, setVacancyRate] = useRecoilState(vacancyRateState);\n    return (\n        <ValuePctTextField\n            label=\"Vacancy\"\n            onChange={setVacancyRate}\n            defaultValue={vacancyRate}\n        />\n    );\n};\n\nexport default VacancyRate;","import IncomeDetails from './IncomeDetails';\nexport default IncomeDetails;","import {\n    Label,\n} from '@fluentui/react';\n\nimport IncomePerUnit from '../IncomePerUnit';\nimport VacancyRate from '../VacancyRate';\nimport IncomeUtilities from '../IncomeUtilities';\n\nimport './style.css';\n\nconst IncomeDetails = () => {\n    return (\n        <div className=\"IncomeDetails-Div\">\n            <Label className=\"IncomeDetails-Title\">Income Details</Label>\n            <div className=\"IncomeDetails-Container\">\n                <IncomePerUnit/>\n                <VacancyRate/>\n            </div>\n        </div>\n    );\n};\n\n//                <IncomeUtilities/>\n\nexport default IncomeDetails;","import ForecastButton from './ForecastButton';\nexport default ForecastButton;","import { forecastState } from '../store';\nimport './style.css';\n\nimport {\n    useRecoilState,\n} from 'recoil';\nimport { PrimaryButton } from '@fluentui/react';\nimport { useCallback } from 'react';\n\nconst ForecastButton = () => {\n    const [forecast, setForecast] = useRecoilState(forecastState);\n\n    const onClick = useCallback(() => {\n        document.getElementById('topFcst').scrollIntoView(); // scroll to top as workaround for plotly issue\n        setForecast(!forecast);\n    }, [forecast, setForecast]);\n\n    return (\n        <div className=\"ForecastButton-Div\">\n            <PrimaryButton\n                text=\"Show Forecast Panel\"\n                onClick={onClick}\n            />\n        </div>\n    );\n};\n\nexport default ForecastButton;","import CalculatorBreak from './CalculatorBreak';\nexport default CalculatorBreak;","import {\n    useRecoilValue,\n} from 'recoil';\n\nimport {\n    devState,\n} from '../store';\n\nimport {\n    useStatus,\n} from 'react-hook-wm';\n\nconst CalculatorBreak = () => {\n    const dev = useRecoilValue(devState);\n    const webMonetizedStatus = useStatus();\n\n    const showGoogleAds = (dev === false && webMonetizedStatus === null);\n\n    return (\n        <div>\n            {showGoogleAds &&\n            <>\n                <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\n                <ins class=\"adsbygoogle\"\n                    style={{\"display\":\"block\"}}\n                    data-ad-client=\"ca-pub-6623974426935639\"\n                    data-ad-slot=\"9607205165\"\n                    data-ad-format=\"auto\"\n                    data-full-width-responsive=\"true\">\n                </ins>\n                <script>\n                    (adsbygoogle = window.adsbygoogle || []).push({});\n                </script>\n            </>\n            }\n        </div>\n    );\n};\n\nexport default CalculatorBreak;","import {\n    Label,\n    ILabelStyles,\n    ILabelStyleProps,\n    ITextFieldProps,\n} from '@fluentui/react';\n\nimport { IconButton, IButtonStyles } from '@fluentui/react/lib/Button';\nimport { TooltipHost, ITooltipHostStyles } from '@fluentui/react/lib/Tooltip';\nimport { Callout } from '@fluentui/react/lib/Callout';\nimport { IStackTokens, Stack, IStackStyles } from '@fluentui/react/lib/Stack';\nimport { useBoolean, useId } from '@fluentui/react-hooks';\n//https://developer.microsoft.com/en-us/fluentui#/controls/web/textfield\n\nexport interface ITextFieldCustomRenderExampleState {\nisCalloutVisible: boolean;\n}\n\nconst stackTokens: IStackTokens = {\nchildrenGap: 4,\nmaxWidth: 300,\n};\n\nconst labelCalloutStackStyles: Partial<IStackStyles> = { root: { padding: 10 } };\nconst iconButtonStyles: Partial<IButtonStyles> = { root: { marginBottom: -3 }, \n                                                    button: {\n                                                    width: 12, height: 12,\n                                                    padding: 0,\n                                                    },\n                                                    icon: {\n                                                    fontSize:12,\n                                                    color:'#fffff',\n                                                    lineHeight:0,\n                                                    padding:0\n                                                    },\n                                                    tooltip: {\n                                                    marginLeft:5,\n                                                    marginRight:5\n                                                    },\n                                                    rootHovered: {\n                                                    backgroundColor: \"none\"\n                                                    }};\nconst labelStyles: Partial<ILabelStyles> = { root: { verticalAlign: \"center\" } };    \nconst calloutProps = { gapSpace: 0 };\nconst hostStyles: Partial<ITooltipHostStyles> = { root: { display: 'inline-block' } };                                  \nconst iconProps = { iconName: 'Info' };\n    \nconst CustomResultLabel = (props: ITextFieldProps): JSX.Element => {\n    const [isCalloutVisible, { toggle: toggleIsCalloutVisible }] = useBoolean(false);\n    const descriptionId: string = useId('description');\n    const iconButtonId: string = useId('iconButton');\n\n    return (\n        <>\n        <Stack horizontal horizontalAlign=\"right\" verticalAlign=\"bottom\" tokens={stackTokens}>\n        <TooltipHost\n            calloutProps={calloutProps}\n            styles={hostStyles}>\n            {(typeof props.description == 'string') && <div className=\"IconDiv\"><IconButton\n                id={iconButtonId}\n                iconProps={iconProps}\n                title=\"Calculation description\"\n                ariaLabel=\"Calculation description\"\n                onClick={toggleIsCalloutVisible}\n                styles={iconButtonStyles}\n            /></div>}\n            </TooltipHost>\n            <Label\n            styles={labelStyles}>\n            \n            {props.label}\n            </Label>\n        </Stack>\n        {isCalloutVisible && (\n            <Callout\n            target={'#' + iconButtonId}\n            setInitialFocus\n            onDismiss={toggleIsCalloutVisible}\n            ariaDescribedBy={descriptionId}\n            role=\"alertdialog\"\n            >\n            <Stack tokens={stackTokens} horizontalAlign=\"end\" styles={labelCalloutStackStyles}>\n                <span id={descriptionId}>{props.description}</span>\n            </Stack>\n            </Callout>\n        )}\n        </>\n    );\n};\n\nexport default CustomResultLabel;","import CustomResultLabel from './CustomResultLabel';\nexport default CustomResultLabel;","import {\n    useRecoilValue,\n} from 'recoil';\n\nimport {\n    TextField,\n} from '@fluentui/react';\n\nimport { useId } from '@fluentui/react-hooks';\n\nimport CustomResultLabel from '../CustomResultLabel';\nimport './style.css';\n\nconst getDepthClassName = depth => {\n    switch (depth) {\n        case 1: {\n            return \"ResultLabelDiv1\";\n        }\n        case 2: {\n            return \"ResultLabelDiv2\";\n        }\n        case 3: {\n            return \"ResultLabelDiv3\";\n        }\n        default: {\n            return \"ResultLabelDiv\";\n        }\n    }\n};\n  \n\nconst ResultTextField = props => {\n    const {\n        valueKey,\n        label,\n        title,\n        depth,\n        description,\n        ...restProps\n    } = props;\n\n    const labelId: string = useId('label');\n\n    return (\n        <div className=\"ResultDiv\">\n            <div className={getDepthClassName(depth)}>\n                <CustomResultLabel title={title} id={labelId} label={label} description={description}/>\n            </div>\n            <div className=\"ResultTextFieldDiv\">\n                <TextField\n                    inputClassName=\"ResultTextField\"\n                    value={useRecoilValue(valueKey)}\n                    {...restProps}\n                    readOnly\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default ResultTextField;","import ResultTextField from './ResultTextField';\nexport default ResultTextField;","import {\n    useCallback,\n    useState,\n} from \"react\";\n\nimport {\n    Label,\n} from \"@fluentui/react\";\nimport { mergeStyles } from 'office-ui-fabric-react/lib/Styling';\n\nimport ThemedIcon from '../ThemedIcon';\n\nimport './style.css';\n\nconst iconClass = mergeStyles({\n    fontSize: 20,\n    height: 20,\n    width: 20,\n    cursor: \"pointer\",\n    transform: \"rotate(90deg)\",\n    padding: 10,\n});\n\nconst iconClassFlip = mergeStyles({\n    fontSize: 20,\n    height: 20,\n    width: 20,\n    cursor: \"pointer\",\n    padding: 10,\n    transform: \"rotate(270deg)\",\n});\n\nconst CollapsibleDiv = props => {\n    const {\n        title,\n        children,\n        defaultOpen,\n    } = props;\n\n    const [open, setOpen] = useState(defaultOpen);\n\n    const onClickHeader = useCallback(() => {\n        setOpen(!open);\n    }, [open, setOpen]);\n\n    return (\n        <div\n            className=\"CollapsibleDiv\"\n        >\n            <div\n                className=\"CollapsibleDiv-HeaderDiv\"\n                onClick={onClickHeader}\n            >\n                <ThemedIcon\n                    iconName=\"SkypeCircleArrow\"\n                    className={open ? iconClass : iconClassFlip}\n                    onClick={onClickHeader}\n                />\n                <Label className=\"CollapsibleDiv-HeaderTitle\">{title}</Label>\n            </div>\n            <div style={{display: (open ? \"block\" : \"none\"), paddingLeft: 20}}>\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default CollapsibleDiv;","import CollapsibleDiv from './CollapsibleDiv';\nexport default CollapsibleDiv;","import CalculatorOutput from './CalculatorOutput';\nexport default CalculatorOutput;","import {\n    useRecoilValue,\n} from 'recoil';\n\nimport {\n    downPaymentCost,\n    capitalRequired,\n    amountFinanced,\n    closingCost,\n    propTaxPerYear,\n    insurancePerYear,\n    grossRentalIncomePerMonth,\n    vacancyPerMonth,\n    netRentalIncomePerMonth,\n    propertyManagementPerMonth,\n    maintenancePerMonth,\n    expensesPerMonth,\n    expenseIncomeRatioPerMonth,\n    propTaxPerMonth,\n    insurancePerMonth,\n    netOperatingIncomePerMonth,\n    mortgagePaymentPerMonth,\n    cashFlowPerMonth,\n    cashFlowPerMonthPerInvestor,\n    netOperatingIncomePerYear,\n    mortgagePaymentPerYear,\n    cashFlowPerYear,\n    cashFlowPerYearPerInvestor,\n    debtCoverageRatio,\n    cashFlowPerUnitPerMonth,\n    totalInvestment,\n    totalInvestmentPerInvestor,\n    cashOnCash,\n    capRate,\n    grossMonthlyRentPriceRatio,\n    cashOutRefinance,\n    numInvestorsState,\n    brrrrState,\n} from '../store';\n\nimport ResultTextField from '../ResultTextField';\nimport CollapsibleDiv from '../CollapsibleDiv';\n\nimport './style.css';\n\nconst CalculatorOutput = () => {\n    const multipleInvestors = (useRecoilValue(numInvestorsState) > parseInt(1));\n    const brrrr = useRecoilValue(brrrrState);\n\n    return (\n        <div className=\"CalculatorOutput-Div\">\n            <CollapsibleDiv\n                title=\"Overall Breakdown\"\n                defaultOpen={true}\n            >\n                <ResultTextField\n                    label=\"Down Payment Required\"\n                    valueKey={downPaymentCost}\n                    depth={1}\n                    description={\"Down payment percentage times purchase price\"}\n                />\n                <ResultTextField\n                    label=\"Total Initial Capital Required\"\n                    valueKey={capitalRequired}\n                    depth={1}\n                    description={\"Sum of down payment and repairs\"}\n                />\n                <ResultTextField\n                    label=\"Amount Financed\"\n                    valueKey={amountFinanced}\n                    depth={1}\n                    description={\"Purchase price minus down payment\"}\n                />\n                <ResultTextField\n                    label=\"Closing Costs\"\n                    valueKey={closingCost}\n                    depth={1}\n                    description={\"Closing cost percentage times amount financed\"}\n                />\n                {brrrr &&\n                <ResultTextField\n                    label=\"Cash Out Refinance\"\n                    valueKey={cashOutRefinance}\n                    depth={1}\n                    description={\"ARV times LTV minus amount financed\"}\n                />    \n                }            \n                <ResultTextField\n                    label=\"Total Investment\"\n                    valueKey={totalInvestment}\n                    depth={1}\n                    description={\"Sum of capital required and closing costs\"}\n                />\n                {multipleInvestors &&\n                <ResultTextField\n                    label=\"Total Investment Per Investor\"\n                    valueKey={totalInvestmentPerInvestor}\n                    depth={1}\n                    description={\"Total investment divided by the number of investors\"}\n                />\n                }\n                <ResultTextField\n                    label=\"Cash on Cash\"\n                    valueKey={cashOnCash}\n                    suffix=\"%\"\n                    depth={1}\n                    description={\"Cash flow per year divided by total investment\"}\n                />\n                <ResultTextField\n                    label=\"Cap Rate\"\n                    valueKey={capRate}\n                    suffix=\"%\"\n                    depth={1}\n                    description={\"Net operating income per year divided by the sum of purchase price, repairs, and closing costs\"}\n                />\n            </CollapsibleDiv>\n            <CollapsibleDiv\n                title=\"Monthly Breakdown\"\n                defaultOpen={true}\n            >\n                <CollapsibleDiv\n                    title=\"Expenses\"\n                    defaultOpen={true}\n                >\n                    <ResultTextField\n                        label=\"Mortgage Payment\"\n                        valueKey={mortgagePaymentPerMonth}\n                        depth={2}\n                    />\n                    <ResultTextField\n                        label=\"Vacancy\"\n                        valueKey={vacancyPerMonth}\n                        depth={2}\n                        description={\"Rent times vacancy rate\"}\n                    />\n                    <ResultTextField\n                        label=\"Property Management\"\n                        valueKey={propertyManagementPerMonth}\n                        depth={2}\n                        description={\"Rent times management percent plus leasing costs times the number of units divided by the product of average occupancy and 12 months\"}\n                    />\n                    <ResultTextField\n                        label=\"Property Tax\"\n                        valueKey={propTaxPerMonth}\n                        depth={2}\n                    />\n                    <ResultTextField\n                        label=\"Insurance\"\n                        valueKey={insurancePerMonth}\n                        depth={2}\n                    />\n                    <ResultTextField\n                        label=\"Maintenance\"\n                        valueKey={maintenancePerMonth}\n                        depth={2}\n                    />\n                    <ResultTextField\n                        label=\"Total Expenses\"\n                        title=\"Excludes Mortgage Payment and Vacancy\"\n                        valueKey={expensesPerMonth}\n                        depth={2}\n                        description={\"Sum of property tax, insurance, maintenance, management, and utilities\"}\n                    />\n                    <ResultTextField\n                        label=\"Expense : Income\"\n                        valueKey={expenseIncomeRatioPerMonth}\n                        suffix=\"%\"\n                        depth={2}\n                    />\n                </CollapsibleDiv>\n                <CollapsibleDiv\n                    title=\"Income\"\n                    defaultOpen={true}\n                >\n                    <ResultTextField\n                        label=\"Gross Rental Income Per Month\"\n                        valueKey={grossRentalIncomePerMonth}\n                        depth={2}\n                    />\n                    <ResultTextField\n                        label=\"Net Rental Income Per Month\"\n                        valueKey={netRentalIncomePerMonth}\n                        depth={2}\n                        description={\"Gross income minus vacancy\"}\n                    />\n                    <ResultTextField\n                        label=\"Net Operating Income Per Month\"\n                        valueKey={netOperatingIncomePerMonth}\n                        depth={2}\n                        description={\"Net income minus expenses (excluding mortgage)\"}\n                    />\n                    <ResultTextField\n                        label=\"Cash Flow Per Month\"\n                        valueKey={cashFlowPerMonth}\n                        depth={2}\n                        description={\"Net operating income minus mortgage\"}\n                    />\n                    {multipleInvestors &&\n                    <ResultTextField\n                        label=\"Cash Flow Per Month Per Investor\"\n                        valueKey={cashFlowPerMonthPerInvestor}\n                        depth={2}\n                    />\n                    }\n                    <ResultTextField\n                        label=\"Cash Flow Per Unit Per Month\"\n                        valueKey={cashFlowPerUnitPerMonth}\n                        depth={2}\n                    />\n                    <ResultTextField\n                        label=\"Gross Monthly Rent:Price\"\n                        valueKey={grossMonthlyRentPriceRatio}\n                        suffix=\"%\"\n                        depth={2}\n                    />\n                </CollapsibleDiv>\n            </CollapsibleDiv>\n            <CollapsibleDiv\n                    title=\"Yearly Breakdown\"\n                    defaultOpen={true}\n            >\n                <CollapsibleDiv\n                    title=\"Expenses\"\n                    defaultOpen={true}\n                >\n                    <ResultTextField\n                        label=\"Mortgage Payment Per Year\"\n                        valueKey={mortgagePaymentPerYear}\n                        depth={2}\n                    />\n                    <ResultTextField\n                        label=\"Property Tax Per Year\"\n                        valueKey={propTaxPerYear}\n                        depth={2}\n                    />\n                    <ResultTextField\n                        label=\"Insurance Per Year\"\n                        valueKey={insurancePerYear}\n                        depth={2}\n                    />\n                </CollapsibleDiv>\n                <CollapsibleDiv\n                    title=\"Income\"\n                    defaultOpen={true}\n                >\n                    <ResultTextField\n                        label=\"Net Operating Income Per Year\"\n                        valueKey={netOperatingIncomePerYear}\n                        depth={2}\n                    />\n                    <ResultTextField\n                        label=\"Cash Flow Per Year\"\n                        valueKey={cashFlowPerYear}\n                        depth={2}\n                    />\n                    {multipleInvestors &&\n                    <ResultTextField\n                        label=\"Cash Flow Per Year Per Investor\"\n                        valueKey={cashFlowPerYearPerInvestor}\n                        depth={2}\n                    />\n                    }\n                    <ResultTextField\n                        label=\"Debt Coverage Ratio\"\n                        valueKey={debtCoverageRatio}\n                        suffix=\"%\"\n                        depth={2}\n                    />\n                </CollapsibleDiv>\n            </CollapsibleDiv>\n        </div>\n    );\n};\n\nexport default CalculatorOutput;","import BasicTabPanel from './BasicTabPanel';\nexport default BasicTabPanel;","import PurchaseDetails from '../PurchaseDetails';\nimport ExpenseDetails from '../ExpenseDetails';\nimport IncomeDetails from '../IncomeDetails';\nimport ForecastButton from '../ForecastButton';\nimport CalculatorBreak from '../CalculatorBreak';\nimport CalculatorOutput from '../CalculatorOutput';\n\nimport './style.css';\n\nconst BasicTabPanel = () => {\n    return (\n        <div className=\"BasicTabPanel-Div\">\n            <PurchaseDetails/>\n            <ExpenseDetails/>\n            <IncomeDetails/>\n            <ForecastButton/>\n            <CalculatorBreak/>\n            <CalculatorOutput/>\n        </div>\n    );\n};\nexport default BasicTabPanel;","import {\n    useCallback,\n    useEffect,\n    useState,\n} from 'react';\n\nimport {\n    TextField,\n} from '@fluentui/react';\n\nimport './style.css';\n\nconst defaultValidate = (s) => {\n    if (parseFloat(s) < 0) return \"0\";\n    return s;\n};\n\nconst ValueStrTextField = props => {\n    const {\n        defaultValue,\n        onChange,\n        validate = defaultValidate,\n        ...restProps\n    } = props;\n\n    const [val, setVal] = useState(defaultValue);\n    useEffect(() => {\n        setVal(defaultValue);\n    }, [defaultValue, setVal])\n    const onChangeCallback = useCallback((e, txt) => {\n        const newVal = validate(txt);\n        setVal(newVal);\n        onChange(newVal);\n    }, [setVal, onChange, validate]);\n\n    const onFocus = useCallback(e => {\n        e.target.select();\n    }, []);\n\n    return (\n        <TextField\n            inputClassName=\"ValueStrTextField\"\n            type=\"string\"\n            value={val}\n            onChange={onChangeCallback}\n            onFocus={onFocus}\n            {...restProps}\n        />\n    );\n};\n\nexport default ValueStrTextField;","import ValueStrTextField from './ValueStrTextField';\nexport default ValueStrTextField;","import PurchasePriceSim from './PurchasePriceSim';\nexport default PurchasePriceSim;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    Dropdown,\n} from '@fluentui/react';\n\nimport {\n    useCallback,\n} from 'react';\n\nimport {\n    purchasePriceState,\n    purchasePriceDistState,\n    purchasePriceMinState,\n    purchasePriceMaxState,\n    purchasePriceChoiceState,\n    DistributionOptions,\n} from '../store';\n\nimport './style.css';\n\nimport ValueTextField from '../ValueTextField';\nimport ValueStrTextField from '../ValueStrTextField';\n\nconst PurchasePriceSim = () => {\n    const [purchasePrice, setPurchasePrice] = useRecoilState(purchasePriceState);\n    const [purchasePriceDist, setPurchasePriceDist] = useRecoilState(purchasePriceDistState);\n    const [purchasePriceMin, setPurchasePriceMin] = useRecoilState(purchasePriceMinState);\n    const [purchasePriceMax, setPurchasePriceMax] = useRecoilState(purchasePriceMaxState);\n    const [purchasePriceChoice, setPurchasePriceChoice] = useRecoilState(purchasePriceChoiceState);\n\n    const onChangePurchasePriceDist = useCallback((e, item) => {\n        setPurchasePriceDist(item.text);\n    }, [setPurchasePriceDist]);\n\n    return (\n        <div className=\"PurchasePriceSim-Div\">\n            <Dropdown\n                label=\"Distribution\"\n                className=\"PurchasePriceSim-Dropdown\"\n                placeholder={purchasePriceDist}\n                options={DistributionOptions}\n                onChange={onChangePurchasePriceDist}\n            />\n            {((purchasePriceDist === 'None')) &&\n                <ValueTextField\n                label=\"Point Estimate\"\n                onChange={setPurchasePrice}\n                defaultValue={purchasePrice}\n                />}\n            {((purchasePriceDist === 'Normal')) &&\n                <ValueTextField\n                label=\"Low\"\n                onChange={setPurchasePriceMin}\n                defaultValue={purchasePriceMin}\n                />}\n            {((purchasePriceDist === 'Normal')) &&\n                <ValueTextField\n                label=\"High\"\n                onChange={setPurchasePriceMax}\n                defaultValue={purchasePriceMax}\n                />}\n            {((purchasePriceDist === 'Uniform')) &&\n                <ValueTextField\n                label=\"Min\"\n                onChange={setPurchasePriceMin}\n                defaultValue={purchasePriceMin}\n                />}\n            {((purchasePriceDist === 'Uniform')) &&\n                <ValueTextField\n                label=\"Max\"\n                onChange={setPurchasePriceMax}\n                defaultValue={purchasePriceMax}\n                />}\n            {((purchasePriceDist === 'Choice')) &&         \n                <ValueStrTextField\n                label=\"List\"\n                onChange={setPurchasePriceChoice}\n                defaultValue={purchasePriceChoice}\n        />}\n        </div>\n    );\n};\n\nexport default PurchasePriceSim;","import InterestRateSim from './InterestRateSim';\nexport default InterestRateSim;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    Dropdown,\n} from '@fluentui/react';\n\nimport {\n    useCallback,\n} from 'react';\n\nimport {\n    interestRateState,\n    interestRateDistState,\n    interestRateMinState,\n    interestRateMaxState,\n    interestRateChoiceState,\n    DistributionOptions,\n} from '../store';\n\nimport './style.css';\n\nimport ValuePctTextField from '../ValuePctTextField';\nimport ValueStrTextField from '../ValueStrTextField';\n\nconst InterestRateSim = () => {\n    const [interestRate, setInterestRate] = useRecoilState(interestRateState);\n    const [interestRateDist, setInterestRateDist] = useRecoilState(interestRateDistState);\n    const [interestRateMin, setInterestRateMin] = useRecoilState(interestRateMinState);\n    const [interestRateMax, setInterestRateMax] = useRecoilState(interestRateMaxState);\n    const [interestRateChoice, setInterestRateChoice] = useRecoilState(interestRateChoiceState);\n\n    const onChangeInterestRateDist = useCallback((e, item) => {\n        setInterestRateDist(item.text);\n    }, [setInterestRateDist]);\n\n    return (\n        <div className=\"InterestRateSim-Div\">\n            <Dropdown\n                label=\"Distribution\"\n                className=\"InterestRateSim-Dropdown\"\n                placeholder={interestRateDist}\n                options={DistributionOptions}\n                onChange={onChangeInterestRateDist}\n            />\n            {((interestRateDist === 'None')) &&         \n                <ValuePctTextField\n                label=\"Point Estimate\"\n                onChange={setInterestRate}\n                defaultValue={interestRate}\n                />}\n            {((interestRateDist === 'Normal')) &&         \n                <ValuePctTextField\n                label=\"Low\"\n                onChange={setInterestRateMin}\n                defaultValue={interestRateMin}\n                />}\n            {((interestRateDist === 'Normal')) &&         \n                <ValuePctTextField\n                label=\"High\"\n                onChange={setInterestRateMax}\n                defaultValue={interestRateMax}\n                />}\n            {((interestRateDist === 'Uniform')) &&         \n                <ValuePctTextField\n                label=\"Min\"\n                onChange={setInterestRateMin}\n                defaultValue={interestRateMin}\n                />}\n            {((interestRateDist === 'Uniform')) &&         \n                <ValuePctTextField\n                label=\"Max\"\n                onChange={setInterestRateMax}\n                defaultValue={interestRateMax}\n                />}\n            {((interestRateDist === 'Choice')) &&         \n                <ValueStrTextField\n                label=\"List\"\n                onChange={setInterestRateChoice}\n                defaultValue={interestRateChoice}\n        />}\n        </div>\n    );\n};\n\nexport default InterestRateSim;","import ClosingCostsSim from './ClosingCostsSim';\nexport default ClosingCostsSim;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    Dropdown,\n    Label,\n} from '@fluentui/react';\n\nimport {\n    useCallback,\n} from 'react';\n\nimport {\n    closingCostsState,\n    closingCostsDistState,\n    closingCostsMinState,\n    closingCostsMaxState,\n    closingCostsChoiceState,\n    DistributionOptions,\n} from '../store';\n\nimport './style.css';\n\nimport ValueTextField from '../ValueTextField';\nimport ValuePctTextField from '../ValuePctTextField';\nimport ValueStrTextField from '../ValueStrTextField';\n\nconst ClosingCostsSim = () => {\n    const [closingCosts, setClosingCosts] = useRecoilState(closingCostsState);\n    const [closingCostsDist, setClosingCostsDist] = useRecoilState(closingCostsDistState);\n    const [closingCostsMin, setClosingCostsMin] = useRecoilState(closingCostsMinState);\n    const [closingCostsMax, setClosingCostsMax] = useRecoilState(closingCostsMaxState);\n    const [closingCostsChoice, setClosingCostsChoice] = useRecoilState(closingCostsChoiceState);\n\n    const onChangeClosingCostsDist = useCallback((e, item) => {\n        setClosingCostsDist(item.text);\n    }, [setClosingCostsDist]);\n\n    return (\n        <div className=\"ClosingCostsSim-Div\">\n            <Dropdown\n                label=\"Distribution\"\n                className=\"ClosingCostsSim-Dropdown\"\n                placeholder={closingCostsDist}\n                options={DistributionOptions}\n                onChange={onChangeClosingCostsDist}\n            />\n            {((closingCostsDist === 'None')) &&         \n                <ValuePctTextField\n                label=\"Point Estimate\"\n                onChange={setClosingCosts}\n                defaultValue={closingCosts}\n                />}\n            {((closingCostsDist === 'Normal')) &&         \n                <ValuePctTextField\n                label=\"Low\"\n                onChange={setClosingCostsMin}\n                defaultValue={closingCostsMin}\n                />}\n            {((closingCostsDist === 'Normal')) &&         \n                <ValuePctTextField\n                label=\"High\"\n                onChange={setClosingCostsMax}\n                defaultValue={closingCostsMax}\n                />}\n            {((closingCostsDist === 'Uniform')) &&         \n                <ValuePctTextField\n                label=\"Min\"\n                onChange={setClosingCostsMin}\n                defaultValue={closingCostsMin}\n                />}\n            {((closingCostsDist === 'Uniform')) &&         \n                <ValuePctTextField\n                label=\"Max\"\n                onChange={setClosingCostsMax}\n                defaultValue={closingCostsMax}\n                />}\n            {((closingCostsDist === 'Choice')) &&         \n                <ValueStrTextField\n                label=\"List\"\n                onChange={setClosingCostsChoice}\n                defaultValue={closingCostsChoice}\n        />}\n        </div>\n    );\n};\n\nexport default ClosingCostsSim;","import RepairsSim from './RepairsSim';\nexport default RepairsSim;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    Dropdown,\n} from '@fluentui/react';\n\nimport {\n    useCallback,\n} from 'react';\n\nimport {\n    repairsState,\n    repairsDistState,\n    repairsMinState,\n    repairsMaxState,\n    repairsChoiceState,\n    DistributionOptions,\n} from '../store';\n\nimport './style.css';\n\nimport ValueTextField from '../ValueTextField';\nimport ValueStrTextField from '../ValueStrTextField';\n\nconst RepairsSim = () => {\n    const [repairs, setRepairs] = useRecoilState(repairsState);\n    const [repairsDist, setRepairsDist] = useRecoilState(repairsDistState);\n    const [repairsMin, setRepairsMin] = useRecoilState(repairsMinState);\n    const [repairsMax, setRepairsMax] = useRecoilState(repairsMaxState);\n    const [repairsChoice, setRepairsChoice] = useRecoilState(repairsChoiceState);\n\n    const onChangeRepairsDist = useCallback((e, item) => {\n        setRepairsDist(item.text);\n    }, [setRepairsDist]);\n\n    return (\n        <div className=\"RepairsSim-Div\">\n            <Dropdown\n                label=\"Distribution\"\n                className=\"RepairsSim-Dropdown\"\n                placeholder={repairsDist}\n                options={DistributionOptions}\n                onChange={onChangeRepairsDist}\n            />\n            {((repairsDist === 'None')) &&         \n                <ValueTextField\n                label=\"Point Estimate\"\n                onChange={setRepairs}\n                defaultValue={repairs}\n                />}\n            {((repairsDist === 'Normal')) &&         \n                <ValueTextField\n                label=\"Low\"\n                onChange={setRepairsMin}\n                defaultValue={repairsMin}\n                />}\n            {((repairsDist === 'Normal')) &&         \n                <ValueTextField\n                label=\"High\"\n                onChange={setRepairsMax}\n                defaultValue={repairsMax}\n                />}\n            {((repairsDist === 'Uniform')) &&         \n                <ValueTextField\n                label=\"Min\"\n                onChange={setRepairsMin}\n                defaultValue={repairsMin}\n                />}\n            {((repairsDist === 'Uniform')) &&         \n                <ValueTextField\n                label=\"Max\"\n                onChange={setRepairsMax}\n                defaultValue={repairsMax}\n                />}\n            {((repairsDist === 'Choice')) &&         \n                <ValueStrTextField\n                label=\"List\"\n                onChange={setRepairsChoice}\n                defaultValue={repairsChoice}\n        />}\n        </div>\n    );\n};\n\nexport default RepairsSim;","import AfterRepairValueSim from './AfterRepairValueSim';\nexport default AfterRepairValueSim;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    Dropdown,\n} from '@fluentui/react';\n\nimport {\n    useCallback,\n} from 'react';\n\nimport {\n    afterRepairValueState,\n    afterRepairValueDistState,\n    afterRepairValueMinState,\n    afterRepairValueMaxState,\n    afterRepairValueChoiceState,\n    DistributionOptions,\n} from '../store';\n\nimport './style.css';\n\nimport ValueTextField from '../ValueTextField';\nimport ValueStrTextField from '../ValueStrTextField';\n\nconst AfterRepairValueSim = () => {\n    const [afterRepairValue, setAfterRepairValue] = useRecoilState(afterRepairValueState);\n    const [afterRepairValueDist, setAfterRepairValueDist] = useRecoilState(afterRepairValueDistState);\n    const [afterRepairValueMin, setAfterRepairValueMin] = useRecoilState(afterRepairValueMinState);\n    const [afterRepairValueMax, setAfterRepairValueMax] = useRecoilState(afterRepairValueMaxState);\n    const [afterRepairValueChoice, setAfterRepairValueChoice] = useRecoilState(afterRepairValueChoiceState);\n\n    const onChangeAfterRepairValueDist = useCallback((e, item) => {\n        setAfterRepairValueDist(item.text);\n    }, [setAfterRepairValueDist]);\n\n    return (\n        <div className=\"AfterRepairValueSim-Div\">\n            <Dropdown\n                label=\"Distribution\"\n                className=\"AfterRepairValueSim-Dropdown\"\n                placeholder={afterRepairValueDist}\n                options={DistributionOptions}\n                onChange={onChangeAfterRepairValueDist}\n            />\n            {((afterRepairValueDist === 'None')) &&         \n                <ValueTextField\n                label=\"Point Estimate\"\n                onChange={setAfterRepairValue}\n                defaultValue={afterRepairValue}\n                />}\n            {((afterRepairValueDist === 'Normal')) &&         \n                <ValueTextField\n                label=\"Low\"\n                onChange={setAfterRepairValueMin}\n                defaultValue={afterRepairValueMin}\n                />}\n            {((afterRepairValueDist === 'Normal')) &&         \n                <ValueTextField\n                label=\"High\"\n                onChange={setAfterRepairValueMax}\n                defaultValue={afterRepairValueMax}\n                />}\n            {((afterRepairValueDist === 'Uniform')) &&         \n                <ValueTextField\n                label=\"Min\"\n                onChange={setAfterRepairValueMin}\n                defaultValue={afterRepairValueMin}\n                />}\n            {((afterRepairValueDist === 'Uniform')) &&         \n                <ValueTextField\n                label=\"Max\"\n                onChange={setAfterRepairValueMax}\n                defaultValue={afterRepairValueMax}\n                />}\n            {((afterRepairValueDist === 'Choice')) &&         \n                <ValueStrTextField\n                label=\"List\"\n                onChange={setAfterRepairValueChoice}\n                defaultValue={afterRepairValueChoice}\n        />}\n        </div>\n    );\n};\n\nexport default AfterRepairValueSim;","import PurchaseDetailsSim from './PurchaseDetailsSim';\nexport default PurchaseDetailsSim;","import {\n    Label,\n} from '@fluentui/react';\n\nimport {\n    useRecoilValue,\n} from 'recoil';\n\nimport PurchasePriceSim from '../PurchasePriceSim';\nimport DownPayment from '../DownPayment';\nimport InterestRateSim from '../InterestRateSim';\nimport MortgageYears from '../MortgageYears';\nimport MortgagePaymentsPerYear from '../MortgagePaymentsPerYear';\nimport ClosingCostsSim from '../ClosingCostsSim';\nimport RepairsSim from '../RepairsSim';\nimport NumInvestors from '../NumInvestors';\nimport AfterRepairValueSim from '../AfterRepairValueSim';\nimport LoanToValue from '../LoanToValue';\n\nimport {\n    brrrrState,\n} from '../store';\n\nimport './style.css';\n\nconst PurchaseDetailsSim = () => {\n    const brrrr = useRecoilValue(brrrrState);\n\n    return (\n        <div className=\"PurchaseDetailsSim-Div\">\n            <Label className=\"PurchaseDetailsSim-Title\">Purchase Details</Label>\n                <div className=\"PurchaseDetailsSim-Parent\">\n                    <div className=\"PurchaseDetailsSim-Container\">\n                        <fieldset>\n                            <legend>\n                                <Label className=\"PurchaseDetailsSim-Subtitle\">Purchase Price</Label>\n                            </legend>\n                                <PurchasePriceSim/>\n                        </fieldset>\n                    </div>\n                    <div className=\"PurchaseDetailsSim-Secondary\"><DownPayment/></div>\n                </div>\n                {brrrr && \n                    <div className=\"PurchaseDetailsSim-Parent\">\n                        <div className=\"PurchaseDetailsSim-Container\">\n                        <fieldset>\n                            <legend>\n                                <Label className=\"PurchaseDetailsSim-Subtitle\">After Repair Value</Label>\n                            </legend>\n                                <AfterRepairValueSim/>\n                        </fieldset>\n                        </div>\n                        <div className=\"PurchaseDetailsSim-Secondary\"><LoanToValue/></div>\n                    </div>\n                }\n                <div className=\"PurchaseDetailsSim-Parent\">\n                    <div className=\"PurchaseDetailsSim-Container\">\n                        <fieldset>\n                            <legend>\n                                <Label className=\"PurchaseDetailsSim-Subtitle\">Interest Rate</Label>\n                            </legend>\n                                <InterestRateSim/>\n                        </fieldset>\n                    </div>\n                    <div className=\"PurchaseDetailsSim-Secondary\">\n                        <MortgageYears/>\n                        <MortgagePaymentsPerYear/>\n                    </div>\n                </div>\n                <div className=\"PurchaseDetailsSim-Container\">\n                    <fieldset>\n                        <legend>\n                            <Label className=\"PurchaseDetailsSim-Subtitle\">Closing Costs</Label>\n                        </legend>\n                            <ClosingCostsSim/>\n                    </fieldset>\n                </div>\n                <div className=\"PurchaseDetailsSim-Container\">\n                    <fieldset>\n                        <legend>\n                            <Label className=\"PurchaseDetailsSim-Subtitle\">Repairs</Label>\n                        </legend>\n                            <RepairsSim/>\n                    </fieldset>\n                </div>\n            </div>\n    );\n};\n\nexport default PurchaseDetailsSim;","import PropertyTaxSim from './PropertyTaxSim';\nexport default PropertyTaxSim;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    Dropdown,\n} from '@fluentui/react';\n\nimport {\n    useCallback,\n} from 'react';\n\nimport {\n    propertyTaxState,\n    propertyTaxDistState,\n    propertyTaxMinState,\n    propertyTaxMaxState,\n    propertyTaxChoiceState,\n    DistributionOptions,\n} from '../store';\n\nimport './style.css';\n\nimport ValueTextField from '../ValueTextField';\nimport ValueStrTextField from '../ValueStrTextField';\n\nconst PropertyTaxSim = () => {\n    const [propertyTax, setPropertyTax] = useRecoilState(propertyTaxState);\n    const [propertyTaxDist, setPropertyTaxDist] = useRecoilState(propertyTaxDistState);\n    const [propertyTaxMin, setPropertyTaxMin] = useRecoilState(propertyTaxMinState);\n    const [propertyTaxMax, setPropertyTaxMax] = useRecoilState(propertyTaxMaxState);\n    const [propertyTaxChoice, setPropertyTaxChoice] = useRecoilState(propertyTaxChoiceState);\n\n    const onChangePropertyTaxDist = useCallback((e, item) => {\n        setPropertyTaxDist(item.text);\n    }, [setPropertyTaxDist]);\n\n    return (\n        <div className=\"PropertyTaxSim-Div\">\n            <Dropdown\n                label=\"Distribution\"\n                className=\"PropertyTaxSim-Dropdown\"\n                placeholder={propertyTaxDist}\n                options={DistributionOptions}\n                onChange={onChangePropertyTaxDist}\n            />\n            {((propertyTaxDist === 'None')) &&         \n                <ValueTextField\n                label=\"Point Estimate\"\n                onChange={setPropertyTax}\n                defaultValue={propertyTax}\n                />}\n            {((propertyTaxDist === 'Normal')) &&         \n                <ValueTextField\n                label=\"Low\"\n                onChange={setPropertyTaxMin}\n                defaultValue={propertyTaxMin}\n                />}\n            {((propertyTaxDist === 'Normal')) &&         \n                <ValueTextField\n                label=\"High\"\n                onChange={setPropertyTaxMax}\n                defaultValue={propertyTaxMax}\n                />}\n             {((propertyTaxDist === 'Uniform')) &&         \n                <ValueTextField\n                label=\"Min\"\n                onChange={setPropertyTaxMin}\n                defaultValue={propertyTaxMin}\n                />}\n            {((propertyTaxDist === 'Uniform')) &&         \n                <ValueTextField\n                label=\"Max\"\n                onChange={setPropertyTaxMax}\n                defaultValue={propertyTaxMax}\n                />}\n            {((propertyTaxDist === 'Choice')) &&         \n                <ValueStrTextField\n                label=\"List\"\n                onChange={setPropertyTaxChoice}\n                defaultValue={propertyTaxChoice}\n        />}\n        </div>\n    );\n};\n\nexport default PropertyTaxSim;","import InsuranceSim from './InsuranceSim';\nexport default InsuranceSim;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    Dropdown,\n} from '@fluentui/react';\n\nimport {\n    useCallback,\n} from 'react';\n\nimport {\n    insuranceState,\n    insuranceDistState,\n    insuranceMinState,\n    insuranceMaxState,\n    insuranceChoiceState,\n    DistributionOptions,\n} from '../store';\n\nimport './style.css';\n\nimport ValueTextField from '../ValueTextField';\nimport ValueStrTextField from '../ValueStrTextField';\n\nconst InsuranceSim = () => {\n    const [insurance, setInsurance] = useRecoilState(insuranceState);\n    const [insuranceDist, setInsuranceDist] = useRecoilState(insuranceDistState);\n    const [insuranceMin, setInsuranceMin] = useRecoilState(insuranceMinState);\n    const [insuranceMax, setInsuranceMax] = useRecoilState(insuranceMaxState);\n    const [insuranceChoice, setInsuranceChoice] = useRecoilState(insuranceChoiceState);\n\n    const onChangeInsuranceDist = useCallback((e, item) => {\n        setInsuranceDist(item.text);\n    }, [setInsuranceDist]);\n\n    return (\n        <div className=\"InsuranceSim-Div\">\n            <Dropdown\n                label=\"Distribution\"\n                className=\"InsuranceSim-Dropdown\"\n                placeholder={insuranceDist}\n                options={DistributionOptions}\n                onChange={onChangeInsuranceDist}\n            />\n            {((insuranceDist === 'None')) &&         \n                <ValueTextField\n                label=\"Point Estimate\"\n                onChange={setInsurance}\n                defaultValue={insurance}\n                />}\n            {((insuranceDist === 'Normal')) &&         \n                <ValueTextField\n                label=\"Low\"\n                onChange={setInsuranceMin}\n                defaultValue={insuranceMin}\n                />}\n            {((insuranceDist === 'Normal')) &&         \n                <ValueTextField\n                label=\"High\"\n                onChange={setInsuranceMax}\n                defaultValue={insuranceMax}\n                />}\n            {((insuranceDist === 'Uniform')) &&         \n                <ValueTextField\n                label=\"Min\"\n                onChange={setInsuranceMin}\n                defaultValue={insuranceMin}\n                />}\n            {((insuranceDist === 'Uniform')) &&         \n                <ValueTextField\n                label=\"Max\"\n                onChange={setInsuranceMax}\n                defaultValue={insuranceMax}\n                />}\n            {((insuranceDist === 'Choice')) &&         \n                <ValueStrTextField\n                label=\"List\"\n                onChange={setInsuranceChoice}\n                defaultValue={insuranceChoice}\n        />}\n        </div>\n    );\n};\n\nexport default InsuranceSim;","import ExpenseUtilitiesSim from './ExpenseUtilitiesSim';\nexport default ExpenseUtilitiesSim;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    Dropdown,\n} from '@fluentui/react';\n\nimport {\n    useCallback,\n} from 'react';\n\nimport {\n    expenseUtilitiesState,\n    expenseUtilitiesDistState,\n    expenseUtilitiesMinState,\n    expenseUtilitiesMaxState,\n    expenseUtilitiesChoiceState,\n    DistributionOptions,\n} from '../store';\n\nimport './style.css';\n\nimport ValueTextField from '../ValueTextField';\nimport ValueStrTextField from '../ValueStrTextField';\n\nconst ExpenseUtilitiesSim = () => {\n    const [expenseUtilities, setExpenseUtilities] = useRecoilState(expenseUtilitiesState);\n    const [expenseUtilitiesDist, setExpenseUtilitiesDist] = useRecoilState(expenseUtilitiesDistState);\n    const [expenseUtilitiesMin, setExpenseUtilitiesMin] = useRecoilState(expenseUtilitiesMinState);\n    const [expenseUtilitiesMax, setExpenseUtilitiesMax] = useRecoilState(expenseUtilitiesMaxState);\n    const [expenseUtilitiesChoice, setExpenseUtilitiesChoice] = useRecoilState(expenseUtilitiesChoiceState);\n\n    const onChangeExpenseUtilitiesDist = useCallback((e, item) => {\n        setExpenseUtilitiesDist(item.text);\n    }, [setExpenseUtilitiesDist]);\n\n    return (\n        <div className=\"ExpenseUtilitiesSim-Div\">\n            <Dropdown\n                label=\"Distribution\"\n                className=\"ExpenseUtilitiesSim-Dropdown\"\n                placeholder={expenseUtilitiesDist}\n                options={DistributionOptions}\n                onChange={onChangeExpenseUtilitiesDist}\n            />\n            {((expenseUtilitiesDist === 'None')) &&         \n                <ValueTextField\n                label=\"Point Estimate\"\n                onChange={setExpenseUtilities}\n                defaultValue={expenseUtilities}\n                />}\n            {((expenseUtilitiesDist === 'Normal')) &&         \n                <ValueTextField\n                label=\"Low\"\n                onChange={setExpenseUtilitiesMin}\n                defaultValue={expenseUtilitiesMin}\n                />}\n            {((expenseUtilitiesDist === 'Normal')) &&         \n                <ValueTextField\n                label=\"High\"\n                onChange={setExpenseUtilitiesMax}\n                defaultValue={expenseUtilitiesMax}\n                />}\n            {((expenseUtilitiesDist === 'Uniform')) &&         \n                <ValueTextField\n                label=\"Min\"\n                onChange={setExpenseUtilitiesMin}\n                defaultValue={expenseUtilitiesMin}\n                />}\n            {((expenseUtilitiesDist === 'Uniform')) &&         \n                <ValueTextField\n                label=\"Max\"\n                onChange={setExpenseUtilitiesMax}\n                defaultValue={expenseUtilitiesMax}\n                />}\n            {((expenseUtilitiesDist === 'Choice')) &&         \n                <ValueStrTextField\n                label=\"List\"\n                onChange={setExpenseUtilitiesChoice}\n                defaultValue={expenseUtilitiesChoice}\n        />}\n        </div>\n    );\n};\n\nexport default ExpenseUtilitiesSim;","import ManagementSim from './ManagementSim';\nexport default ManagementSim;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    Dropdown,\n} from '@fluentui/react';\n\nimport {\n    useCallback,\n} from 'react';\n\nimport {\n    managementState,\n    managementDistState,\n    managementMinState,\n    managementMaxState,\n    managementChoiceState,\n    DistributionOptions,\n} from '../store';\n\nimport './style.css';\n\nimport ValuePctTextField from '../ValuePctTextField';\nimport ValueStrTextField from '../ValueStrTextField';\n\nconst ManagementSim = () => {\n    const [management, setManagement] = useRecoilState(managementState);\n    const [managementDist, setManagementDist] = useRecoilState(managementDistState);\n    const [managementMin, setManagementMin] = useRecoilState(managementMinState);\n    const [managementMax, setManagementMax] = useRecoilState(managementMaxState);\n    const [managementChoice, setManagementChoice] = useRecoilState(managementChoiceState);\n\n    const onChangeManagementDist = useCallback((e, item) => {\n        setManagementDist(item.text);\n    }, [setManagementDist]);\n\n    return (\n        <div className=\"ManagementSim-Div\">\n            <Dropdown\n                label=\"Distribution\"\n                className=\"ManagementSim-Dropdown\"\n                placeholder={managementDist}\n                options={DistributionOptions}\n                onChange={onChangeManagementDist}\n            />\n            {((managementDist === 'None')) &&         \n                <ValuePctTextField\n                label=\"Point Estimate\"\n                onChange={setManagement}\n                defaultValue={management}\n                />}\n            {((managementDist === 'Normal')) &&         \n                <ValuePctTextField\n                label=\"Low\"\n                onChange={setManagementMin}\n                defaultValue={managementMin}\n                />}\n            {((managementDist === 'Normal')) &&         \n                <ValuePctTextField\n                label=\"High\"\n                onChange={setManagementMax}\n                defaultValue={managementMax}\n                />}\n            {((managementDist === 'Uniform')) &&         \n                <ValuePctTextField\n                label=\"Min\"\n                onChange={setManagementMin}\n                defaultValue={managementMin}\n                />}\n            {((managementDist === 'Uniform')) &&         \n                <ValuePctTextField\n                label=\"Max\"\n                onChange={setManagementMax}\n                defaultValue={managementMax}\n                />}\n            {((managementDist === 'Choice')) &&         \n                <ValueStrTextField\n                label=\"List\"\n                onChange={setManagementChoice}\n                defaultValue={managementChoice}\n        />}\n        </div>\n    );\n};\n\nexport default ManagementSim;","import LeasingCostsSim from './LeasingCostsSim';\nexport default LeasingCostsSim;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    Dropdown,\n} from '@fluentui/react';\n\nimport {\n    useCallback,\n} from 'react';\n\nimport {\n    leasingCostsState,\n    leasingCostsDistState,\n    leasingCostsMinState,\n    leasingCostsMaxState,\n    leasingCostsChoiceState,\n    DistributionOptions,\n} from '../store';\n\nimport './style.css';\n\nimport ValueTextField from '../ValueTextField';\nimport ValueStrTextField from '../ValueStrTextField';\n\nconst LeasingCostsSim = () => {\n    const [leasingCosts, setLeasingCosts] = useRecoilState(leasingCostsState);\n    const [leasingCostsDist, setLeasingCostsDist] = useRecoilState(leasingCostsDistState);\n    const [leasingCostsMin, setLeasingCostsMin] = useRecoilState(leasingCostsMinState);\n    const [leasingCostsMax, setLeasingCostsMax] = useRecoilState(leasingCostsMaxState);\n    const [leasingCostsChoice, setLeasingCostsChoice] = useRecoilState(leasingCostsChoiceState);\n\n    const onChangeLeasingCostsDist = useCallback((e, item) => {\n        setLeasingCostsDist(item.text);\n    }, [setLeasingCostsDist]);\n\n    return (\n        <div className=\"LeasingCostsSim-Div\">\n            <Dropdown\n                label=\"Distribution\"\n                className=\"LeasingCostsSim-Dropdown\"\n                placeholder={leasingCostsDist}\n                options={DistributionOptions}\n                onChange={onChangeLeasingCostsDist}\n            />\n            {((leasingCostsDist === 'None')) &&         \n                <ValueTextField\n                label=\"Point Estimate\"\n                onChange={setLeasingCosts}\n                defaultValue={leasingCosts}\n                />}\n            {((leasingCostsDist === 'Normal')) &&         \n                <ValueTextField\n                label=\"Low\"\n                onChange={setLeasingCostsMin}\n                defaultValue={leasingCostsMin}\n                />}\n            {((leasingCostsDist === 'Normal')) &&         \n                <ValueTextField\n                label=\"High\"\n                onChange={setLeasingCostsMax}\n                defaultValue={leasingCostsMax}\n                />}\n            {((leasingCostsDist === 'Uniform')) &&         \n                <ValueTextField\n                label=\"Min\"\n                onChange={setLeasingCostsMin}\n                defaultValue={leasingCostsMin}\n                />}\n            {((leasingCostsDist === 'Uniform')) &&         \n                <ValueTextField\n                label=\"Max\"\n                onChange={setLeasingCostsMax}\n                defaultValue={leasingCostsMax}\n                />}\n            {((leasingCostsDist === 'Choice')) &&         \n                <ValueStrTextField\n                label=\"List\"\n                onChange={setLeasingCostsChoice}\n                defaultValue={leasingCostsChoice}\n        />}\n        </div>\n    );\n};\n\nexport default LeasingCostsSim;","import AvgOccupancySim from './AvgOccupancySim';\nexport default AvgOccupancySim;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    Dropdown,\n} from '@fluentui/react';\n\nimport {\n    useCallback,\n} from 'react';\n\nimport {\n    avgOccupancyState,\n    avgOccupancyDistState,\n    avgOccupancyMinState,\n    avgOccupancyMaxState,\n    avgOccupancyChoiceState,\n    DistributionOptions,\n} from '../store';\n\nimport './style.css';\n\nimport ValueTextField from '../ValueTextField';\nimport ValueStrTextField from '../ValueStrTextField';\n\nconst AvgOccupancySim = () => {\n    const [avgOccupancy, setAvgOccupancy] = useRecoilState(avgOccupancyState);\n    const [avgOccupancyDist, setAvgOccupancyDist] = useRecoilState(avgOccupancyDistState);\n    const [avgOccupancyMin, setAvgOccupancyMin] = useRecoilState(avgOccupancyMinState);\n    const [avgOccupancyMax, setAvgOccupancyMax] = useRecoilState(avgOccupancyMaxState);\n    const [avgOccupancyChoice, setAvgOccupancyChoice] = useRecoilState(avgOccupancyChoiceState);\n\n    const onChangeAvgOccupancyDist = useCallback((e, item) => {\n        setAvgOccupancyDist(item.text);\n    }, [setAvgOccupancyDist]);\n\n    return (\n        <div className=\"AvgOccupancySim-Div\">\n            <Dropdown\n                label=\"Distribution\"\n                className=\"AvgOccupancySim-Dropdown\"\n                placeholder={avgOccupancyDist}\n                options={DistributionOptions}\n                onChange={onChangeAvgOccupancyDist}\n            />\n            {((avgOccupancyDist === 'None')) &&         \n                <ValueTextField\n                label=\"Point Estimate\"\n                onChange={setAvgOccupancy}\n                defaultValue={avgOccupancy}\n                />}\n            {((avgOccupancyDist === 'Normal')) &&         \n                <ValueTextField\n                label=\"Low\"\n                onChange={setAvgOccupancyMin}\n                defaultValue={avgOccupancyMin}\n                />}\n            {((avgOccupancyDist === 'Normal')) &&         \n                <ValueTextField\n                label=\"High\"\n                onChange={setAvgOccupancyMax}\n                defaultValue={avgOccupancyMax}\n                />}\n            {((avgOccupancyDist === 'Uniform')) &&         \n                <ValueTextField\n                label=\"Min\"\n                onChange={setAvgOccupancyMin}\n                defaultValue={avgOccupancyMin}\n                />}\n            {((avgOccupancyDist === 'Uniform')) &&         \n                <ValueTextField\n                label=\"Max\"\n                onChange={setAvgOccupancyMax}\n                defaultValue={avgOccupancyMax}\n                />}\n            {((avgOccupancyDist === 'Choice')) &&         \n                <ValueStrTextField\n                label=\"List\"\n                onChange={setAvgOccupancyChoice}\n                defaultValue={avgOccupancyChoice}\n        />}\n        </div>\n    );\n};\n\nexport default AvgOccupancySim;","import MaintenanceSim from './MaintenanceSim';\nexport default MaintenanceSim;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    Dropdown,\n} from '@fluentui/react';\n\nimport {\n    useCallback,\n} from 'react';\n\nimport {\n    maintenanceState,\n    maintenanceDistState,\n    maintenanceMinState,\n    maintenanceMaxState,\n    maintenanceChoiceState,\n    DistributionOptions,\n} from '../store';\n\nimport './style.css';\n\nimport ValuePctTextField from '../ValuePctTextField';\nimport ValueStrTextField from '../ValueStrTextField';\n\nconst MaintenanceSim = () => {\n    const [maintenance, setMaintenance] = useRecoilState(maintenanceState);\n    const [maintenanceDist, setMaintenanceDist] = useRecoilState(maintenanceDistState);\n    const [maintenanceMin, setMaintenanceMin] = useRecoilState(maintenanceMinState);\n    const [maintenanceMax, setMaintenanceMax] = useRecoilState(maintenanceMaxState);\n    const [maintenanceChoice, setMaintenanceChoice] = useRecoilState(maintenanceChoiceState);\n\n    const onChangeMaintenanceDist = useCallback((e, item) => {\n        setMaintenanceDist(item.text);\n    }, [setMaintenanceDist]);\n\n    return (\n        <div className=\"MaintenanceSim-Div\">\n            <Dropdown\n                label=\"Distribution\"\n                className=\"MaintenanceSim-Dropdown\"\n                placeholder={maintenanceDist}\n                options={DistributionOptions}\n                onChange={onChangeMaintenanceDist}\n            />\n            {((maintenanceDist === 'None')) &&         \n                <ValuePctTextField\n                label=\"Point Estimate\"\n                onChange={setMaintenance}\n                defaultValue={maintenance}\n                />}\n            {((maintenanceDist === 'Normal')) &&         \n                <ValuePctTextField\n                label=\"Low\"\n                onChange={setMaintenanceMin}\n                defaultValue={maintenanceMin}\n                />}\n            {((maintenanceDist === 'Normal')) &&         \n                <ValuePctTextField\n                label=\"High\"\n                onChange={setMaintenanceMax}\n                defaultValue={maintenanceMax}\n                />}\n            {((maintenanceDist === 'Uniform')) &&         \n                <ValuePctTextField\n                label=\"Min\"\n                onChange={setMaintenanceMin}\n                defaultValue={maintenanceMin}\n                />}\n            {((maintenanceDist === 'Uniform')) &&         \n                <ValuePctTextField\n                label=\"Max\"\n                onChange={setMaintenanceMax}\n                defaultValue={maintenanceMax}\n                />}\n            {((maintenanceDist === 'Choice')) &&         \n                <ValueStrTextField\n                label=\"List\"\n                onChange={setMaintenanceChoice}\n                defaultValue={maintenanceChoice}\n        />}\n        </div>\n    );\n};\n\nexport default MaintenanceSim;","import ExpenseDetailsSim from './ExpenseDetailsSim';\nexport default ExpenseDetailsSim;","import {\n    Label,\n} from '@fluentui/react';\n\nimport PropertyTaxSim from '../PropertyTaxSim';\nimport PropertyTaxFreq from '../PropertyTaxFreq';\nimport InsuranceSim from '../InsuranceSim';\nimport InsuranceFreq from '../InsuranceFreq';\nimport ExpenseUtilitiesSim from '../ExpenseUtilitiesSim';\nimport ManagementSim from '../ManagementSim';\nimport LeasingCostsSim from '../LeasingCostsSim';\nimport AvgOccupancySim from '../AvgOccupancySim';\nimport MaintenanceSim from '../MaintenanceSim';\n\nimport './style.css';\n\nconst ExpenseDetailsSim = () => {\n    return (\n        <div className=\"ExpenseDetailsSim-Div\">\n            <Label className=\"ExpenseDetailsSim-Title\">Expense Details</Label>\n            <div className=\"ExpenseDetailsSim-Parent\">\n                <div className=\"ExpenseDetailsSim-Container\">\n                    <fieldset>\n                        <legend>\n                            <Label className=\"ExpenseDetailsSim-Subtitle\">Property Tax</Label>\n                        </legend>\n                            <PropertyTaxSim/>\n                    </fieldset>\n                </div>        \n                <div className=\"ExpenseDetailsSim-Secondary\"><PropertyTaxFreq/></div>\n            </div>\n            <div className=\"ExpenseDetailsSim-Parent\">\n                <div className=\"ExpenseDetailsSim-Container\">\n                    <fieldset>\n                        <legend>\n                            <Label className=\"ExpenseDetailsSim-Subtitle\">Insurance</Label>\n                        </legend>\n                            <InsuranceSim/>\n                    </fieldset>\n                </div>     \n                <div className=\"ExpenseDetailsSim-Secondary\"><InsuranceFreq/></div>\n            </div>\n            <div className=\"ExpenseDetailsSim-Container\">\n                <fieldset>\n                    <legend>\n                        <Label className=\"ExpenseDetailsSim-Subtitle\">Monthly Utilities</Label>\n                    </legend>\n                        <ExpenseUtilitiesSim/>\n                </fieldset>\n            </div> \n            <div className=\"ExpenseDetailsSim-Container\">\n                <fieldset>\n                    <legend>\n                        <Label className=\"ExpenseDetailsSim-Subtitle\">Management</Label>\n                    </legend>\n                        <ManagementSim/>\n                </fieldset>\n            </div> \n            <div className=\"ExpenseDetailsSim-Container\">\n                <fieldset>\n                    <legend>\n                        <Label className=\"ExpenseDetailsSim-Subtitle\">Leasing Costs Per Unit</Label>\n                    </legend>\n                        <LeasingCostsSim/>\n                </fieldset>\n            </div> \n            <div className=\"ExpenseDetailsSim-Container\">\n                <fieldset>\n                    <legend>\n                        <Label className=\"ExpenseDetailsSim-Subtitle\">Avg Occupancy (Yrs)</Label>\n                    </legend>\n                        <AvgOccupancySim/>\n                </fieldset>\n            </div>                         \n            <div className=\"ExpenseDetailsSim-Container\">\n                <fieldset>\n                    <legend>\n                        <Label className=\"ExpenseDetailsSim-Subtitle\">Maintenance</Label>\n                    </legend>\n                        <MaintenanceSim/>\n                </fieldset>\n            </div> \n        </div>\n    );\n};\n\nexport default ExpenseDetailsSim;","import IncomePerUnitSim from './IncomePerUnitSim';\nexport default IncomePerUnitSim;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    Dropdown,\n} from '@fluentui/react';\n\nimport {\n    useCallback,\n} from 'react';\n\nimport {\n    incomePerUnitState,\n    incomePerUnitDistState,\n    incomePerUnitMinState,\n    incomePerUnitMaxState,\n    incomePerUnitChoiceState,\n    DistributionOptions,\n} from '../store';\n\nimport './style.css';\n\nimport ValueTextField from '../ValueTextField';\nimport ValueStrTextField from '../ValueStrTextField';\n\nconst IncomePerUnitSim = () => {\n    const [incomePerUnit, setIncomePerUnit] = useRecoilState(incomePerUnitState);\n    const [incomePerUnitDist, setIncomePerUnitDist] = useRecoilState(incomePerUnitDistState);\n    const [incomePerUnitMin, setIncomePerUnitMin] = useRecoilState(incomePerUnitMinState);\n    const [incomePerUnitMax, setIncomePerUnitMax] = useRecoilState(incomePerUnitMaxState);\n    const [incomePerUnitChoice, setIncomePerUnitChoice] = useRecoilState(incomePerUnitChoiceState);\n\n    const onChangeIncomePerUnitDist = useCallback((e, item) => {\n        setIncomePerUnitDist(item.text);\n    }, [setIncomePerUnitDist]);\n\n    return (\n        <div className=\"IncomePerUnitSim-Div\">\n            <Dropdown\n                label=\"Distribution\"\n                className=\"IncomePerUnitSim-Dropdown\"\n                placeholder={incomePerUnitDist}\n                options={DistributionOptions}\n                onChange={onChangeIncomePerUnitDist}\n            />\n            {((incomePerUnitDist === 'None')) &&         \n                <ValueTextField\n                label=\"Point Estimate\"\n                onChange={setIncomePerUnit}\n                defaultValue={incomePerUnit}\n                />}\n            {((incomePerUnitDist === 'Normal')) &&         \n                <ValueTextField\n                label=\"Low\"\n                onChange={setIncomePerUnitMin}\n                defaultValue={incomePerUnitMin}\n                />}\n            {((incomePerUnitDist === 'Normal')) &&         \n                <ValueTextField\n                label=\"High\"\n                onChange={setIncomePerUnitMax}\n                defaultValue={incomePerUnitMax}\n                />}\n            {((incomePerUnitDist === 'Uniform')) &&         \n                <ValueTextField\n                label=\"Min\"\n                onChange={setIncomePerUnitMin}\n                defaultValue={incomePerUnitMin}\n                />}\n            {((incomePerUnitDist === 'Uniform')) &&         \n                <ValueTextField\n                label=\"Max\"\n                onChange={setIncomePerUnitMax}\n                defaultValue={incomePerUnitMax}\n                />}\n            {((incomePerUnitDist === 'Choice')) &&         \n                <ValueStrTextField\n                label=\"List\"\n                onChange={setIncomePerUnitChoice}\n                defaultValue={incomePerUnitChoice}\n        />}\n        </div>\n    );\n};\n\nexport default IncomePerUnitSim;","import VacancyRateSim from './VacancyRateSim';\nexport default VacancyRateSim;","import {\n    useRecoilState,\n} from 'recoil';\n\nimport {\n    Dropdown,\n} from '@fluentui/react';\n\nimport {\n    useCallback,\n} from 'react';\n\nimport {\n    vacancyRateState,\n    vacancyRateDistState,\n    vacancyRateMinState,\n    vacancyRateMaxState,\n    vacancyRateChoiceState,\n    DistributionOptions,\n} from '../store';\n\nimport './style.css';\n\nimport ValuePctTextField from '../ValuePctTextField';\nimport ValueStrTextField from '../ValueStrTextField';\n\nconst VacancyRateSim = () => {\n    const [vacancyRate, setVacancyRate] = useRecoilState(vacancyRateState);\n    const [vacancyRateDist, setVacancyRateDist] = useRecoilState(vacancyRateDistState);\n    const [vacancyRateMin, setVacancyRateMin] = useRecoilState(vacancyRateMinState);\n    const [vacancyRateMax, setVacancyRateMax] = useRecoilState(vacancyRateMaxState);\n    const [vacancyRateChoice, setVacancyRateChoice] = useRecoilState(vacancyRateChoiceState);\n\n    const onChangeVacancyRateDist = useCallback((e, item) => {\n        setVacancyRateDist(item.text);\n    }, [setVacancyRateDist]);\n\n    return (\n        <div className=\"VacancyRateSim-Div\">\n            <Dropdown\n                label=\"Distribution\"\n                className=\"VacancyRateSim-Dropdown\"\n                placeholder={vacancyRateDist}\n                options={DistributionOptions}\n                onChange={onChangeVacancyRateDist}\n            />\n            {((vacancyRateDist === 'None')) &&         \n                <ValuePctTextField\n                label=\"Point Estimate\"\n                onChange={setVacancyRate}\n                defaultValue={vacancyRate}\n                />}\n            {((vacancyRateDist === 'Normal')) &&         \n                <ValuePctTextField\n                label=\"Low\"\n                onChange={setVacancyRateMin}\n                defaultValue={vacancyRateMin}\n                />}\n            {((vacancyRateDist === 'Normal')) &&         \n                <ValuePctTextField\n                label=\"High\"\n                onChange={setVacancyRateMax}\n                defaultValue={vacancyRateMax}\n                />}\n            {((vacancyRateDist === 'Uniform')) &&         \n                <ValuePctTextField\n                label=\"Min\"\n                onChange={setVacancyRateMin}\n                defaultValue={vacancyRateMin}\n                />}\n            {((vacancyRateDist === 'Uniform')) &&         \n                <ValuePctTextField\n                label=\"Max\"\n                onChange={setVacancyRateMax}\n                defaultValue={vacancyRateMax}\n                />}\n            {((vacancyRateDist === 'Choice')) &&         \n                <ValueStrTextField\n                label=\"List\"\n                onChange={setVacancyRateChoice}\n                defaultValue={vacancyRateChoice}\n        />}\n        </div>\n    );\n};\n\nexport default VacancyRateSim;","import IncomeDetailsSim from './IncomeDetailsSim';\nexport default IncomeDetailsSim;","import {\n    Label,\n} from '@fluentui/react';\n\nimport IncomePerUnitSim from '../IncomePerUnitSim';\nimport VacancyRateSim from '../VacancyRateSim';\nimport IncomeUtilitiesSim from '../IncomeUtilitiesSim';\n\nimport './style.css';\n\nconst IncomeDetailsSim = () => {\n    return (\n        <div className=\"IncomeDetailsSim-Div\">\n            <Label className=\"IncomeDetailsSim-Title\">Income Details</Label>\n            <div className=\"IncomeDetailsSim-Container\">\n                <fieldset>\n                    <legend>\n                        <Label className=\"IncomeDetailsSim-Subtitle\">Monthly Rent Per Unit</Label>\n                    </legend>\n                        <IncomePerUnitSim/>\n                </fieldset>\n            </div>\n            <div className=\"IncomeDetailsSim-Container\">\n                <fieldset>\n                    <legend>\n                        <Label className=\"IncomeDetailsSim-Subtitle\">Vacancy Rate</Label>\n                    </legend>\n                    <VacancyRateSim/>\n                </fieldset>\n            </div>\n        </div>\n    );\n};\n\n//                <IncomeUtilitiesSim/>\n\nexport default IncomeDetailsSim;","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/simulations.worker.d0e2be2e.worker.js\");\n}\n","import {\n    useRecoilState,\n    useRecoilValue,\n    useSetRecoilState,\n} from 'recoil';\n\nimport {\n    PrimaryButton,\n} from \"@fluentui/react\";\n\nimport {\n    purchasePriceState,\n    downPaymentState,\n    interestRateState,\n    mortgageYearsState,\n    mortgagePaymentsPerYearState,\n    closingCostsState,\n    repairsState,\n    propertyTaxState,\n    propertyTaxFreqState,\n    insuranceState,\n    insuranceFreqState,\n    expenseUtilitiesState,\n    managementState,\n    leasingCostsState,\n    avgOccupancyState,\n    maintenanceState,\n    incomePerUnitState,\n    numUnitsState,\n    vacancyRateState,\n    incomeUtilitiesState,\n    numInvestorsState,\n    brrrrState,\n    afterRepairValueState,\n    loanToValueState,\n    simsState,\n    simsRunState,\n    purchasePriceDistState,\n    interestRateDistState,\n    closingCostsDistState,\n    repairsDistState,\n    propertyTaxDistState,\n    insuranceDistState,\n    expenseUtilitiesDistState,\n    managementDistState,\n    leasingCostsDistState,\n    avgOccupancyDistState,\n    maintenanceDistState,\n    incomePerUnitDistState,\n    vacancyRateDistState,\n    incomeUtilitiesDistState,\n    afterRepairValueDistState,\n    purchasePriceMinState,\n    interestRateMinState,\n    closingCostsMinState,\n    repairsMinState,\n    propertyTaxMinState,\n    insuranceMinState,\n    expenseUtilitiesMinState,\n    managementMinState,\n    leasingCostsMinState,\n    avgOccupancyMinState,\n    maintenanceMinState,\n    incomePerUnitMinState,\n    vacancyRateMinState,\n    incomeUtilitiesMinState,\n    afterRepairValueMinState,\n    purchasePriceMaxState,\n    interestRateMaxState,\n    closingCostsMaxState,\n    repairsMaxState,\n    propertyTaxMaxState,\n    insuranceMaxState,\n    expenseUtilitiesMaxState,\n    managementMaxState,\n    leasingCostsMaxState,\n    avgOccupancyMaxState,\n    maintenanceMaxState,\n    incomePerUnitMaxState,\n    vacancyRateMaxState,\n    incomeUtilitiesMaxState,\n    afterRepairValueMaxState,\n    purchasePriceChoiceState,\n    interestRateChoiceState,\n    closingCostsChoiceState,\n    repairsChoiceState,\n    propertyTaxChoiceState,\n    insuranceChoiceState,\n    expenseUtilitiesChoiceState,\n    managementChoiceState,\n    leasingCostsChoiceState,\n    avgOccupancyChoiceState,\n    maintenanceChoiceState,\n    incomePerUnitChoiceState,\n    vacancyRateChoiceState,\n    incomeUtilitiesChoiceState,\n    afterRepairValueChoiceState,   \n    modalOpenState,\n    simsPctCompleteState,\n} from '../store';\n\nimport Worker from \"../utils/simulations.worker.js\";\n\nimport { useCallback, } from 'react';\n\nimport { useId } from '@uifabric/react-hooks';\n\nimport {\n  getTheme,\n  mergeStyleSets,\n  FontWeights,\n  Modal,\n  IconButton,\n} from 'office-ui-fabric-react';\n\nimport { ProgressIndicator } from 'office-ui-fabric-react/lib/ProgressIndicator';\n\nconst cancelIcon = { iconName: 'Cancel' };\n\nconst theme = getTheme();\nconst contentStyles = mergeStyleSets({\n  container: {\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    alignItems: 'stretch',\n  },\n  header: [\n    theme.fonts.Large,\n    {\n      flex: '1 1 auto',\n      borderTop: `4px solid ${theme.palette.themePrimary}`,\n      color: theme.palette.neutralPrimary,\n      display: 'flex',\n      alignItems: 'center',\n      fontWeight: FontWeights.semibold,\n      padding: '12px 12px 14px 24px',\n    },\n  ],\n  body: {\n    flex: '4 4 auto',\n    padding: '0 24px 24px 24px',\n    overflowY: 'hidden',\n    selectors: {\n      p: { margin: '14px 0' },\n      'p:first-child': { marginTop: 0 },\n      'p:last-child': { marginBottom: 0 },\n    },\n  },\n});\nconst iconButtonStyles = {\n  root: {\n    color: theme.palette.neutralPrimary,\n    marginLeft: 'auto',\n    marginTop: '4px',\n    marginRight: '2px',\n  },\n  rootHovered: {\n    color: theme.palette.neutralDark,\n  },\n};\n\nconst SimulationButton = () => {\n    const [modalOpen, setModalOpen] = useRecoilState(modalOpenState);\n    const [simsPctComplete, setSimsPctComplete] = useRecoilState(simsPctCompleteState);\n\n    let [sims, setSims] = useRecoilState(simsState);\n    const setSimsRun = useSetRecoilState(simsRunState);\n\n    const purchasePrice = useRecoilValue(purchasePriceState);\n    const interestRate = useRecoilValue(interestRateState);\n    const closingCosts = useRecoilValue(closingCostsState);\n    const repairs = useRecoilValue(repairsState);\n    const propertyTax = useRecoilValue(propertyTaxState);\n    const insurance = useRecoilValue(insuranceState);\n    const expenseUtilities = useRecoilValue(expenseUtilitiesState);\n    const management = useRecoilValue(managementState);\n    const leasingCosts = useRecoilValue(leasingCostsState);\n    const avgOccupancy = useRecoilValue(avgOccupancyState);\n    const maintenance = useRecoilValue(maintenanceState);\n    const incomePerUnit = useRecoilValue(incomePerUnitState);\n    const vacancyRate = useRecoilValue(vacancyRateState);\n    const incomeUtilities = useRecoilValue(incomeUtilitiesState);\n    const afterRepairValue = useRecoilValue(afterRepairValueState);\n\n    const purchasePriceDist = useRecoilValue(purchasePriceDistState);\n    const interestRateDist = useRecoilValue(interestRateDistState);\n    const closingCostsDist = useRecoilValue(closingCostsDistState);\n    const repairsDist = useRecoilValue(repairsDistState);\n    const propertyTaxDist = useRecoilValue(propertyTaxDistState);\n    const insuranceDist = useRecoilValue(insuranceDistState);\n    const expenseUtilitiesDist = useRecoilValue(expenseUtilitiesDistState);\n    const managementDist = useRecoilValue(managementDistState);\n    const leasingCostsDist = useRecoilValue(leasingCostsDistState);\n    const avgOccupancyDist = useRecoilValue(avgOccupancyDistState);\n    const maintenanceDist = useRecoilValue(maintenanceDistState);\n    const incomePerUnitDist = useRecoilValue(incomePerUnitDistState);\n    const vacancyRateDist = useRecoilValue(vacancyRateDistState);\n    const incomeUtilitiesDist = useRecoilValue(incomeUtilitiesDistState);\n    const afterRepairValueDist = useRecoilValue(afterRepairValueDistState);\n\n    const purchasePriceMin = useRecoilValue(purchasePriceMinState);\n    const interestRateMin = useRecoilValue(interestRateMinState);\n    const closingCostsMin = useRecoilValue(closingCostsMinState);\n    const repairsMin = useRecoilValue(repairsMinState);\n    const propertyTaxMin = useRecoilValue(propertyTaxMinState);\n    const insuranceMin = useRecoilValue(insuranceMinState);\n    const expenseUtilitiesMin = useRecoilValue(expenseUtilitiesMinState);\n    const managementMin = useRecoilValue(managementMinState);\n    const leasingCostsMin = useRecoilValue(leasingCostsMinState);\n    const avgOccupancyMin = useRecoilValue(avgOccupancyMinState);\n    const maintenanceMin = useRecoilValue(maintenanceMinState);\n    const incomePerUnitMin = useRecoilValue(incomePerUnitMinState);\n    const vacancyRateMin = useRecoilValue(vacancyRateMinState);\n    const incomeUtilitiesMin = useRecoilValue(incomeUtilitiesMinState);\n    const afterRepairValueMin = useRecoilValue(afterRepairValueMinState);\n\n    const purchasePriceMax = useRecoilValue(purchasePriceMaxState);\n    const interestRateMax = useRecoilValue(interestRateMaxState);\n    const closingCostsMax = useRecoilValue(closingCostsMaxState);\n    const repairsMax = useRecoilValue(repairsMaxState);\n    const propertyTaxMax = useRecoilValue(propertyTaxMaxState);\n    const insuranceMax = useRecoilValue(insuranceMaxState);\n    const expenseUtilitiesMax = useRecoilValue(expenseUtilitiesMaxState);\n    const managementMax = useRecoilValue(managementMaxState);\n    const leasingCostsMax = useRecoilValue(leasingCostsMaxState);\n    const avgOccupancyMax = useRecoilValue(avgOccupancyMaxState);\n    const maintenanceMax = useRecoilValue(maintenanceMaxState);\n    const incomePerUnitMax = useRecoilValue(incomePerUnitMaxState);\n    const vacancyRateMax = useRecoilValue(vacancyRateMaxState);\n    const incomeUtilitiesMax = useRecoilValue(incomeUtilitiesMaxState);\n    const afterRepairValueMax = useRecoilValue(afterRepairValueMaxState);\n    \n    const purchasePriceChoice = useRecoilValue(purchasePriceChoiceState);\n    const interestRateChoice = useRecoilValue(interestRateChoiceState);\n    const closingCostsChoice = useRecoilValue(closingCostsChoiceState);\n    const repairsChoice = useRecoilValue(repairsChoiceState);\n    const propertyTaxChoice = useRecoilValue(propertyTaxChoiceState);\n    const insuranceChoice = useRecoilValue(insuranceChoiceState);\n    const expenseUtilitiesChoice = useRecoilValue(expenseUtilitiesChoiceState);\n    const managementChoice = useRecoilValue(managementChoiceState);\n    const leasingCostsChoice = useRecoilValue(leasingCostsChoiceState);\n    const avgOccupancyChoice = useRecoilValue(avgOccupancyChoiceState);\n    const maintenanceChoice = useRecoilValue(maintenanceChoiceState);\n    const incomePerUnitChoice = useRecoilValue(incomePerUnitChoiceState);\n    const vacancyRateChoice = useRecoilValue(vacancyRateChoiceState);\n    const incomeUtilitiesChoice = useRecoilValue(incomeUtilitiesChoiceState);\n    const afterRepairValueChoice = useRecoilValue(afterRepairValueChoiceState);   \n\n    const numUnits = useRecoilValue(numUnitsState);\n    const propertyTaxFreq = useRecoilValue(propertyTaxFreqState);\n    const insuranceFreq = useRecoilValue(insuranceFreqState);\n    const downPymt = useRecoilValue(downPaymentState);\n    const mortgageYears = useRecoilValue(mortgageYearsState);\n    const mortgagePaymentsPerYear = useRecoilValue(mortgagePaymentsPerYearState);\n    const loanToValue = useRecoilValue(loanToValueState);\n    const brrrr = useRecoilValue(brrrrState);\n\n    const handleClick = () => {\n        const worker = new Worker();\n        worker.onmessage = e => {\n            const {\n                data: {\n                    progress = 0,\n                    results = {},\n                },\n            } = e;\n            setSimsPctComplete(progress);\n            if (Object.keys(results).length === 0) return;\n            setSims(results);\n            setSimsRun(true);\n            setModalOpen(false);\n        };\n        setModalOpen(true);\n        worker.postMessage({\n            sims: sims,\n            params: {\n                purchasePrice: purchasePrice,\n                purchasePrice_dist: purchasePriceDist,\n                purchasePrice_min: purchasePriceMin,\n                purchasePrice_max: purchasePriceMax,\n                purchasePrice_choice: purchasePriceChoice,\n                interestRate: interestRate,\n                interestRate_dist: interestRateDist,\n                interestRate_min: interestRateMin,\n                interestRate_max: interestRateMax,\n                interestRate_choice: interestRateChoice,\n                closingCosts: closingCosts,\n                closingCosts_dist: closingCostsDist,\n                closingCosts_min: closingCostsMin,\n                closingCosts_max: closingCostsMax,\n                closingCosts_choice: closingCostsChoice,\n                repairs: repairs,\n                repairs_dist: repairsDist,\n                repairs_min: repairsMin,\n                repairs_max: repairsMax,\n                repairs_choice: repairsChoice,\n                propertyTax: propertyTax,\n                propertyTax_dist: propertyTaxDist,\n                propertyTax_min: propertyTaxMin,\n                propertyTax_max: propertyTaxMax,\n                propertyTax_choice: propertyTaxChoice,\n                insurance: insurance,\n                insurance_dist: insuranceDist,\n                insurance_min: insuranceMin,\n                insurance_max: insuranceMax,\n                insurance_choice: insuranceChoice,\n                expenseUtilities: expenseUtilities,\n                expenseUtilities_dist: expenseUtilitiesDist,\n                expenseUtilities_min: expenseUtilitiesMin,\n                expenseUtilities_max: expenseUtilitiesMax,\n                expenseUtilities_choice: expenseUtilitiesChoice,\n                management: management,\n                management_dist: managementDist,\n                management_min: managementMin,\n                management_max: managementMax,\n                management_choice: managementChoice,\n                leasingCosts: leasingCosts,\n                leasingCosts_dist: leasingCostsDist,\n                leasingCosts_min: leasingCostsMin,\n                leasingCosts_max: leasingCostsMax,\n                leasingCosts_choice: leasingCostsChoice,\n                avgOccupancy: avgOccupancy,\n                avgOccupancy_dist: avgOccupancyDist,\n                avgOccupancy_min: avgOccupancyMin,\n                avgOccupancy_max: avgOccupancyMax,\n                avgOccupancy_choice: avgOccupancyChoice,\n                maintenance: maintenance,\n                maintenance_dist: maintenanceDist,\n                maintenance_min: maintenanceMin,\n                maintenance_max: maintenanceMax,\n                maintenance_choice: maintenanceChoice,\n                incomePerUnit: incomePerUnit,\n                incomePerUnit_dist: incomePerUnitDist,\n                incomePerUnit_min: incomePerUnitMin,\n                incomePerUnit_max: incomePerUnitMax,\n                incomePerUnit_choice: incomePerUnitChoice,\n                vacancyRate: vacancyRate,\n                vacancyRate_dist: vacancyRateDist,\n                vacancyRate_min: vacancyRateMin,\n                vacancyRate_max: vacancyRateMax,\n                vacancyRate_choice: vacancyRateChoice,\n                incomeUtilities: incomeUtilities,\n                incomeUtilities_dist: incomeUtilitiesDist,\n                incomeUtilities_min: incomeUtilitiesMin,\n                incomeUtilities_max: incomeUtilitiesMax,\n                incomeUtilities_choice: incomeUtilitiesChoice,\n                afterRepairValue: afterRepairValue,\n                afterRepairValue_dist: afterRepairValueDist,\n                afterRepairValue_min: afterRepairValueMin,\n                afterRepairValue_max: afterRepairValueMax,\n                afterRepairValue_choice: afterRepairValueChoice,\n\n                numUnits: numUnits,\n                propertyTaxFreq: propertyTaxFreq,\n                insuranceFreq: insuranceFreq,\n                mortgagePaymentsPerYear: mortgagePaymentsPerYear,\n                mortgageYears: mortgageYears,\n                downPymt: downPymt,\n                loanToValue: loanToValue,\n                brrrr: brrrr,\n            },\n        });\n    };\n\n    const hideModal = useCallback((e) => {\n        setModalOpen(false);\n    },[setModalOpen]);\n\n    const titleId = useId('title');\n\n    return (\n        <div>\n            <PrimaryButton\n                onClick={handleClick}\n            >\n                Run Simulations\n            </PrimaryButton>\n            <Modal\n                titleAriaId={titleId}\n                isOpen={modalOpen}\n                onDismiss={hideModal}\n                isBlocking={false}\n                containerClassName={contentStyles.container}\n            >\n                <div className={contentStyles.header}>\n                    <span id={titleId}>Calculating</span>\n                    <IconButton\n                        styles={iconButtonStyles}\n                        iconProps={cancelIcon}\n                        ariaLabel=\"Close popup\"\n                        onClick={hideModal}\n                    />\n                </div>\n                <div className={contentStyles.body}>\n                    <ProgressIndicator\n                        label=\"Running Simulations\"\n                        description=\"\"\n                        percentComplete={simsPctComplete}\n                    />\n                </div>\n            </Modal>\n        </div>\n    );\n};\n\nexport default SimulationButton;","import SimulationButton from './SimulationButton';\nexport default SimulationButton;","import SimulationInput from './SimulationInput';\nexport default SimulationInput;\n","import PurchaseDetailsSim from '../PurchaseDetailsSim';\nimport ExpenseDetailsSim from '../ExpenseDetailsSim';\nimport IncomeDetailsSim from '../IncomeDetailsSim';\nimport SimulationButton from '../SimulationButton';\n\nimport './style.css';\n\nconst SimulationInput = () => {\n    return (\n        <div className=\"SimulationInput-Div\">\n            <PurchaseDetailsSim/>\n            <ExpenseDetailsSim/>\n            <IncomeDetailsSim/>\n            <SimulationButton/>\n        </div>\n    );\n};\n\nexport default SimulationInput;","import {\n    useCallback,\n    useMemo,\n    useState,\n    useLayoutEffect,\n    useEffect,\n    useRef,\n} from 'react';\n\nimport {\n    useRecoilValue,\n} from 'recoil';\n\nimport {\n    themeState,\n    simsState,\n} from '../store';\n\nimport {\n    percentile,\n} from 'stats-lite';\n\nimport ReactPlotly from '../ReactPlotly';\n\nconst plotConfig = {\n    modeBarButtonsToRemove: [\n        'sendDataToCloud', 'select2d', 'lasso2d', 'resetScale2d'\n    ],\n    displaylogo: false,\n    scrollZoom: false,\n};\n\nconst useDimensions = recalc => {\n    const ref = useRef();\n    const [dimensions, setDimensions] = useState({});\n\n    useLayoutEffect(() => {\n        if (ref.current === null) return;\n        setDimensions(ref.current.getBoundingClientRect().toJSON());\n    }, [setDimensions, recalc]);\n\n    useEffect(() => {\n        if (ref.current === null) return;\n        const handleResize = () => {\n            setDimensions(ref.current.getBoundingClientRect().toJSON());\n        };\n        window.addEventListener('resize', handleResize);\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        }\n    }, []);\n    return [ref, dimensions];\n};\n\nconst CashOnCashHistGraph = props => {\n    const theme = useRecoilValue(themeState);\n    const sims = useRecoilValue(simsState);\n\n    const {\n        updateLayout,\n    } = props;\n\n    const data = [\n        {\n            x: sims[\"CashOnCash\"],\n            type: 'histogram',\n            histnorm: 'probability',\n            mode: 'lines+markers',\n            marker: {\n                color: 'blue',\n            },\n            xbins: { \n                size: (percentile(sims[\"CashOnCash\"],0.995) - percentile(sims[\"CashOnCash\"],0.005)) / 250, \n              },\n        },\n    ]\n\n    const [graphDivRef, dimensions] = useDimensions(updateLayout);\n\n    const layout = useMemo(() => {\n        return {\n            title: 'Distribution of Cash on Cash',\n            xaxis: {\n                title: \"Cash on Cash\",\n                gridcolor: theme.palette.neutralLight,\n                tickformat: ',.1%',\n                range: [percentile(sims[\"CashOnCash\"],0.005),percentile(sims[\"CashOnCash\"],0.995)],\n            },\n            yaxis: {\n                side: 'left',\n                anchor: 'x',\n                showline: true,\n                title: \"Probability Density\",\n                autorange: true,\n                gridcolor: theme.palette.neutralLight,\n                tickformat: ',.1%',\n            },\n            paper_bgcolor: theme.palette.white,\n            plot_bgcolor: theme.palette.white,\n            font: {\n                color: theme.palette.black,\n            },\n            showlegend: false,\n            width: dimensions.width,\n        };\n    }, [theme, dimensions, sims]);\n\n    const assignRef = useCallback(ref => {\n        if (ref === null) return;\n        graphDivRef.current = ref;\n    }, [graphDivRef]);\n\n    return (\n        <div\n            id=\"CashOnCashHistGraph\"\n            style={{\n                height: 'calc(100%)',\n                width: 'calc(100%)',\n            }}\n            ref={assignRef}\n        >\n            <ReactPlotly\n                divId={\"chart\"}\n                layout={layout}\n                data={data}\n                useResizeHandler={true}\n                config={plotConfig}\n                style={{\n                    width: 'calc(100%)',\n                    height: 'inherit',\n                }}\n            />\n        </div>\n    );\n};\n\nexport default CashOnCashHistGraph;","import CashOnCashHistGraph from './CashOnCashHistGraph';\nexport default CashOnCashHistGraph;","import {\n    useCallback,\n    useMemo,\n    useState,\n    useLayoutEffect,\n    useEffect,\n    useRef,\n} from 'react';\n\nimport {\n    useRecoilValue,\n} from 'recoil';\n\nimport {\n    themeState,\n    simsState,\n} from '../store';\n\nimport {\n    percentile,\n} from 'stats-lite';\n\nimport ReactPlotly from '../ReactPlotly';\n\nconst plotConfig = {\n    modeBarButtonsToRemove: [\n        'sendDataToCloud', 'select2d', 'lasso2d', 'resetScale2d'\n    ],\n    displaylogo: false,\n    scrollZoom: false,\n};\n\nconst useDimensions = recalc => {\n    const ref = useRef();\n    const [dimensions, setDimensions] = useState({});\n\n    useLayoutEffect(() => {\n        if (ref.current === null) return;\n        setDimensions(ref.current.getBoundingClientRect().toJSON());\n    }, [setDimensions, recalc]);\n\n    useEffect(() => {\n        if (ref.current === null) return;\n        const handleResize = () => {\n            setDimensions(ref.current.getBoundingClientRect().toJSON());\n        };\n        window.addEventListener('resize', handleResize);\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        }\n    }, []);\n    return [ref, dimensions];\n};\n\nconst CashFlowPerUnitHistGraph = props => {\n    const theme = useRecoilValue(themeState);\n    const sims = useRecoilValue(simsState);\n\n    const {\n        updateLayout,\n    } = props;\n\n    const data = [\n        {\n            x: sims[\"CashFlowPerUnitPerMonth\"],\n            type: 'histogram',\n            histnorm: 'probability',\n            mode: 'lines+markers',\n            marker: {\n                color: 'blue',\n            },\n            xbins: { \n                size: (percentile(sims[\"CashFlowPerUnitPerMonth\"],0.995) - percentile(sims[\"CashFlowPerUnitPerMonth\"],0.005)) / 250, \n              },            \n        },\n    ]\n\n    const [graphDivRef, dimensions] = useDimensions(updateLayout);\n\n    const layout = useMemo(() => {\n        return {\n            title: 'Distribution of Cash Flow Per Unit Per Month',\n            xaxis: {\n                title: \"Cash Flow Per Unit\",\n                gridcolor: theme.palette.neutralLight,\n                range: [percentile(sims[\"CashFlowPerUnitPerMonth\"],0.005),percentile(sims[\"CashFlowPerUnitPerMonth\"],0.995)],\n            },\n            yaxis: {\n                side: 'left',\n                anchor: 'x',\n                showline: true,\n                title: \"Probability Density\",\n                autorange: true,\n                gridcolor: theme.palette.neutralLight,\n                tickformat: ',.1%',\n            },\n            paper_bgcolor: theme.palette.white,\n            plot_bgcolor: theme.palette.white,\n            font: {\n                color: theme.palette.black,\n            },\n            showlegend: false,\n            width: dimensions.width,\n        };\n    }, [theme, dimensions, sims]);\n\n    const assignRef = useCallback(ref => {\n        if (ref === null) return;\n        graphDivRef.current = ref;\n    }, [graphDivRef]);\n\n    return (\n        <div\n            id=\"CashFlowPerUnitHistGraph\"\n            style={{\n                height: 'calc(100%)',\n                width: 'calc(100%)',\n            }}\n            ref={assignRef}\n        >\n            <ReactPlotly\n                divId={\"chart\"}\n                layout={layout}\n                data={data}\n                useResizeHandler={true}\n                config={plotConfig}\n                style={{\n                    width: 'calc(100%)',\n                    height: 'inherit',\n                }}\n            />\n        </div>\n    );\n};\n\nexport default CashFlowPerUnitHistGraph;","import CashFlowPerUnitHistGraph from './CashFlowPerUnitHistGraph';\nexport default CashFlowPerUnitHistGraph;","import {\n    useRecoilValue,\n} from 'recoil';\n\nimport {\n    useCallback,\n} from 'react';\n\nimport {\n    simsState,\n    simsRunState,\n} from '../store';\n\nimport { DetailsList } from '@fluentui/react';\n\nimport {\n    percentile,\n    mean,\n    sampleStdev,\n} from 'stats-lite';\n\nconst getStats = (data) => {\n    return [\n        mean(data),\n        sampleStdev(data),\n        Math.min(...data),\n        percentile(data,0.01),\n        percentile(data,0.025),\n        percentile(data,0.05),\n        percentile(data,0.10),\n        percentile(data,0.25),\n        percentile(data,0.50),\n        percentile(data,0.75),\n        percentile(data,0.90),\n        percentile(data,0.95),\n        percentile(data,0.975),\n        percentile(data,0.99),\n        Math.max(...data),\n    ];\n};\n\nconst binarySearch = (data, start, end, val) => {\n    if (data[start] > val) {\n        // If the value is smaller than all values\n        return start - 1;\n    }\n    else if (data[end] < val) {\n        // If the value is smaller than all values\n        return end;\n    }\n    else if (end > start) {\n        const mid = Math.floor(start + (end - start) / 2);\n\n        // If the element is present at the middle\n        // itself\n        if (data[mid] === val)\n            return mid;\n\n        // If element is smaller than mid, then\n        // it can only be present in left subarray\n        if (data[mid] > val)\n            return binarySearch(data, start, mid - 1, val);\n\n        // Else the element can only be present\n        // in right subarray\n        return binarySearch(data, mid + 1, end, val);\n    }\n\n    // We reach here when element is not\n    // present in array\n    return start;\n};\n\nconst getTargets = (data,target) => {\n    const data_sorted = data.slice();\n    data_sorted.sort(function(a, b){return a - b});\n    const countLT = binarySearch(data_sorted,0,data_sorted.length-1,target) + 1;\n    const countTot = data_sorted.length;\n    return 1.0 - countLT / countTot;\n};\n\nconst SimulationStatistics = () => {\n    let sims = useRecoilValue(simsState);\n    let simsRun = useRecoilValue(simsRunState);\n\n    const calcStats = useCallback((e) => {\n        const statistics = ['Mean','Standard Deviation','Min','1st Pctl','2.5th Pctl','5th Pctl','10th Pctl','25th Pctl','50th Pctl','75th Pctl','90th Pctl','95th Pctl','97.5th Pctl','99th Pctl','Max'];\n        const cocStats = getStats(sims[\"CashOnCash\"]);\n        const cfpupmStats = getStats(sims[\"CashFlowPerUnitPerMonth\"]);\n        const tiStats =  getStats(sims[\"TotalInvestment\"]);\n        \n        const statisticsItems = [];\n        let i = 0;\n        for (i=0; i < statistics.length; i++){\n            statisticsItems[i] = {'statistic': statistics[i],\n                            'CashOnCash': (cocStats[i]*100).toFixed(2) + '%',\n                            'CashFlowPerUnitPerMonth': '$' + cfpupmStats[i].toFixed(2),\n                            'TotalInvestment': '$' + tiStats[i].toFixed(0),\n                        };\n        }\n        \n        const statsiticsColumns = [{ key: 'column1', name: 'Statistic', fieldName: 'statistic', minWidth: 1, maxWidth: 100, isResizable: true },\n                        { key: 'column2', name: 'Cash On Cash', fieldName: 'CashOnCash', minWidth: 1, maxWidth: 100, isResizable: true },\n                        { key: 'column3', name: 'CF / Unit / Mo', fieldName: 'CashFlowPerUnitPerMonth', minWidth: 1, maxWidth: 100, isResizable: true },\n                        { key: 'column4', name: 'Total Investment', fieldName: 'TotalInvestment', minWidth: 1, maxWidth: 100, isResizable: true },\n                    ];\n    \n        return [statisticsItems, statsiticsColumns];\n    }, [sims]);\n\n    const calcTargets = useCallback((e) => {\n        const targetColumns = [{ key: 'column1', name: 'Description', fieldName: 'description', minWidth: 100, maxWidth: 200, isResizable: true },\n        { key: 'column2', name: 'Percent of Simulations', fieldName: 'pctOfSimulations', minWidth: 100, maxWidth: 200, isResizable: true },];\n        \n        const targetItems = [{'description':'Making more than 6% Cash on Cash','pctOfSimulations':(getTargets(sims[\"CashOnCash\"],0.06)*100).toFixed(2) + '%'},\n                            {'description':'Making more than 8% Cash on Cash','pctOfSimulations':(getTargets(sims[\"CashOnCash\"],0.08)*100).toFixed(2) + '%'},\n                            {'description':'Making more than 10% Cash on Cash','pctOfSimulations':(getTargets(sims[\"CashOnCash\"],0.10)*100).toFixed(2) + '%'},\n                            {'description':'Making more than 12% Cash on Cash','pctOfSimulations':(getTargets(sims[\"CashOnCash\"],0.12)*100).toFixed(2) + '%'},\n                            {'description':'Making more than $100 Per Unit Per Month','pctOfSimulations':(getTargets(sims[\"CashFlowPerUnitPerMonth\"],100)*100).toFixed(2) + '%'},\n                            {'description':'Making more than $200 Per Unit Per Month','pctOfSimulations':(getTargets(sims[\"CashFlowPerUnitPerMonth\"],200)*100).toFixed(2) + '%'},\n                        ];\n    \n        return [targetItems, targetColumns];\n    }, [sims]);\n\n    const [statisticsItems, statsiticsColumns] = calcStats(sims);\n    const [targetItems, targetColumns] = calcTargets(sims);\n\n    return (\n        <div align=\"center\">\n            {simsRun && <DetailsList\n                items={statisticsItems}\n                columns={statsiticsColumns}\n                selectionMode={0}/>}\n            {simsRun && <DetailsList\n                items={targetItems}\n                columns={targetColumns}\n                selectionMode={0}/>}\n        </div>\n    );\n};\n\nexport default SimulationStatistics;","import SimulationStatistics from './SimulationStatistics';\nexport default SimulationStatistics;","import SimulationOutput from './SimulationOutput';\nexport default SimulationOutput;","import CashOnCashHistGraph from '../CashOnCashHistGraph';\nimport CashFlowPerUnitHistGraph from '../CashFlowPerUnitHistGraph';\nimport SimulationStatistics from '../SimulationStatistics';\n\nconst SimulationOutput = () => {\n    return (\n        <div>\n            <SimulationStatistics/>\n            <CashOnCashHistGraph/>\n            <CashFlowPerUnitHistGraph/>\n        </div>\n    );\n};\n\nexport default SimulationOutput;","import AdvancedSimTabPanel from './AdvancedSimTabPanel';\nexport default AdvancedSimTabPanel;","import { useRecoilValue } from 'recoil';\nimport { Text } from '@fluentui/react/lib/Text';\n\nimport SimulationInput from '../SimulationInput';\nimport SimulationOutput from '../SimulationOutput';\n\nimport { simsRunState } from '../store';\n\nimport './style.css';\n\nconst AdvancedSimTabPanel = () => {\n    const simsRun = useRecoilValue(simsRunState);\n    return (\n        <div>\n            <div className='AdvancedSimTabTextBox-Div'>\n                <Text variant='xLarge'>Use of this tab</Text><br></br><br></br>\n                <Text variant='medium'>Most inputs allow for a distribution from which each simulation will sample. Those choices are normal, uniform, and a choice from a semicolon-separated list.</Text><br></br><br></br>\n                <Text variant='medium'><b>Normal:</b> The min and max represent the bounds of a 95% confidence interval in a normal distribution. That is, you'd expect the actual value of that input to have a 95% chance of falling within that range. Also, due to it being normal, you should expect the midpoint of that range to be most probable and values to become increasingly improbable as you get further from that midpoint.</Text><br></br>            \n                <Text variant='medium'><b>Uniform:</b> The min and max represent hard bounds of the range and every value within that range is equally probably.</Text><br></br>            \n                <Text variant='medium'><b>Choice:</b> Each of the semicolon-separated values given in the list will be selected with equal likelihood.</Text><br></br>            \n            </div>\n            <SimulationInput/>\n            {simsRun && <SimulationOutput/>}\n        </div>\n    );\n};\nexport default AdvancedSimTabPanel;","import CalculatorTabs from './CalculatorTabs';\nexport default CalculatorTabs;","import {\n    Tab,\n    Tabs,\n    TabList,\n    TabPanel,\n} from 'react-tabs';\n\nimport {\n    useCallback,\n    useState,\n    useMemo,\n} from 'react';\n\nimport {\n    useRecoilValue,\n} from 'recoil';\n\nimport {\n    themeState,\n} from '../store';\n\nimport 'react-tabs/style/react-tabs.css'\n\nimport BasicTabPanel from '../BasicTabPanel';\nimport AdvancedSimTabPanel from '../AdvancedSimTabPanel';\n\nconst CalculatorTabs = () => {\n    const theme = useRecoilValue(themeState);\n\n    const [selectedTab, setSelectedTab] = useState(0);\n    const onSelectTab = useCallback((idx, lastIdx, e) => {\n        setSelectedTab(idx);\n    }, [setSelectedTab]);\n\n    const basicTabStyle = useMemo(() => {\n        if (selectedTab === 0) {\n            return {\n                backgroundColor: theme.palette.white,\n                color: theme.palette.black,\n                borderBottom: '1px solid '+theme.palette.white,\n            };\n        }\n        return {\n            backgroundColor: theme.palette.white,\n            color: theme.palette.black,\n            borderBottom: '1px solid #aaa',\n        };\n    }, [theme, selectedTab]);\n\n    const advancedTabStyle = useMemo(() => {\n        if (selectedTab === 1) {\n            return {\n                backgroundColor: theme.palette.white,\n                color: theme.palette.black,\n                borderBottom: '1px solid '+theme.palette.white,\n            };\n        }\n        return {\n            backgroundColor: theme.palette.white,\n            color: theme.palette.black,\n            borderBottom: '1px solid #aaa',\n        };\n    }, [theme, selectedTab]);\n\n    return (\n        <Tabs\n            onSelect={onSelectTab}\n        >\n            <TabList>\n                <Tab style={basicTabStyle}>\n                    Basic\n                </Tab>\n                <Tab style={advancedTabStyle}>\n                    Advanced Simulations\n                </Tab>\n            </TabList>\n            <TabPanel>\n                <BasicTabPanel/>\n            </TabPanel>\n            <TabPanel>\n                <AdvancedSimTabPanel/>\n            </TabPanel>\n        </Tabs>\n    );\n};\n\nexport default CalculatorTabs;\n","import LinkCreator from './LinkCreator';\nexport default LinkCreator;","\nimport './style.css';\n\nconst LinkCreator = () => {\n\n    \n    /*\n    let a = {};\n    a.property = \"hello\";\n    let e = btoa(JSON.stringify(a));\n    console.log(\"encoded\", e);\n    let d = JSON.parse(atob(e));\n    console.log(\"decoded\", d);\n    */\n   \n    return (\n        <div className=\"LinkCreator-Div\">\n            \n        </div>\n    );\n};\n\nexport default LinkCreator;","import AppContainer from './AppContainer';\nexport default AppContainer;","import {\n    useEffect,\n} from 'react';\n\nimport {\n    useRecoilState,\n    useSetRecoilState,\n} from 'recoil';\n\nimport {\n    loadTheme,\n} from '@fluentui/react';\n\nimport LZUTF8 from 'lzutf8';\n\nimport Header from '../Header/Header';\nimport ForecastPanel from '../ForecastPanel';\nimport PropertyDetails from '../PropertyDetails';\nimport CalculatorTabs from '../CalculatorTabs';\nimport LinkCreator from '../LinkCreator';\n\nimport {\n    themeState,\n    addressState,\n    urlState,\n    purchasePriceState,\n    downPaymentState,\n    interestRateState,\n    mortgageYearsState,\n    mortgagePaymentsPerYearState,\n    closingCostsState,\n    repairsState,\n    propertyTaxState,\n    propertyTaxFreqState,\n    insuranceState,\n    insuranceFreqState,\n    expenseUtilitiesState,\n    managementState,\n    leasingCostsState,\n    avgOccupancyState,\n    maintenanceState,\n    incomePerUnitState,\n    numUnitsState,\n    vacancyRateState,\n    incomeUtilitiesState,\n    numInvestorsState,\n    brrrrState,\n    loanToValueState,\n    afterRepairValueState,\n    forecastState,\n    annRevIncState,\n    annOpExpIncState,\n    annReinvRetState,\n    annApprState,\n    purchasePriceDistState,\n    interestRateDistState,\n    closingCostsDistState,\n    repairsDistState,\n    propertyTaxDistState,\n    insuranceDistState,\n    expenseUtilitiesDistState,\n    managementDistState,\n    leasingCostsDistState,\n    avgOccupancyDistState,\n    maintenanceDistState,\n    incomePerUnitDistState,\n    vacancyRateDistState,\n    incomeUtilitiesDistState,\n    afterRepairValueDistState,\n    purchasePriceMinState,\n    interestRateMinState,\n    closingCostsMinState,\n    repairsMinState,\n    propertyTaxMinState,\n    insuranceMinState,\n    expenseUtilitiesMinState,\n    managementMinState,\n    leasingCostsMinState,\n    avgOccupancyMinState,\n    maintenanceMinState,\n    incomePerUnitMinState,\n    vacancyRateMinState,\n    incomeUtilitiesMinState,\n    afterRepairValueMinState,\n    purchasePriceMaxState,\n    interestRateMaxState,\n    closingCostsMaxState,\n    repairsMaxState,\n    propertyTaxMaxState,\n    insuranceMaxState,\n    expenseUtilitiesMaxState,\n    managementMaxState,\n    leasingCostsMaxState,\n    avgOccupancyMaxState,\n    maintenanceMaxState,\n    incomePerUnitMaxState,\n    vacancyRateMaxState,\n    incomeUtilitiesMaxState,\n    afterRepairValueMaxState,\n    purchasePriceChoiceState,\n    interestRateChoiceState,\n    closingCostsChoiceState,\n    repairsChoiceState,\n    propertyTaxChoiceState,\n    insuranceChoiceState,\n    expenseUtilitiesChoiceState,\n    managementChoiceState,\n    leasingCostsChoiceState,\n    avgOccupancyChoiceState,\n    maintenanceChoiceState,\n    incomePerUnitChoiceState,\n    vacancyRateChoiceState,\n    incomeUtilitiesChoiceState,\n    afterRepairValueChoiceState,   \n} from '../store';\n\nimport './style.css';\n\nconst AppContainer = () => {\n    const [theme, setTheme] = useRecoilState(themeState);\n    useEffect(() => {\n        loadTheme(theme);\n        document.body.style = 'background:'+theme.palette.white+';';\n    }, [theme, setTheme]);\n\n    const setAddress = useSetRecoilState(addressState);\n    const setUrl = useSetRecoilState(urlState);\n    const setPurchasePrice = useSetRecoilState(purchasePriceState);\n    const setDownPayment = useSetRecoilState(downPaymentState);\n    const setInterestRate = useSetRecoilState(interestRateState);\n    const setMortgageYears = useSetRecoilState(mortgageYearsState);\n    const setMortgagePaymentsPerYear = useSetRecoilState(mortgagePaymentsPerYearState);\n    const setClosingCosts = useSetRecoilState(closingCostsState);\n    const setRepairs = useSetRecoilState(repairsState);\n    const setPropertyTax = useSetRecoilState(propertyTaxState);\n    const setPropertyTaxFreq = useSetRecoilState(propertyTaxFreqState);\n    const setInsurance = useSetRecoilState(insuranceState);\n    const setInsuranceFreq = useSetRecoilState(insuranceFreqState);\n    const setExpenseUtilities = useSetRecoilState(expenseUtilitiesState);\n    const setManagement = useSetRecoilState(managementState);\n    const setLeasingCosts = useSetRecoilState(leasingCostsState);\n    const setAvgOccupancy = useSetRecoilState(avgOccupancyState);\n    const setMaintenance = useSetRecoilState(maintenanceState);\n    const setIncomePerUnit = useSetRecoilState(incomePerUnitState);\n    const setNumUnits = useSetRecoilState(numUnitsState);\n    const setVacancyRate = useSetRecoilState(vacancyRateState);\n    const setIncomeUtilities = useSetRecoilState(incomeUtilitiesState);\n    const setNumInvestors = useSetRecoilState(numInvestorsState);\n    const setLoanToValue = useSetRecoilState(loanToValueState);\n    const setAfterRepairValue = useSetRecoilState(afterRepairValueState);    \n    const setBrrrr = useSetRecoilState(brrrrState);\n    const setForecast = useSetRecoilState(forecastState);\n    const setAnnRevInc = useSetRecoilState(annRevIncState);\n    const setAnnOpExpInc = useSetRecoilState(annOpExpIncState);\n    const setAnnReinvRet = useSetRecoilState(annReinvRetState);\n    const setAnnAppr = useSetRecoilState(annApprState);\n    const setPurchasePriceDist = useSetRecoilState(purchasePriceDistState);\n    const setInterestRateDist = useSetRecoilState(interestRateDistState);\n    const setClosingCostsDist = useSetRecoilState(closingCostsDistState);\n    const setRepairsDist = useSetRecoilState(repairsDistState);\n    const setPropertyTaxDist = useSetRecoilState(propertyTaxDistState);\n    const setInsuranceDist = useSetRecoilState(insuranceDistState);\n    const setExpenseUtilitiesDist = useSetRecoilState(expenseUtilitiesDistState);\n    const setManagementDist = useSetRecoilState(managementDistState);\n    const setLeasingCostsDist = useSetRecoilState(leasingCostsDistState);\n    const setAvgOccupancyDist = useSetRecoilState(avgOccupancyDistState);\n    const setMaintenanceDist = useSetRecoilState(maintenanceDistState);\n    const setIncomePerUnitDist = useSetRecoilState(incomePerUnitDistState);\n    const setVacancyRateDist = useSetRecoilState(vacancyRateDistState);\n    const setIncomeUtilitiesDist = useSetRecoilState(incomeUtilitiesDistState);\n    const setAfterRepairValueDist = useSetRecoilState(afterRepairValueDistState);\n    const setPurchasePriceMin = useSetRecoilState(purchasePriceMinState);\n    const setInterestRateMin = useSetRecoilState(interestRateMinState);\n    const setClosingCostsMin = useSetRecoilState(closingCostsMinState);\n    const setRepairsMin = useSetRecoilState(repairsMinState);\n    const setPropertyTaxMin = useSetRecoilState(propertyTaxMinState);\n    const setInsuranceMin = useSetRecoilState(insuranceMinState);\n    const setExpenseUtilitiesMin = useSetRecoilState(expenseUtilitiesMinState);\n    const setManagementMin = useSetRecoilState(managementMinState);\n    const setLeasingCostsMin = useSetRecoilState(leasingCostsMinState);\n    const setAvgOccupancyMin = useSetRecoilState(avgOccupancyMinState);\n    const setMaintenanceMin = useSetRecoilState(maintenanceMinState);\n    const setIncomePerUnitMin = useSetRecoilState(incomePerUnitMinState);\n    const setVacancyRateMin = useSetRecoilState(vacancyRateMinState);\n    const setIncomeUtilitiesMin = useSetRecoilState(incomeUtilitiesMinState);\n    const setAfterRepairValueMin = useSetRecoilState(afterRepairValueMinState);\n    const setPurchasePriceMax = useSetRecoilState(purchasePriceMaxState);\n    const setInterestRateMax = useSetRecoilState(interestRateMaxState);\n    const setClosingCostsMax = useSetRecoilState(closingCostsMaxState);\n    const setRepairsMax = useSetRecoilState(repairsMaxState);\n    const setPropertyTaxMax = useSetRecoilState(propertyTaxMaxState);\n    const setInsuranceMax = useSetRecoilState(insuranceMaxState);\n    const setExpenseUtilitiesMax = useSetRecoilState(expenseUtilitiesMaxState);\n    const setManagementMax = useSetRecoilState(managementMaxState);\n    const setLeasingCostsMax = useSetRecoilState(leasingCostsMaxState);\n    const setAvgOccupancyMax = useSetRecoilState(avgOccupancyMaxState);\n    const setMaintenanceMax = useSetRecoilState(maintenanceMaxState);\n    const setIncomePerUnitMax = useSetRecoilState(incomePerUnitMaxState);\n    const setVacancyRateMax = useSetRecoilState(vacancyRateMaxState);\n    const setIncomeUtilitiesMax = useSetRecoilState(incomeUtilitiesMaxState);\n    const setAfterRepairValueMax = useSetRecoilState(afterRepairValueMaxState);\n    const setPurchasePriceChoice = useSetRecoilState(purchasePriceChoiceState);\n    const setInterestRateChoice = useSetRecoilState(interestRateChoiceState);\n    const setClosingCostsChoice = useSetRecoilState(closingCostsChoiceState);\n    const setRepairsChoice = useSetRecoilState(repairsChoiceState);\n    const setPropertyTaxChoice = useSetRecoilState(propertyTaxChoiceState);\n    const setInsuranceChoice = useSetRecoilState(insuranceChoiceState);\n    const setExpenseUtilitiesChoice = useSetRecoilState(expenseUtilitiesChoiceState);\n    const setManagementChoice = useSetRecoilState(managementChoiceState);\n    const setLeasingCostsChoice = useSetRecoilState(leasingCostsChoiceState);\n    const setAvgOccupancyChoice = useSetRecoilState(avgOccupancyChoiceState);\n    const setMaintenanceChoice = useSetRecoilState(maintenanceChoiceState);\n    const setIncomePerUnitChoice = useSetRecoilState(incomePerUnitChoiceState);\n    const setVacancyRateChoice = useSetRecoilState(vacancyRateChoiceState);\n    const setIncomeUtilitiesChoice = useSetRecoilState(incomeUtilitiesChoiceState);\n    const setAfterRepairValueChoice = useSetRecoilState(afterRepairValueChoiceState);            \n\n    useEffect(() => {\n        const u = new URL(window.location.href);\n        const params = new URLSearchParams(u.search);\n        const s = params.get('s');\n        if (s === null) return;\n\n        try {\n            const {\n                address = undefined,\n                url = undefined,\n                purchasePrice = undefined,\n                downPayment,\n                interestRate = undefined,\n                mortgageYears = undefined,\n                mortgagePaymentsPerYear = undefined,\n                closingCosts = undefined,\n                repairs = undefined,\n                propertyTax = undefined,\n                propertyTaxFreq = undefined,\n                insurance = undefined,\n                insuranceFreq = undefined,\n                expenseUtilities = undefined,\n                management = undefined,\n                leasingCosts = undefined,\n                avgOccupancy = undefined,\n                maintenance = undefined,\n                incomePerUnit = undefined,\n                numUnits = undefined,\n                vacancyRate = undefined,\n                incomeUtilities = undefined,\n                numInvestors = undefined,\n                loanToValue = undefined,\n                afterRepairValue = undefined,\n                brrrr = undefined,\n                forecast = undefined,\n                annRevInc = undefined,\n                annOpExpInc = undefined,\n                annReinvRet = undefined,\n                annAppr = undefined,\n                purchasePriceDist = undefined,\n                interestRateDist = undefined,\n                closingCostsDist = undefined,\n                repairsDist = undefined,\n                propertyTaxDist = undefined,\n                insuranceDist = undefined,\n                expenseUtilitiesDist = undefined,\n                managementDist = undefined,\n                leasingCostsDist = undefined,\n                avgOccupancyDist = undefined,\n                maintenanceDist = undefined,\n                incomePerUnitDist = undefined,\n                vacancyRateDist = undefined,\n                incomeUtilitiesDist = undefined,\n                afterRepairValueDist = undefined,   \n                purchasePriceMin = undefined,\n                interestRateMin = undefined,\n                closingCostsMin = undefined,\n                repairsMin = undefined,\n                propertyTaxMin = undefined,\n                insuranceMin = undefined,\n                expenseUtilitiesMin = undefined,\n                managementMin = undefined,\n                leasingCostsMin = undefined,\n                avgOccupancyMin = undefined,\n                maintenanceMin = undefined,\n                incomePerUnitMin = undefined,\n                vacancyRateMin = undefined,\n                incomeUtilitiesMin = undefined,\n                afterRepairValueMin = undefined,   \n                purchasePriceMax = undefined,\n                interestRateMax = undefined,\n                closingCostsMax = undefined,\n                repairsMax = undefined,\n                propertyTaxMax = undefined,\n                insuranceMax = undefined,\n                expenseUtilitiesMax = undefined,\n                managementMax = undefined,\n                leasingCostsMax = undefined,\n                avgOccupancyMax = undefined,\n                maintenanceMax = undefined,\n                incomePerUnitMax = undefined,\n                vacancyRateMax = undefined,\n                incomeUtilitiesMax = undefined,\n                afterRepairValueMax = undefined,   \n                purchasePriceChoice = undefined,\n                interestRateChoice = undefined,\n                closingCostsChoice = undefined,\n                repairsChoice = undefined,\n                propertyTaxChoice = undefined,\n                insuranceChoice = undefined,\n                expenseUtilitiesChoice = undefined,\n                managementChoice = undefined,\n                leasingCostsChoice = undefined,\n                avgOccupancyChoice = undefined,\n                maintenanceChoice = undefined,\n                incomePerUnitChoice = undefined,\n                vacancyRateChoice = undefined,\n                incomeUtilitiesChoice = undefined,\n                afterRepairValueChoice = undefined,                                                                \n            } = JSON.parse(LZUTF8.decompress(LZUTF8.decodeBase64(s)));\n\n            if (address !== undefined) setAddress(address);\n            if (url !== undefined) setUrl(url);\n            if (purchasePrice !== undefined) setPurchasePrice(purchasePrice);\n            if (downPayment !== undefined) setDownPayment(downPayment);\n            if (interestRate !== undefined) setInterestRate(interestRate);\n            if (mortgageYears !== undefined) setMortgageYears(mortgageYears);\n            if (mortgagePaymentsPerYear !== undefined) setMortgagePaymentsPerYear(mortgagePaymentsPerYear);\n            if (closingCosts !== undefined) setClosingCosts(closingCosts);\n            if (repairs !== undefined) setRepairs(repairs);\n            if (propertyTax !== undefined) setPropertyTax(propertyTax);\n            if (propertyTaxFreq !== undefined) setPropertyTaxFreq(propertyTaxFreq);\n            if (insurance !== undefined) setInsurance(insurance);\n            if (insuranceFreq !== undefined) setInsuranceFreq(insuranceFreq);\n            if (expenseUtilities !== undefined) setExpenseUtilities(expenseUtilities);\n            if (management !== undefined) setManagement(management);\n            if (leasingCosts !== undefined) setLeasingCosts(leasingCosts);\n            if (avgOccupancy !== undefined) setAvgOccupancy(avgOccupancy);\n            if (maintenance !== undefined) setMaintenance(maintenance);\n            if (incomePerUnit !== undefined) setIncomePerUnit(incomePerUnit);\n            if (numUnits !== undefined) setNumUnits(numUnits);\n            if (vacancyRate !== undefined) setVacancyRate(vacancyRate);\n            if (incomeUtilities !== undefined) setIncomeUtilities(incomeUtilities);\n            if (numInvestors !== undefined) setNumInvestors(numInvestors);\n            if (loanToValue !== undefined) setLoanToValue(loanToValue);\n            if (afterRepairValue !== undefined) setAfterRepairValue(afterRepairValue);\n            if (brrrr !== undefined) setBrrrr(brrrr);\n            if (forecast !== undefined) setForecast(forecast);\n            if (annRevInc !== undefined) setAnnRevInc(annRevInc);\n            if (annOpExpInc !== undefined) setAnnOpExpInc(annOpExpInc);\n            if (annReinvRet !== undefined) setAnnReinvRet(annReinvRet);\n            if (annAppr !== undefined) setAnnAppr(annAppr);\n            if (purchasePriceDist !== undefined) setPurchasePriceDist(purchasePriceDist);\n            if (interestRateDist !== undefined) setInterestRateDist(interestRateDist);\n            if (closingCostsDist !== undefined) setClosingCostsDist(closingCostsDist);\n            if (repairsDist !== undefined) setRepairsDist(repairsDist);\n            if (propertyTaxDist !== undefined) setPropertyTaxDist(propertyTaxDist);\n            if (insuranceDist !== undefined) setInsuranceDist(insuranceDist);\n            if (expenseUtilitiesDist !== undefined) setExpenseUtilitiesDist(expenseUtilitiesDist);\n            if (managementDist !== undefined) setManagementDist(managementDist);\n            if (leasingCostsDist !== undefined) setLeasingCostsDist(leasingCostsDist);\n            if (avgOccupancyDist !== undefined) setAvgOccupancyDist(avgOccupancyDist);\n            if (maintenanceDist !== undefined) setMaintenanceDist(maintenanceDist);\n            if (incomePerUnitDist !== undefined) setIncomePerUnitDist(incomePerUnitDist);\n            if (vacancyRateDist !== undefined) setVacancyRateDist(vacancyRateDist);\n            if (incomeUtilitiesDist !== undefined) setIncomeUtilitiesDist(incomeUtilitiesDist);\n            if (afterRepairValueDist !== undefined) setAfterRepairValueDist(afterRepairValueDist);  \n            if (purchasePriceMin !== undefined) setPurchasePriceMin(purchasePriceMin);\n            if (interestRateMin !== undefined) setInterestRateMin(interestRateMin);\n            if (closingCostsMin !== undefined) setClosingCostsMin(closingCostsMin);\n            if (repairsMin !== undefined) setRepairsMin(repairsMin);\n            if (propertyTaxMin !== undefined) setPropertyTaxMin(propertyTaxMin);\n            if (insuranceMin !== undefined) setInsuranceMin(insuranceMin);\n            if (expenseUtilitiesMin !== undefined) setExpenseUtilitiesMin(expenseUtilitiesMin);\n            if (managementMin !== undefined) setManagementMin(managementMin);\n            if (leasingCostsMin !== undefined) setLeasingCostsMin(leasingCostsMin);\n            if (avgOccupancyMin !== undefined) setAvgOccupancyMin(avgOccupancyMin);\n            if (maintenanceMin !== undefined) setMaintenanceMin(maintenanceMin);\n            if (incomePerUnitMin !== undefined) setIncomePerUnitMin(incomePerUnitMin);\n            if (vacancyRateMin !== undefined) setVacancyRateMin(vacancyRateMin);\n            if (incomeUtilitiesMin !== undefined) setIncomeUtilitiesMin(incomeUtilitiesMin);\n            if (afterRepairValueMin !== undefined) setAfterRepairValueMin(afterRepairValueMin);  \n            if (purchasePriceMax !== undefined) setPurchasePriceMax(purchasePriceMax);\n            if (interestRateMax !== undefined) setInterestRateMax(interestRateMax);\n            if (closingCostsMax !== undefined) setClosingCostsMax(closingCostsMax);\n            if (repairsMax !== undefined) setRepairsMax(repairsMax);\n            if (propertyTaxMax !== undefined) setPropertyTaxMax(propertyTaxMax);\n            if (insuranceMax !== undefined) setInsuranceMax(insuranceMax);\n            if (expenseUtilitiesMax !== undefined) setExpenseUtilitiesMax(expenseUtilitiesMax);\n            if (managementMax !== undefined) setManagementMax(managementMax);\n            if (leasingCostsMax !== undefined) setLeasingCostsMax(leasingCostsMax);\n            if (avgOccupancyMax !== undefined) setAvgOccupancyMax(avgOccupancyMax);\n            if (maintenanceMax !== undefined) setMaintenanceMax(maintenanceMax);\n            if (incomePerUnitMax !== undefined) setIncomePerUnitMax(incomePerUnitMax);\n            if (vacancyRateMax !== undefined) setVacancyRateMax(vacancyRateMax);\n            if (incomeUtilitiesMax !== undefined) setIncomeUtilitiesMax(incomeUtilitiesMax);\n            if (afterRepairValueMax !== undefined) setAfterRepairValueMax(afterRepairValueMax);  \n            if (purchasePriceChoice !== undefined) setPurchasePriceChoice(purchasePriceChoice);\n            if (interestRateChoice !== undefined) setInterestRateChoice(interestRateChoice);\n            if (closingCostsChoice !== undefined) setClosingCostsChoice(closingCostsChoice);\n            if (repairsChoice !== undefined) setRepairsChoice(repairsChoice);\n            if (propertyTaxChoice !== undefined) setPropertyTaxChoice(propertyTaxChoice);\n            if (insuranceChoice !== undefined) setInsuranceChoice(insuranceChoice);\n            if (expenseUtilitiesChoice !== undefined) setExpenseUtilitiesChoice(expenseUtilitiesChoice);\n            if (managementChoice !== undefined) setManagementChoice(managementChoice);\n            if (leasingCostsChoice !== undefined) setLeasingCostsChoice(leasingCostsChoice);\n            if (avgOccupancyChoice !== undefined) setAvgOccupancyChoice(avgOccupancyChoice);\n            if (maintenanceChoice !== undefined) setMaintenanceChoice(maintenanceChoice);\n            if (incomePerUnitChoice !== undefined) setIncomePerUnitChoice(incomePerUnitChoice);\n            if (vacancyRateChoice !== undefined) setVacancyRateChoice(vacancyRateChoice);\n            if (incomeUtilitiesChoice !== undefined) setIncomeUtilitiesChoice(incomeUtilitiesChoice);\n            if (afterRepairValueChoice !== undefined) setAfterRepairValueChoice(afterRepairValueChoice);                                                \n        }\n        catch (error) {\n            // ignore setting values\n        }\n    }, [\n        setAddress,\n        setUrl,\n        setPurchasePrice,\n        setDownPayment,\n        setInterestRate,\n        setMortgageYears,\n        setMortgagePaymentsPerYear,\n        setClosingCosts,\n        setRepairs,\n        setPropertyTax,\n        setPropertyTaxFreq,\n        setInsurance,\n        setInsuranceFreq,\n        setExpenseUtilities,\n        setManagement,\n        setLeasingCosts,\n        setAvgOccupancy,\n        setMaintenance,\n        setIncomePerUnit,\n        setNumUnits,\n        setVacancyRate,\n        setIncomeUtilities,\n        setNumInvestors,\n        setLoanToValue,\n        setAfterRepairValue,\n        setBrrrr,\n        setForecast,\n        setAnnRevInc,\n        setAnnOpExpInc,\n        setAnnReinvRet,\n        setAnnAppr,\n        setPurchasePriceDist,\n        setInterestRateDist,\n        setClosingCostsDist,\n        setRepairsDist,\n        setPropertyTaxDist,\n        setInsuranceDist,\n        setExpenseUtilitiesDist,\n        setManagementDist,\n        setLeasingCostsDist,\n        setAvgOccupancyDist,\n        setMaintenanceDist,\n        setIncomePerUnitDist,\n        setVacancyRateDist,\n        setIncomeUtilitiesDist,\n        setAfterRepairValueDist,    \n        setPurchasePriceMin,\n        setInterestRateMin,\n        setClosingCostsMin,\n        setRepairsMin,\n        setPropertyTaxMin,\n        setInsuranceMin,\n        setExpenseUtilitiesMin,\n        setManagementMin,\n        setLeasingCostsMin,\n        setAvgOccupancyMin,\n        setMaintenanceMin,\n        setIncomePerUnitMin,\n        setVacancyRateMin,\n        setIncomeUtilitiesMin,\n        setAfterRepairValueMin,    \n        setPurchasePriceMax,\n        setInterestRateMax,\n        setClosingCostsMax,\n        setRepairsMax,\n        setPropertyTaxMax,\n        setInsuranceMax,\n        setExpenseUtilitiesMax,\n        setManagementMax,\n        setLeasingCostsMax,\n        setAvgOccupancyMax,\n        setMaintenanceMax,\n        setIncomePerUnitMax,\n        setVacancyRateMax,\n        setIncomeUtilitiesMax,\n        setAfterRepairValueMax,    \n        setPurchasePriceChoice,\n        setInterestRateChoice,\n        setClosingCostsChoice,\n        setRepairsChoice,\n        setPropertyTaxChoice,\n        setInsuranceChoice,\n        setExpenseUtilitiesChoice,\n        setManagementChoice,\n        setLeasingCostsChoice,\n        setAvgOccupancyChoice,\n        setMaintenanceChoice,\n        setIncomePerUnitChoice,\n        setVacancyRateChoice,\n        setIncomeUtilitiesChoice,\n        setAfterRepairValueChoice,                                \n    ]);\n\n    return (\n        <div style={{backgroundColor: (theme.palette.white)}}>\n            <Header/>\n            <ForecastPanel/>\n            <LinkCreator/>\n            <PropertyDetails/>\n            <CalculatorTabs/>\n        </div>\n    );\n};\n\nexport default AppContainer;\n","import {\n    RecoilRoot,\n} from 'recoil';\n\nimport AppContainer from '../AppContainer';\n\nimport './style.css';\n\nimport { initializeIcons } from '@uifabric/icons';\ninitializeIcons();\n\nconst App = () => {\n    return (\n        <RecoilRoot>\n            <div className=\"App\">\n                <AppContainer/>\n            </div>\n        </RecoilRoot>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}